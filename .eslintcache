[{"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/index.tsx":"1","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/reportWebVitals.ts":"2","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/App.tsx":"3","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/index.ts":"4","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/modules/session.ts":"5","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/utils/constants.ts":"6","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/components/hocs/ProtectedRoute.tsx":"7","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Login/index.tsx":"8","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/api/User.ts":"9","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/api/Common.ts":"10","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/modules/call.ts":"11","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Dashboard/index.tsx":"12","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/selectors.ts":"13","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Call/index.tsx":"14","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Call/RoomClient.js":"15","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/modules/connection.ts":"16","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/components/menu/Sidebar.tsx":"17","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/utils/utils.ts":"18","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Call/useUserMedia.ts":"19","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/CallFeedback/index.tsx":"20"},{"size":647,"mtime":1611778860986,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1611065414704,"results":"23","hashOfConfig":"22"},{"size":2350,"mtime":1611780337457,"results":"24","hashOfConfig":"22"},{"size":945,"mtime":1611148817492,"results":"25","hashOfConfig":"22"},{"size":1569,"mtime":1611153156296,"results":"26","hashOfConfig":"22"},{"size":1951,"mtime":1612189174250,"results":"27","hashOfConfig":"22"},{"size":658,"mtime":1611065414698,"results":"28","hashOfConfig":"22"},{"size":2714,"mtime":1611794723464,"results":"29","hashOfConfig":"22"},{"size":1119,"mtime":1611794732718,"results":"30","hashOfConfig":"22"},{"size":1954,"mtime":1612189173551,"results":"31","hashOfConfig":"22"},{"size":934,"mtime":1613668098057,"results":"32","hashOfConfig":"22"},{"size":7946,"mtime":1613668087925,"results":"33","hashOfConfig":"22"},{"size":1067,"mtime":1613668525141,"results":"34","hashOfConfig":"22"},{"size":13900,"mtime":1613669979328,"results":"35","hashOfConfig":"22"},{"size":6973,"mtime":1613660177735,"results":"36","hashOfConfig":"22"},{"size":1100,"mtime":1611795033032,"results":"37","hashOfConfig":"22"},{"size":1210,"mtime":1612189173616,"results":"38","hashOfConfig":"22"},{"size":1280,"mtime":1613669254924,"results":"39","hashOfConfig":"22"},{"size":738,"mtime":1611243263638,"results":"40","hashOfConfig":"22"},{"size":1442,"mtime":1612189173975,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1xn4t4d",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/index.tsx",[],["89","90"],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/reportWebVitals.ts",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/App.tsx",["91","92","93","94"],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ConnectedRouter, push } from \"connected-react-router\";\nimport { Layout } from \"antd\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { History } from \"history\";\nimport ProtectedRoute, {\n  ProtectedRouteProps,\n} from \"./components/hocs/ProtectedRoute\";\nimport LoginPage from \"src/pages/Login\";\nimport { ROUTES } from \"./utils/constants\";\nimport { useEffect } from \"react\";\nimport { fetchConnections } from \"./redux/modules/connection\";\nimport Sidebar from \"./components/menu/Sidebar\";\n\nconst { Footer, Header } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  session: state.session,\n  pathname: state.router.location.pathname,\n});\nconst mapDispatchToProps = { fetchConnections, push };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction App({\n  session,\n  history,\n  pathname,\n  fetchConnections,\n  push,\n}: PropsFromRedux & { history: History }) {\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\n    isAuthenticated: session.authInfo.token !== \"\", // TODO: improve this later\n    authenticationPath: \"/login\",\n  };\n\n  useEffect(() => {\n    if (session.isLoggedIn) fetchConnections();\n  }, [session.isLoggedIn]);\n\n  return (\n    <ConnectedRouter history={history}>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Sidebar\n          navigate={(path: string) => push(path)}\n          isVisible={session.isLoggedIn}\n          pathname={pathname}\n        />\n        <Layout>\n          <Switch>\n            <Route exact path=\"/login\" component={LoginPage}></Route>\n            {ROUTES.map((route) => (\n              <ProtectedRoute\n                exact\n                {...defaultProtectedRouteProps}\n                path={route.path}\n                component={route.component}\n                key={route.label}\n              ></ProtectedRoute>\n            ))}\n            <Redirect to=\"/login\" />\n          </Switch>\n          {/* <Footer style={{ textAlign: \"center\" }}>\n            Connect Â©2021 Created by Ameelio Inc.\n          </Footer> */}\n        </Layout>\n      </Layout>\n    </ConnectedRouter>\n  );\n}\n\nexport default connector(App);\n","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/index.ts",["95"],"import { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport { combineReducers } from \"redux\";\nimport { History, createBrowserHistory } from \"history\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { sessionReducer } from \"./modules/session\";\nimport { callSlice } from \"./modules/call\";\nimport { connectionSlice } from \"./modules/connection\";\n\nexport const history = createBrowserHistory();\n\nexport const createRootReducer = (history: History) =>\n  combineReducers({\n    session: sessionReducer,\n    calls: callSlice.reducer,\n    connections: connectionSlice.reducer,\n    router: connectRouter(history),\n  });\nexport const rootReducer = createRootReducer(history);\n\nexport const Store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(routerMiddleware(history)),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/modules/session.ts",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/utils/constants.ts",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/components/hocs/ProtectedRoute.tsx",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Login/index.tsx",["96","97"],"import React, { useState, ReactElement } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { Input, Layout, Button, Form, Checkbox, Typography, Card } from \"antd\";\n\n// import { ReactComponent as Operator } from \"src/assets/avatars/bald.svg\";\n// import { ReactComponent as Supervisor } from \"src/assets/avatars/woman.svg\";\n// import { ReactComponent as Admin } from \"src/assets/avatars/professor.svg\";\n// import { ReactComponent as Investigator } from \"src/assets/avatars/investigator.svg\";\n// import { OPERATOR, SUPERVISOR, ADMIN, INVESTIGATOR } from \"src/data/sample\";\n\nimport \"./index.css\";\nimport { Redirect } from \"react-router\";\nimport { loginWithCredentials } from \"src/api/User\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\n\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  session: state.session,\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction LoginContainer({ session }: PropsFromRedux): ReactElement {\n  const [error, setError] = useState(\"\");\n\n  if (session.isLoggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const onFinish = async (values: any) => {\n    try {\n      await loginWithCredentials({\n        inmateNumber: values.inmateNumber,\n        pin: values.pin,\n      });\n    } catch (err) {\n      setError(\"Invalid ID or Pin Code\");\n    }\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    setError(\"Invalid ID or Pin Code\");\n  };\n\n  return (\n    <Content>\n      <Card className=\"login-form-container\">\n        <Typography.Title level={3}>Welcome to Pathways!</Typography.Title>\n        <Form\n          name=\"basic\"\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          className=\"login-form\"\n        >\n          <Form.Item\n            name=\"inmateNumber\"\n            rules={[{ required: true, message: \"Inmate ID is required.\" }]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Inmate Number\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"pin\"\n            rules={[{ required: true, message: \"Password is required.\" }]}\n          >\n            <Input.Password\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Pin Code\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" size=\"large\" block>\n              Log In\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    </Content>\n  );\n}\n\nexport default connector(LoginContainer);\n","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/api/User.ts",["98"],"import { API_URL, fetchTimeout } from \"./Common\";\nimport url from \"url\";\nimport { setSession } from \"src/redux/modules/session\";\nimport { Store } from \"src/redux\";\nimport { REMEMBER_TOKEN_KEY, TOKEN_KEY } from \"src/utils/constants\";\nimport { User } from \"src/types/User\";\n\nasync function initializeSession(body: any) {\n  const user = body.data.user as User;\n  const { token, id } = body.data.user;\n  Store.dispatch(\n    setSession({\n      user,\n      authInfo: { token, id, type: \"inmate\" },\n      isLoggedIn: true,\n    })\n  );\n\n  // TO\n  localStorage.setItem(TOKEN_KEY, token);\n}\n\nexport async function loginWithCredentials(cred: {\n  inmateNumber: string;\n  pin: string;\n}): Promise<void> {\n  const response = await fetchTimeout(url.resolve(API_URL, \"inmate/auth\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      node_id: 2,\n      inmate_number: cred.inmateNumber,\n      pin: cred.pin,\n    }),\n  });\n  const body = await response.json();\n  if (body.status !== 200) throw body;\n  await initializeSession(body);\n}\n","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/api/Common.ts",["99"],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/modules/call.ts",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Dashboard/index.tsx",["100","101","102","103","104","105"],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/selectors.ts",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Call/index.tsx",["106","107","108","109"],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Call/RoomClient.js",[],["110","111"],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/modules/connection.ts",["112"],"import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { Connection } from \"src/types/Connection\";\nimport { Inmate } from \"src/types/User\";\nimport { fetchAuthenticated } from \"src/api/Common\";\n\nexport const fetchConnections = createAsyncThunk(\n  \"connections/fetchAll\",\n  async () => {\n    const body = await fetchAuthenticated(`connections`);\n    if (body.status !== 200) {\n      throw body;\n    }\n\n    const connections = ((body.data as Record<string, unknown>)\n      .connections as Connection[]).map((inmate) => camelcaseKeys(inmate));\n\n    return connections;\n  }\n);\n\nexport const connectionAdapter = createEntityAdapter<Connection>();\n\nexport const connectionSlice = createSlice({\n  name: \"connection\",\n  initialState: connectionAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchConnections.fulfilled, (state, action) => {\n      connectionAdapter.setAll(state, action.payload);\n    });\n  },\n});\n\nexport const connectionActions = connectionSlice.actions;\n","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/components/menu/Sidebar.tsx",["113","114","115","116"],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/utils/utils.ts",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Call/useUserMedia.ts",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/CallFeedback/index.tsx",["117","118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":12},{"ruleId":"123","severity":1,"message":"127","line":19,"column":9,"nodeType":"125","messageId":"126","endLine":19,"endColumn":15},{"ruleId":"123","severity":1,"message":"128","line":19,"column":17,"nodeType":"125","messageId":"126","endLine":19,"endColumn":23},{"ruleId":"129","severity":1,"message":"130","line":45,"column":6,"nodeType":"131","endLine":45,"endColumn":26,"suggestions":"132"},{"ruleId":"123","severity":1,"message":"133","line":4,"column":26,"nodeType":"125","messageId":"126","endLine":4,"endColumn":46},{"ruleId":"123","severity":1,"message":"134","line":4,"column":39,"nodeType":"125","messageId":"126","endLine":4,"endColumn":47},{"ruleId":"123","severity":1,"message":"135","line":28,"column":10,"nodeType":"125","messageId":"126","endLine":28,"endColumn":15},{"ruleId":"123","severity":1,"message":"136","line":5,"column":10,"nodeType":"125","messageId":"126","endLine":5,"endColumn":28},{"ruleId":"123","severity":1,"message":"137","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":12},{"ruleId":"123","severity":1,"message":"138","line":11,"column":3,"nodeType":"125","messageId":"126","endLine":11,"endColumn":7},{"ruleId":"123","severity":1,"message":"139","line":30,"column":3,"nodeType":"125","messageId":"126","endLine":30,"endColumn":22},{"ruleId":"123","severity":1,"message":"128","line":33,"column":9,"nodeType":"125","messageId":"126","endLine":33,"endColumn":15},{"ruleId":"123","severity":1,"message":"127","line":33,"column":17,"nodeType":"125","messageId":"126","endLine":33,"endColumn":23},{"ruleId":"123","severity":1,"message":"140","line":34,"column":9,"nodeType":"125","messageId":"126","endLine":34,"endColumn":13},{"ruleId":"123","severity":1,"message":"141","line":58,"column":22,"nodeType":"125","messageId":"126","endLine":58,"endColumn":35},{"ruleId":"123","severity":1,"message":"142","line":8,"column":10,"nodeType":"125","messageId":"126","endLine":8,"endColumn":21},{"ruleId":"123","severity":1,"message":"143","line":32,"column":3,"nodeType":"125","messageId":"126","endLine":32,"endColumn":18},{"ruleId":"123","severity":1,"message":"144","line":34,"column":3,"nodeType":"125","messageId":"126","endLine":34,"endColumn":14},{"ruleId":"123","severity":1,"message":"145","line":40,"column":10,"nodeType":"125","messageId":"126","endLine":40,"endColumn":28},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"146","line":8,"column":10,"nodeType":"125","messageId":"126","endLine":8,"endColumn":16},{"ruleId":"123","severity":1,"message":"147","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":22},{"ruleId":"123","severity":1,"message":"128","line":5,"column":9,"nodeType":"125","messageId":"126","endLine":5,"endColumn":15},{"ruleId":"123","severity":1,"message":"148","line":5,"column":17,"nodeType":"125","messageId":"126","endLine":5,"endColumn":24},{"ruleId":"123","severity":1,"message":"127","line":5,"column":26,"nodeType":"125","messageId":"126","endLine":5,"endColumn":32},{"ruleId":"123","severity":1,"message":"149","line":13,"column":7,"nodeType":"125","messageId":"126","endLine":13,"endColumn":18},{"ruleId":"150","severity":1,"message":"151","line":21,"column":27,"nodeType":"152","messageId":"153","endLine":21,"endColumn":36},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Footer' is assigned a value but never used.","'Header' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchConnections'. Either include it or remove the dependency array. If 'fetchConnections' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["156"],"'getDefaultMiddleware' is defined but never used.","'Checkbox' is defined but never used.","'error' is assigned a value but never used.","'REMEMBER_TOKEN_KEY' is defined but never used.","'path' is defined but never used.","'Menu' is defined but never used.","'VideoCameraOutlined' is defined but never used.","'Meta' is assigned a value but never used.","'setDailyQuote' is assigned a value but never used.","'useSelector' is defined but never used.","'MessageOutlined' is defined but never used.","'ShopTwoTone' is defined but never used.","'HEARTBEAT_INTERVAL' is defined but never used.","'Inmate' is defined but never used.","'UserOutlined' is defined but never used.","'Content' is assigned a value but never used.","'customIcons' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},"Update the dependencies array to be: [fetchConnections, session.isLoggedIn]",{"range":"159","text":"160"},[1393,1413],"[fetchConnections, session.isLoggedIn]"]