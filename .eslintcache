[{"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/index.tsx":"1","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/reportWebVitals.ts":"2","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/App.tsx":"3","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/index.ts":"4","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/modules/session.ts":"5","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/utils/constants.ts":"6","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/components/hocs/ProtectedRoute.tsx":"7","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Login/index.tsx":"8","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/api/User.ts":"9","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/api/Common.ts":"10","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/modules/call.ts":"11","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Dashboard/index.tsx":"12","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/selectors.ts":"13","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Call/index.tsx":"14","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Call/RoomClient.js":"15","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/modules/connection.ts":"16","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/components/menu/Sidebar.tsx":"17","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/utils/utils.ts":"18","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Call/useUserMedia.ts":"19"},{"size":647,"mtime":1611065414699,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1611065414704,"results":"22","hashOfConfig":"21"},{"size":2295,"mtime":1611239371486,"results":"23","hashOfConfig":"21"},{"size":945,"mtime":1611148817492,"results":"24","hashOfConfig":"21"},{"size":1569,"mtime":1611153156296,"results":"25","hashOfConfig":"21"},{"size":1753,"mtime":1611252461705,"results":"26","hashOfConfig":"21"},{"size":658,"mtime":1611065414698,"results":"27","hashOfConfig":"21"},{"size":2704,"mtime":1611249571977,"results":"28","hashOfConfig":"21"},{"size":1119,"mtime":1611234032079,"results":"29","hashOfConfig":"21"},{"size":1824,"mtime":1611153155127,"results":"30","hashOfConfig":"21"},{"size":923,"mtime":1611153156075,"results":"31","hashOfConfig":"21"},{"size":6769,"mtime":1611252492856,"results":"32","hashOfConfig":"21"},{"size":476,"mtime":1611234034395,"results":"33","hashOfConfig":"21"},{"size":8142,"mtime":1611245566729,"results":"34","hashOfConfig":"21"},{"size":6333,"mtime":1611243259712,"results":"35","hashOfConfig":"21"},{"size":1101,"mtime":1611153156231,"results":"36","hashOfConfig":"21"},{"size":1151,"mtime":1611249756283,"results":"37","hashOfConfig":"21"},{"size":274,"mtime":1611250491539,"results":"38","hashOfConfig":"21"},{"size":738,"mtime":1611243263638,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1xn4t4d",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/index.tsx",[],["83","84"],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/reportWebVitals.ts",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/App.tsx",["85","86","87"],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/index.ts",["88"],"import { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport { combineReducers } from \"redux\";\nimport { History, createBrowserHistory } from \"history\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { sessionReducer } from \"./modules/session\";\nimport { callSlice } from \"./modules/call\";\nimport { connectionSlice } from \"./modules/connection\";\n\nexport const history = createBrowserHistory();\n\nexport const createRootReducer = (history: History) =>\n  combineReducers({\n    session: sessionReducer,\n    calls: callSlice.reducer,\n    connections: connectionSlice.reducer,\n    router: connectRouter(history),\n  });\nexport const rootReducer = createRootReducer(history);\n\nexport const Store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(routerMiddleware(history)),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/modules/session.ts",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/utils/constants.ts",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/components/hocs/ProtectedRoute.tsx",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Login/index.tsx",["89","90"],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/api/User.ts",["91"],"import { API_URL, fetchTimeout } from \"./Common\";\nimport url from \"url\";\nimport { setSession } from \"src/redux/modules/session\";\nimport { Store } from \"src/redux\";\nimport { REMEMBER_TOKEN_KEY, TOKEN_KEY } from \"src/utils/constants\";\nimport { User } from \"src/types/User\";\n\nasync function initializeSession(body: any) {\n  const user = body.data.user as User;\n  const { token, id } = body.data.user;\n  Store.dispatch(\n    setSession({\n      user,\n      authInfo: { token, id, type: 'inmate' },\n      isLoggedIn: true,\n    })\n  );\n\n  // TO\n  localStorage.setItem(TOKEN_KEY, token);\n}\n\nexport async function loginWithCredentials(cred: {\n  inmateNumber: string;\n  pin: string;\n}): Promise<void> {\n  const response = await fetchTimeout(url.resolve(API_URL, \"inmate/auth\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      node_id: 2,\n      inmate_number: cred.inmateNumber,\n      pin: cred.pin,\n    }),\n  });\n  const body = await response.json();\n  if (body.status !== 200) throw body;\n  await initializeSession(body);\n}\n","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/api/Common.ts",["92","93","94"],"import { Store } from \"src/redux\";\nimport url from \"url\";\nimport path from \"path\";\n// import { getApprovedConnections } from \"./Connection\";\n// import { getContacts, getInmates, getStaff } from \"./Persona\";\n\nexport const API_URL = `${process.env.REACT_APP_BASE_URL}api/`;\n\nexport interface ApiResponse {\n  date: number;\n  good: boolean;\n  status?: \"OK\" | \"ERROR\" | \"succeeded\" | 200;\n  message?: string;\n  data: Record<string, unknown> | Record<string, unknown>[] | unknown;\n}\n\nexport function fetchTimeout(\n  fetchUrl: string,\n  options: Record<string, unknown>,\n  timeout = 15000\n): Promise<Response> {\n  return Promise.race([\n    fetch(fetchUrl, { ...options, mode: \"cors\" }),\n    new Promise<Response>((_, reject) =>\n      setTimeout(() => reject(new Error(\"timeout\")), timeout)\n    ),\n  ]);\n}\n\nexport function toQueryString(options: string[][]) {\n  return options.map((x) => x[0] + \"=\" + encodeURIComponent(x[1])).join(\"&\");\n}\n\nexport async function fetchAuthenticated(\n  fetchUrl: string,\n  options: Record<string, unknown> = {},\n  timeout = 15000\n): Promise<ApiResponse> {\n  const state = Store.getState();\n\n  const requestOptions = {\n    ...options,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${state.session.authInfo.token}`,\n      [\"X-Ameelio-User-Type\"]: \"inmate\",\n      ['X-Ameelio-Inmate-Id']: `${state.session.authInfo.id}`\n    },\n  };\n\n  const response = await fetchTimeout(\n    path.join(API_URL, `inmate/${state.session.authInfo.id}`, fetchUrl),\n    requestOptions,\n    timeout\n  );\n\n  const body = await response.json();\n\n  return body;\n}\n\n// export async function initializeAppData() {\n//   await Promise.allSettled([\n//     getInmates(),\n//     getApprovedConnections(),\n//     getStaff(),\n//     getContacts(),\n//   ]);\n// }\n","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/modules/call.ts",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Dashboard/index.tsx",["95","96","97","98","99","100","101","102","103"],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/selectors.ts",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Call/index.tsx",["104","105"],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Call/RoomClient.js",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/redux/modules/connection.ts",["106"],"import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { Connection } from \"src/types/Connection\";\nimport { Inmate } from \"src/types/User\";\nimport { fetchAuthenticated } from \"src/api/Common\";\n\nexport const fetchConnections = createAsyncThunk(\n  \"connections/fetchAll\",\n  async () => {\n    const body = await fetchAuthenticated(`/connections`);\n    if (body.status !== 200) {\n      throw body;\n    }\n\n    const connections = ((body.data as Record<string, unknown>)\n      .connections as Connection[]).map((inmate) => camelcaseKeys(inmate));\n\n    return connections;\n  }\n);\n\nexport const connectionAdapter = createEntityAdapter<Connection>();\n\nexport const connectionSlice = createSlice({\n  name: \"connection\",\n  initialState: connectionAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchConnections.fulfilled, (state, action) => {\n      connectionAdapter.setAll(state, action.payload);\n    });\n  },\n});\n\nexport const connectionActions = connectionSlice.actions;\n","/Users/gabrielsaruhashi/Ameelio/pathways-client/src/components/menu/Sidebar.tsx",["107","108","109","110"],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/utils/utils.ts",[],"/Users/gabrielsaruhashi/Ameelio/pathways-client/src/pages/Call/useUserMedia.ts",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":12},{"ruleId":"115","severity":1,"message":"119","line":19,"column":17,"nodeType":"117","messageId":"118","endLine":19,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":45,"column":6,"nodeType":"122","endLine":45,"endColumn":26,"suggestions":"123"},{"ruleId":"115","severity":1,"message":"124","line":4,"column":26,"nodeType":"117","messageId":"118","endLine":4,"endColumn":46},{"ruleId":"115","severity":1,"message":"125","line":4,"column":39,"nodeType":"117","messageId":"118","endLine":4,"endColumn":47},{"ruleId":"115","severity":1,"message":"126","line":28,"column":10,"nodeType":"117","messageId":"118","endLine":28,"endColumn":15},{"ruleId":"115","severity":1,"message":"127","line":5,"column":10,"nodeType":"117","messageId":"118","endLine":5,"endColumn":28},{"ruleId":"115","severity":1,"message":"128","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":11},{"ruleId":"129","severity":1,"message":"130","line":47,"column":7,"nodeType":"131","messageId":"132","endLine":47,"endColumn":40,"fix":"133"},{"ruleId":"129","severity":1,"message":"134","line":48,"column":7,"nodeType":"131","messageId":"132","endLine":48,"endColumn":62,"fix":"135"},{"ruleId":"115","severity":1,"message":"136","line":11,"column":3,"nodeType":"117","messageId":"118","endLine":11,"endColumn":7},{"ruleId":"115","severity":1,"message":"137","line":22,"column":8,"nodeType":"117","messageId":"118","endLine":22,"endColumn":14},{"ruleId":"115","severity":1,"message":"138","line":31,"column":3,"nodeType":"117","messageId":"118","endLine":31,"endColumn":22},{"ruleId":"115","severity":1,"message":"139","line":33,"column":10,"nodeType":"117","messageId":"118","endLine":33,"endColumn":18},{"ruleId":"115","severity":1,"message":"140","line":34,"column":10,"nodeType":"117","messageId":"118","endLine":34,"endColumn":27},{"ruleId":"115","severity":1,"message":"119","line":36,"column":9,"nodeType":"117","messageId":"118","endLine":36,"endColumn":15},{"ruleId":"115","severity":1,"message":"141","line":36,"column":17,"nodeType":"117","messageId":"118","endLine":36,"endColumn":23},{"ruleId":"115","severity":1,"message":"142","line":37,"column":9,"nodeType":"117","messageId":"118","endLine":37,"endColumn":13},{"ruleId":"115","severity":1,"message":"143","line":61,"column":22,"nodeType":"117","messageId":"118","endLine":61,"endColumn":35},{"ruleId":"115","severity":1,"message":"144","line":8,"column":10,"nodeType":"117","messageId":"118","endLine":8,"endColumn":21},{"ruleId":"115","severity":1,"message":"145","line":14,"column":10,"nodeType":"117","messageId":"118","endLine":14,"endColumn":14},{"ruleId":"115","severity":1,"message":"146","line":8,"column":10,"nodeType":"117","messageId":"118","endLine":8,"endColumn":16},{"ruleId":"115","severity":1,"message":"147","line":3,"column":10,"nodeType":"117","messageId":"118","endLine":3,"endColumn":22},{"ruleId":"115","severity":1,"message":"119","line":5,"column":9,"nodeType":"117","messageId":"118","endLine":5,"endColumn":15},{"ruleId":"115","severity":1,"message":"148","line":5,"column":17,"nodeType":"117","messageId":"118","endLine":5,"endColumn":24},{"ruleId":"115","severity":1,"message":"141","line":5,"column":26,"nodeType":"117","messageId":"118","endLine":5,"endColumn":32},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Header' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchConnections'. Either include it or remove the dependency array. If 'fetchConnections' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["151"],"'getDefaultMiddleware' is defined but never used.","'Checkbox' is defined but never used.","'error' is assigned a value but never used.","'REMEMBER_TOKEN_KEY' is defined but never used.","'url' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"X-Ameelio-User-Type\"] found.","Property","unnecessarilyComputedProperty",{"range":"152","text":"153"},"Unnecessarily computed property ['X-Ameelio-Inmate-Id'] found.",{"range":"154","text":"155"},"'Menu' is defined but never used.","'Banner' is defined but never used.","'VideoCameraOutlined' is defined but never used.","'Skeleton' is defined but never used.","'connectionActions' is defined but never used.","'Footer' is assigned a value but never used.","'Meta' is assigned a value but never used.","'setDailyQuote' is assigned a value but never used.","'useSelector' is defined but never used.","'Call' is defined but never used.","'Inmate' is defined but never used.","'UserOutlined' is defined but never used.","'Content' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},[1318,1341],"\"X-Ameelio-User-Type\"",[1359,1382],"'X-Ameelio-Inmate-Id'","Update the dependencies array to be: [fetchConnections, session.isLoggedIn]",{"range":"158","text":"159"},[1383,1403],"[fetchConnections, session.isLoggedIn]"]