{"version":3,"sources":["api/Common.ts","utils/utils.ts","utils/Call.ts","pages/Call/RoomClient.ts","redux/modules/call.ts","redux/modules/contactsSlice.ts","redux/selectors.ts","i18n/config.ts","components/Common/PageLayout/index.tsx","components/Common/PageLayout/PageLayout.tsx","components/Common/Buttons/EditButton/index.tsx","components/Common/Buttons/EditButton/EditButton.tsx","components/Profile/ProfileInfo.tsx","components/Profile/index.tsx","components/Profile/Profile.tsx","pages/Profile/index.tsx","redux/modules/modalsSlice.ts","components/Calls/Calls.tsx","components/Calls/index.tsx","hooks/useCalls.ts","pages/Calls/index.tsx","components/Settings/index.tsx","components/Settings/Settings.tsx","pages/Settings/index.tsx","utils/UI.ts","components/Avatar/UserAvatarGroup.tsx","components/Dashboard/CallItem.tsx","constants/Call.ts","components/Dashboard/CallsList.tsx","components/Dashboard/ConnectionItem.tsx","components/Dashboard/ConnectionsList.tsx","components/Dashboard/DashboardHeader.tsx","components/Dashboard/CallDetails.tsx","components/Dashboard/index.tsx","components/Dashboard/Dashboard.tsx","pages/Dashboard/index.tsx","components/Common/commonSlice.ts","components/Call/MessageDisplay.tsx","components/Call/Chat.tsx","components/Common/Buttons/IconButton/index.tsx","components/Common/Buttons/IconButton/IconButton.tsx","components/Call/VideoOverlay.tsx","components/Call/VideoMePlaceholder.tsx","components/Call/WaitingRoomCard.tsx","components/Call/Timer.tsx","components/Call/Video.tsx","components/Call/Audio.tsx","assets/Sounds/LeaveCall.wav","assets/Sounds/EnterCall.wav","assets/Sounds/MessageReceived.mp3","components/Call/index.tsx","components/Call/Call.tsx","hooks/useRoom.ts","components/Error/index.tsx","components/Error/Error.tsx","components/Loader/index.tsx","components/Loader/Loader.tsx","pages/Call/index.tsx","components/CallFeedback/index.tsx","components/CallFeedback/CallFeedback.tsx","pages/CallFeedback/index.tsx","utils/constants.ts","redux/modules/session.ts","redux/modules/connection.ts","redux/index.ts","components/Hocs/ProtectedRoute.tsx","api/User.ts","assets/logo.svg","styles/Layout.ts","pages/Login/index.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/index.tsx","components/Modals/KioskConfirmationModal/index.tsx","components/Modals/KioskConfirmationModal/KioskConfirmationModal.tsx","components/Modals/CancelCallModal/index.tsx","components/Modals/CancelCallModal/CancelCallModal.tsx","components/Modals/InformationalModal/index.tsx","components/Modals/InformationalModal/InformationalModal.tsx","components/Modals/TestConnectionModal/index.tsx","components/Modals/TestConnectionModal/TestConnectionModal.tsx","components/Modals/Modals.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_URL","process","fetchTimeout","fetchUrl","options","timeout","Promise","race","fetch","mode","_","reject","setTimeout","Error","fetchAuthenticated","a","state","Store","getState","requestOptions","headers","Accept","Authorization","session","authInfo","token","credentials","id","response","status","json","body","fetchFacilities","getRandomItem","items","Math","floor","random","length","getInitials","str","split","map","substr","join","getFullName","entity","firstName","lastName","openNotificationWithIcon","message","description","type","notification","showToast","key","content","duration","success","error","warning","loading","info","notEmpty","value","undefined","keyMinutes","WHITE_BACKGROUND","loadCallEntities","call","contacts","userParticipants","userIds","filter","loadAllCallEntities","calls","c","getMediaConstraints","deviceId","audio","video","getMedia","mediaConstraints","navigator","mediaDevices","getUserMedia","getParticipantsFirstNames","user","getParticipantsFullNames","config","width","min","ideal","height","encodings","rid","maxBitrate","scalabilityMode","codecOptions","videoGoogleStartBitrate","RoomClient","socket","callId","producerTransport","consumerTransport","device","consumers","producers","handlers","producerTracks","this","consume","name","data","resolve","emit","transport","on","callback","errback","dtlsParameters","request","transportId","producerTransportInfo","consumerTransportInfo","routerRtpCapabilities","loadDevice","createSendTransport","handleTransportConnect","createRecvTransport","rtpCapabilities","kind","rtpParameters","producerId","consumeResult","consumer","stream","consumerId","forEach","f","track","getAudioTracks","getVideoTracks","push","params","produce","producer","mediasoupClient","load","MediaStream","event","fn","Object","values","pause","paused","resume","off","close","stop","fetchCalls","createAsyncThunk","results","initializeVisit","setRc","videoHandler","io","connect","host","transports","connected","console","log","rc","init","initializeProducers","setLocalAudio","setLocalVideo","all","videoStream","audioStream","cs","initializeRemotes","setRemoteAudios","setRemoteVideos","existing","newStreams","callAdapter","createEntityAdapter","callSlice","createSlice","initialState","getInitialState","reducers","extraReducers","builder","addCase","fulfilled","action","setAll","payload","rejected","actions","contactsAdapter","fetchContacts","inmate","camelcaseKeys","contactsSlice","getSelectors","selectAllCalls","selectAll","selectCallById","selectById","selectAllContacts","selectContactEntities","selectEntities","createSelector","baseCalls","resources","en","login","enLogin","dashboard","enDashboard","profile","enProfile","enCall","enCalls","modals","enModals","settings","enSettings","feedback","enFeedback","enError","common","enCommon","es","esLogin","esDashboard","esProfile","esCall","esModals","esSettings","esFeedback","esError","esCommon","i18n","use","initReactI18next","lng","ns","PageLayout","children","className","Content","style","backgroundColor","opacity","EditButton","icon","SaveOutlined","size","ProfileInfo","t","onEdit","useTranslation","useState","totalMinutes","setTotalMinutes","useEffect","total","differenceInMinutes","Date","scheduledEnd","scheduledStart","reduce","b","direction","src","profileImagePath","AVATAR_LARGE","Title","level","Text","strong","location","gutter","span","title","format","dateOfBirth","offset","Profile","isEditing","setIsEditing","ProfilePage","useAppSelector","modalsSlice","activeType","openModal","closeModal","tableColumns","dataIndex","Calls","dispatch","useAppDispatch","tableData","setTableData","date","time","participants","cancel","onClick","quota","columns","dataSource","useCallById","baseCall","contactEntities","setCall","CallsPage","setCalls","useCalls","Settings","Option","Select","defaultValue","language","onChange","changeLanguage","keys","LANGUAGES","index","Link","SettingsPage","getLottieOptions","lottie","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","getAvatarBackgroundColor","colors","abs","hash","i","charCodeAt","hashCode","ContactAvatarGroup","Group","contact","CallItem","selectCall","joinCall","started","subMinutes","justify","align","isToday","isTomorrow","disabled","CallsList","seeAllCalls","extra","ConnectionItem","shape","ConnectionsList","filteredContacts","setFilteredContacts","activeContactTab","setActiveContactTab","tabList","tab","connectionItems","activeTabKey","onTabChange","Styles","headerTime","color","marginBottom","headerDate","marginTop","quote","DashboardHeader","QUOTES","dailyQuote","currTime","setCurrTime","interval","setInterval","clearInterval","backgroundImage","background","author","CallDetails","selectedCall","onClose","placement","closable","visible","getContainer","position","CalendarOutlined","TeamOutlined","fontSize","Dashboard","setSelectedCall","mapDispatchToProps","connector","filteredCalls","sort","key1","key2","useUpcomingCalls","slice","commonSlice","fullScreen","enterFullScreen","exitFullScreen","MessageDisplay","senderType","getDisplayName","createdAt","contents","ExclamationCircleOutlined","Chat","room","inmateId","messages","addCallMessage","chatCollapsed","Sider","Layout","draftMessage","setDraftMessage","onSendMessage","then","senderId","toISOString","rejection","theme","maxHeight","collapsible","collapsed","trigger","WRAPPER_PADDING","overflowY","mark","TextArea","rows","e","target","onPressEnter","_e","onSubmit","placeholder","autoFocus","bordered","IconButton","label","danger","block","Style","iconButton","active","inactive","VideoOverlay","audioOn","toggleAudio","videoOn","toggleVideo","toggleChat","terminateCall","timerOn","toggleTimer","hasUnreadMessages","AudioOutlined","AudioMutedOutlined","VideoCameraOutlined","dot","MessageOutlined","ClockCircleOutlined","top","left","zIndex","display","avatar","margin","VideoMePlaceholder","initials","getTranslatedDailyQuestion","question","WaitingRoomCard","navigateBack","openInfoModal","openTestConnectionModal","QUESTIONS","icebreaker","renderer","formatted","minutes","seconds","completed","some","val","mapCountdownTimeToStyle","Timer","endTime","zeroPadTime","Video","srcObject","isFadingOut","props","refVideo","useRef","setLoading","current","addEventListener","ref","transition","refAudio","volume","setVolume","timer","vol","clearTimeout","max","Call","React","memo","localVideo","localAudio","remoteAudios","remoteVideos","leaveCall","showOverlay","setShowOverlay","participantHasJoined","setParticipantsHasJoined","setChatCollapsed","peerAudioOn","setPeerAudioOn","peerVideoOn","setPeerVideoOn","setTimerOn","alertDocMessage","setMessages","setHasUnreadMessages","from","useCallMessages","useSound","JoinedCallSound","playJoinCall","LeaveCallSound","playLeaveCall","MessageReceivedSound","playMessageReceived","includes","onMouseMove","parseInt","isCallEnding","differenceInSeconds","onMouseOver","autoPlay","resumeAudio","pauseAudio","resumeVideo","pauseVideo","Loader","tip","fullPage","CallBase","match","hasInit","setHasInit","okBtnText","destroy","path","resource","CallFeedback","navigate","rateCall","logout","rating","setRating","desc","TeamWaveLottie","CyclingLottie","GoodbyeLottie","ShrugLottie","pickIllustration","renderTitle","renderBodyText","tooltips","renderRatings","renderButtons","method","JSON","stringify","UNAUTHENTICATED_USER_ID","ROUTES","component","CallPage","exitType","setExitType","diffMin","addMinutes","DashboardPage","padding","paddingTop","SET_SESSION","LOGOUT","SET_SESSION_STATUS","setSession","userState","setSessionStatus","inmateIdentification","needsMonitor","needsApproval","isLoggedIn","sessionReducer","history","fetchConnections","connections","connectionAdapter","connectionSlice","createBrowserHistory","rootReducer","combineReducers","reducer","router","connectRouter","configureStore","middleware","getDefaultMiddleware","concat","routerMiddleware","useDispatch","useSelector","ProtectedRoute","redirectPath","isAuthenticated","authenticationPath","to","pathname","render","initializeSession","loginWithCredentials","cred","facilityId","inmateNumber","pin","get","_defs","_path","_polygon","_polygon2","_path2","_polygon3","_polygon4","_path3","_path4","_path5","_path6","_path7","_path8","_path9","_extends","assign","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","xmlns","viewBox","d","points","ForwardRef","BORDER_RADIUS","borderRadius","FORM_LAYOUT","labelCol","flex","wrapperCol","FORM_TAIL_LAYOUT","facilities","setFacilities","getFacilityOptions","onFinish","facilityOptions","facility","href","onFinishFailed","_errorInfo","initialValues","Item","rules","required","entries","Button","prefix","UserOutlined","Password","LockOutlined","htmlType","Sidebar","defaultSelectedKeys","HomeOutlined","ScheduleOutlined","EllipsisOutlined","KioskConfirmationModal","handleConfirm","handleLogout","onOk","onCancel","okText","cancelText","KioskLottie","kioskName","CancelCallModal","fullName","startDate","startTime","connectionName","connectionFirstName","InformationalModal","cancelButtonProps","hideCancel","TestConnectionModal","setAudio","setVideo","getTracks","Modals","EnterCallSound","playEnterSound","hasSideBar","defaultProtectedRouteProps","showSideBar","minHeight","exact","LoginPage","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.4f4b7ad4.chunk.js","sourcesContent":["import { Store } from \"src/redux\";\nimport { FacilitiesAPIResponse } from \"./interfaces/apiResponses\";\n\nexport const API_URL = process.env.REACT_APP_API_URL || \"api/v1/\";\n\nexport interface ApiResponse {\n  date: number;\n  good: boolean;\n  status?: \"OK\" | \"ERROR\" | \"succeeded\" | 200;\n  message?: string;\n  data: Record<string, unknown> | Record<string, unknown>[] | unknown;\n}\n\nexport function fetchTimeout(\n  fetchUrl: string,\n  options: Record<string, unknown>,\n  timeout = 15000\n): Promise<Response> {\n  return Promise.race([\n    fetch(fetchUrl, { ...options, mode: \"cors\" }),\n    new Promise<Response>((_, reject) =>\n      setTimeout(() => reject(new Error(\"timeout\")), timeout)\n    ),\n  ]);\n}\n\nexport function toQueryString(options: string[][]) {\n  return options.map((x) => x[0] + \"=\" + encodeURIComponent(x[1])).join(\"&\");\n}\n\nexport async function fetchAuthenticated(\n  fetchUrl: string,\n  options: Record<string, unknown> = {},\n  timeout = 15000\n): Promise<ApiResponse> {\n  const state = Store.getState();\n\n  const requestOptions = {\n    ...options,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: state.session.authInfo.token,\n    },\n    credentials: \"include\",\n  };\n\n  const response = await fetchTimeout(\n    `${API_URL}inmates/${state.session.authInfo.id}/${fetchUrl}`,\n    requestOptions,\n    timeout\n  );\n\n  if (response.status !== 200 && response.status !== 201) {\n    throw response;\n  }\n\n  const body = await response.json();\n\n  return body;\n}\n\nexport async function fetchFacilities(\n  timeout = 1500\n): Promise<FacilitiesAPIResponse> {\n  const requestOptions = {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await fetchTimeout(\n    `${API_URL}public/facilities`,\n    requestOptions,\n    timeout\n  );\n\n  const body = await response.json();\n\n  return body;\n}\n","import { notification, message } from \"antd\";\nimport { BasePersona } from \"src/types/User\";\n\nexport function getRandomItem<TArrayItem>(items: TArrayItem[]): TArrayItem {\n  return items[Math.floor(Math.random() * items.length)];\n}\n\nexport const getInitials = (str: string) => {\n  return str\n    .split(\" \")\n    .map((substr) => substr[0])\n    .join(\"\");\n};\n\nexport const getFullName = (entity: BasePersona): string =>\n  entity ? `${entity.firstName} ${entity.lastName}` : \"\";\n\nexport const openNotificationWithIcon = (\n  message: string,\n  description: string,\n  type: \"success\" | \"info\" | \"error\" | \"warning\"\n) => {\n  notification[type]({\n    message,\n    description,\n  });\n};\nexport const showToast = (\n  key: string,\n  content: string,\n  type: \"success\" | \"error\" | \"warning\" | \"loading\" | \"info\",\n  duration = 3\n) => {\n  switch (type) {\n    case \"success\":\n      message.success({ content, key, duration });\n      break;\n    case \"error\":\n      message.error({ content, key, duration });\n      break;\n    case \"warning\":\n      message.warning({ content, key, duration });\n      break;\n    case \"loading\":\n      message.loading({ content, key, duration });\n      break;\n    default:\n      message.info({ content, key, duration });\n      break;\n  }\n};\n\nexport function notEmpty<TParam>(\n  value: TParam | null | undefined\n): value is TParam {\n  return value !== null && value !== undefined;\n}\n","import { Dictionary } from \"@reduxjs/toolkit\";\nimport { BaseCall, Call, MediaType } from \"src/types/Call\";\nimport { Contact } from \"src/types/User\";\nimport { notEmpty } from \"./utils\";\n\n// The timer will switch to a white background for four seconds around each of these key minutes\nconst keyMinutes = [10, 5, 2];\nconst DEFAULT_BACKGROUND = \"bg-gray-900 text-white\";\nconst WHITE_BACKGROUND = \"bg-white text-black\";\nconst BLUE_BACKGROUND = \"bg-blue-500 text-white\";\n\nexport function loadCallEntitiesById(\n  call: BaseCall,\n  contacts: Dictionary<Contact>\n): Call {\n  const userParticipants = call.userIds\n    .map((id) => contacts[id])\n    .filter(notEmpty);\n  return { ...call, userParticipants: userParticipants };\n}\n\nexport function loadCallEntities(\n  call: BaseCall,\n  contacts: Dictionary<Contact>\n): Call {\n  const userParticipants = call.userIds\n    .map((id) => contacts[id])\n    .filter(notEmpty);\n  return { ...call, userParticipants: userParticipants };\n}\n\nexport function loadAllCallEntities(\n  calls: BaseCall[],\n  contacts: Dictionary<Contact>\n): Call[] {\n  return calls.map((c) => loadCallEntities(c, contacts));\n}\n\n// This function determines what color the background should be\n// Within 4 seconds of a key minute (i.e. 9:56-10:00) -> White background\n// Last minute -> Blue bacground\n// Default -> Black background\nexport function mapCountdownTimeToStyle(\n  minutes: number,\n  seconds: number\n): string {\n  if (keyMinutes.some((val) => val === minutes && seconds === 0))\n    return WHITE_BACKGROUND;\n  if (keyMinutes.some((val) => val === minutes + 1 && seconds >= 56))\n    return WHITE_BACKGROUND;\n  if (minutes === 0 || (minutes === 1 && seconds === 0)) return BLUE_BACKGROUND;\n  return DEFAULT_BACKGROUND;\n}\n\nfunction getMediaConstraints(\n  type: MediaType,\n  deviceId?: number\n): MediaStreamConstraints {\n  if (type === \"audio\") {\n    return { audio: true };\n  } else {\n    return {\n      video: true,\n    };\n  }\n}\n\nexport async function getMedia(type: MediaType, deviceId?: number) {\n  const mediaConstraints = getMediaConstraints(type, deviceId);\n  return await navigator.mediaDevices.getUserMedia(mediaConstraints);\n}\n\nexport function getParticipantsFirstNames(call: Call) {\n  return call.userParticipants.map((user) => user.firstName).join(\", \");\n}\n\nexport function getParticipantsFullNames(call: Call) {\n  return call.userParticipants\n    .map((user) => `${user.firstName} ${user.lastName}`)\n    .join(\", \");\n}\n","import * as mediasoupClient from \"mediasoup-client\";\nimport { Transport } from \"mediasoup-client/lib/types\";\nimport { MediaType } from \"src/types/Call\";\nimport { getMedia } from \"src/utils\";\n/*\n  Copyright 2020 Ameelio.org.\n  Published under the GPL v3.\n\n  You can obtain a copy of the GPL v3 at:\n  https://www.gnu.org/licenses/gpl-3.0.en.html\n\n  This file was inspired by code from https://github.com/Dirvann/mediasoup-sfu-webrtc-video-rooms,\n  which was published under the Apache License.\n  Copyright 2020 github.com/Dirvann.\n\n  You can obtain a copy of the Apache License at:\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  This file was substantially modified by Ameelio to streamline\n  the signalling protocol and change the structure of how a RoomClient\n  is initialized and what events it exposes for easier use by\n  Ameelio's client-side code, and to refactor and restructure the code\n  for easier maintainenance, among other changes.\n*/\n// window.rc = null;\n// window.consumers = [];\n// window.producers = [];\n\nconst config = {\n  video: {\n    width: { min: 640, ideal: 1920 },\n    height: { min: 400, ideal: 1080 },\n    encodings: [\n      {\n        rid: \"r0\",\n        maxBitrate: 100000,\n        scalabilityMode: \"S1T3\",\n      },\n      {\n        rid: \"r1\",\n        maxBitrate: 300000,\n        scalabilityMode: \"S1T3\",\n      },\n      {\n        rid: \"r2\",\n        maxBitrate: 900000,\n        scalabilityMode: \"S1T3\",\n      },\n    ],\n    codecOptions: {\n      videoGoogleStartBitrate: 1000,\n    },\n  },\n};\n\n// function getMediaConstraints(\n//   type: MediaType,\n//   deviceId?: number\n// ): MediaStreamConstraints {\n//   if (type === \"audio\") {\n//     return { audio: true };\n//   } else {\n//     return {\n//       video: true,\n//     };\n//   }\n// }\n\nexport async function stopStream(stream: MediaStream) {\n  const tracks = stream.getTracks();\n  tracks.forEach((track) => {\n    track.stop();\n  });\n}\n\nclass RoomClient {\n  private callId: number;\n  private producerTransport: Transport | null;\n  private consumerTransport: Transport | null;\n  private device: mediasoupClient.Device | null;\n  private consumers: Record<string, mediasoupClient.types.Consumer>;\n  private producers: Record<string, mediasoupClient.types.Producer>;\n  private handlers: Record<string, ((...args: unknown[]) => void)[]>;\n  private producerTracks: MediaStreamTrack[];\n\n  public socket: SocketIOClient.Socket;\n\n  constructor(socket: SocketIOClient.Socket, callId: number) {\n    this.socket = socket;\n    this.callId = callId;\n\n    this.producerTransport = null;\n    this.consumerTransport = null;\n\n    this.device = null;\n\n    this.consumers = {};\n    this.producers = {};\n    this.producerTracks = [];\n\n    this.handlers = { consume: [] };\n  }\n\n  async request(name: string, data: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!this.socket) return reject(\"No socket connection.\");\n\n      this.socket.emit(name, data, (response: any) => {\n        if (response.error) reject(response.error);\n        else resolve(response);\n      });\n    });\n  }\n\n  async handleTransportConnect(transport: Transport) {\n    return new Promise((resolve: (value?: unknown) => void, reject) => {\n      // Wait for the producer transport to connect...\n      transport.on(\n        \"connect\",\n        async ({ dtlsParameters }, callback: () => void, errback) => {\n          await this.request(\"establishDtls\", {\n            dtlsParameters,\n            callId: this.callId,\n            transportId: transport.id,\n          });\n          callback();\n          resolve();\n        }\n      );\n    });\n  }\n\n  async init() {\n    // Request to join the room.\n    const {\n      producerTransportInfo,\n      consumerTransportInfo,\n      routerRtpCapabilities,\n    } = await this.request(\"join\", { callId: this.callId });\n\n    // Load up a local media device consistent with server\n    this.device = await this.loadDevice(routerRtpCapabilities);\n    if (!this.device) return;\n\n    // Set up both transports and promise to send\n    // dtls info when they connect (this won't occur until\n    // someone actually produces).\n    if (producerTransportInfo) {\n      this.producerTransport = this.device.createSendTransport(\n        producerTransportInfo\n      );\n      this.handleTransportConnect(this.producerTransport);\n    }\n\n    this.consumerTransport = this.device.createRecvTransport(\n      consumerTransportInfo\n    );\n    this.handleTransportConnect(this.consumerTransport);\n\n    // Declare what our device is capable of.\n    await this.request(\"declareRtpCapabilities\", {\n      rtpCapabilities: this.device.rtpCapabilities,\n    });\n\n    // We don't actually need to wait for this request to come back.\n    this.request(\"finishConnecting\", { callId: this.callId });\n\n    // When our producer transport is producing a new stream,\n    // inform the server.\n    if (this.producerTransport) {\n      this.producerTransport.on(\n        \"produce\",\n        async ({ kind, rtpParameters }, callback, errback) => {\n          const { producerId } = await this.request(\"produce\", {\n            callId: this.callId,\n            kind,\n            rtpParameters,\n          });\n\n          callback({ id: producerId });\n        }\n      );\n    }\n\n    // When we get a consumer, fire an event.\n    this.socket.on(\"consume\", async (info: any) => {\n      const consumeResult = await this.consume(info);\n      if (!consumeResult) return;\n      const { consumer, stream } = consumeResult;\n      this.socket.emit(\"resumeConsumer\", {\n        callId: this.callId,\n        consumerId: consumer.id,\n      });\n      this.handlers[\"consume\"].forEach((f) => f(info.kind, stream, info.user));\n    });\n  }\n\n  async produce(\n    type: MediaType,\n    deviceId?: number\n  ): Promise<MediaStream | null> {\n    if (!this.producerTransport) return null;\n    const stream = await getMedia(type, deviceId);\n\n    const track = (type === \"audio\"\n      ? stream.getAudioTracks()\n      : stream.getVideoTracks())[0];\n\n    this.producerTracks.push(track);\n\n    const params: any = { track };\n\n    if (type === \"video\") {\n      params.encodings = config.video.encodings;\n      params.codecOptions = config.video.codecOptions;\n    }\n\n    const producer = await this.producerTransport.produce(params);\n    this.producers[producer.id] = producer;\n    return stream;\n  }\n\n  async loadDevice(\n    routerRtpCapabilities: mediasoupClient.types.RtpCapabilities\n  ) {\n    const device = new mediasoupClient.Device();\n\n    await device.load({ routerRtpCapabilities });\n\n    return device;\n  }\n\n  async consume(info: mediasoupClient.types.ConsumerOptions) {\n    if (!this.consumerTransport) return;\n    const consumer = await this.consumerTransport.consume(info);\n    const stream = new MediaStream([consumer.track]);\n    this.consumers[consumer.id] = consumer;\n    return { consumer, stream };\n  }\n\n  async on(event: string, fn: (...args: any) => void) {\n    if (!(event in this.handlers)) {\n      this.handlers[event] = [];\n    }\n    this.handlers[event].push(fn);\n  }\n\n  async terminate() {\n    await this.request(\"terminate\", { callId: this.callId });\n  }\n\n  async pauseVideo() {\n    Object.values(this.producers)?.forEach((producer) => {\n      if (producer.kind === \"video\") {\n        producer.pause();\n        this.request(\"producerUpdate\", {\n          callId: this.callId,\n          producerId: producer.id,\n          paused: true,\n          type: \"video\",\n        });\n      }\n    });\n    this.handlers[\"pauseVideo\"].forEach((f) => f());\n  }\n\n  async resumeVideo() {\n    Object.values(this.producers)?.forEach((producer) => {\n      if (producer.kind === \"video\") {\n        producer.resume();\n        this.request(\"producerUpdate\", {\n          callId: this.callId,\n          producerId: producer.id,\n          paused: false,\n          type: \"video\",\n        });\n      }\n    });\n    this.handlers[\"resumeVideo\"].forEach((f) => f());\n  }\n\n  async pauseAudio() {\n    Object.values(this.producers)?.forEach((producer) => {\n      if (producer.kind === \"audio\") {\n        producer.pause();\n        this.request(\"producerUpdate\", {\n          callId: this.callId,\n          producerId: producer.id,\n          paused: true,\n          type: \"audio\",\n        });\n      }\n    });\n    this.handlers[\"pauseAudio\"].forEach((f) => f());\n  }\n\n  async resumeAudio() {\n    Object.values(this.producers)?.forEach((producer) => {\n      if (producer.kind === \"audio\") {\n        producer.resume();\n        this.request(\"producerUpdate\", {\n          callId: this.callId,\n          producerId: producer.id,\n          paused: false,\n          type: \"audio\",\n        });\n      }\n    });\n    this.handlers[\"resumeAudio\"].forEach((f) => f());\n  }\n\n  async destroy() {\n    this.socket.off(\"connect\");\n    this.socket.off(\"consume\");\n    this.socket.off(\"textMessage\");\n    this.socket.close();\n\n    if (this.consumerTransport) this.consumerTransport.close();\n    if (this.producerTransport) this.producerTransport.close();\n    this.consumerTransport = null;\n    this.producerTransport = null;\n\n    this.producerTracks.map((track) => track.stop());\n\n    Object.values(this.producers).forEach((producer) => {\n      producer.close();\n    });\n    Object.values(this.consumers).forEach((consumer) => {\n      consumer.close();\n    });\n    this.consumers = {};\n    this.producers = {};\n\n    this.handlers = {};\n  }\n}\n\nexport default RoomClient;\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport RoomClient from \"src/pages/Call/RoomClient\";\nimport {\n  BaseCall,\n  CallHandler,\n  CallParticipant,\n  ControlledStream,\n} from \"src/types/Call\";\nimport { ThunkApi } from \"../helper\";\nimport io from \"socket.io-client\";\nimport { showToast } from \"src/utils\";\nimport { AuthInfo } from \"src/types/Session\";\n\nexport const fetchCalls = createAsyncThunk(\"calls/fetchAll\", async () => {\n  const body = await fetchAuthenticated(`calls`);\n\n  const calls = (body.data as { results: BaseCall[] }).results;\n\n  return calls;\n});\n\nexport const initializeVisit = createAsyncThunk(\n  \"visit/initializeVisit\",\n  async ({\n    callId,\n    setRc,\n    authInfo,\n    videoHandler,\n  }: {\n    callId: number;\n    authInfo: AuthInfo;\n    setRc: (rc: RoomClient) => void;\n    videoHandler: CallHandler;\n  }) => {\n    const socket = io.connect(\n      process.env.NODE_ENV === \"production\"\n        ? `https://${videoHandler.host}`\n        : `https://${videoHandler.host}:${videoHandler.port}`,\n      {\n        transports: [\"websocket\"],\n      }\n    );\n    if (!socket.connected) {\n      await new Promise((resolve) => socket.on(\"connect\", resolve));\n    }\n    console.log(\"connected\");\n    await new Promise((resolve) => {\n      socket.emit(\"authenticate\", authInfo, resolve);\n    });\n    const rc = new RoomClient(socket, callId);\n    await rc.init();\n    setRc(rc);\n    return {\n      callId,\n    };\n  }\n);\n\nexport const initializeProducers = createAsyncThunk<\n  void,\n  {\n    rc: RoomClient;\n    setLocalAudio: React.Dispatch<\n      React.SetStateAction<ControlledStream | undefined>\n    >;\n    setLocalVideo: React.Dispatch<\n      React.SetStateAction<ControlledStream | undefined>\n    >;\n    setRc: (rc: RoomClient) => void;\n  },\n  ThunkApi\n>(\n  \"visit/initializeProducers\",\n  async ({ rc, setLocalAudio, setLocalVideo, setRc }) => {\n    const [videoStream, audioStream] = await Promise.all([\n      rc.produce(\"video\"),\n      rc.produce(\"audio\"),\n    ]);\n\n    if (!videoStream) throw Error(\"Unable to produce video\");\n    if (!audioStream) throw Error(\"Unable to produce audio\");\n\n    setLocalAudio({\n      stream: audioStream,\n      paused: false,\n    });\n    setLocalVideo({\n      stream: videoStream,\n      paused: false,\n    });\n    rc.on(\"pauseVideo\", () => {\n      setLocalVideo((cs) => {\n        if (cs) {\n          return {\n            stream: cs.stream,\n            paused: true,\n          };\n        }\n      });\n    });\n    rc.on(\"resumeVideo\", () => {\n      setLocalVideo((cs) => {\n        if (cs) {\n          return {\n            stream: cs.stream,\n            paused: false,\n          };\n        }\n      });\n    });\n    rc.on(\"pauseAudio\", () => {\n      setLocalAudio((cs) => {\n        if (cs) {\n          return {\n            stream: cs.stream,\n            paused: true,\n          };\n        }\n      });\n    });\n    rc.on(\"resumeAudio\", () => {\n      setLocalAudio((cs) => {\n        if (cs) {\n          return {\n            stream: cs.stream,\n            paused: false,\n          };\n        }\n      });\n    });\n    // update room client object\n    setRc(rc);\n  }\n);\n\nexport const initializeRemotes = createAsyncThunk<\n  void,\n  {\n    rc: RoomClient;\n    setRemoteAudios: React.Dispatch<\n      React.SetStateAction<Record<number, MediaStream>>\n    >;\n    setRemoteVideos: React.Dispatch<\n      React.SetStateAction<Record<number, MediaStream>>\n    >;\n  },\n  ThunkApi\n>(\n  \"visit/initializeRemotes\",\n  async ({ rc, setRemoteAudios, setRemoteVideos }) => {\n    rc.on(\n      \"consume\",\n      async (kind: string, stream: MediaStream, user: CallParticipant) => {\n        console.log(\"got consume of \", kind, \" from user\", user);\n        if (user.type !== \"user\") return;\n        if (kind === \"audio\") {\n          setRemoteAudios((existing) => {\n            const newStreams = { ...existing };\n            newStreams[user.id] = stream;\n            return newStreams;\n          });\n        }\n        if (kind === \"video\") {\n          setRemoteVideos((existing) => {\n            const newStreams = { ...existing };\n            newStreams[user.id] = stream;\n            return newStreams;\n          });\n        }\n      }\n    );\n  }\n);\n\nexport const callAdapter = createEntityAdapter<BaseCall>();\n\nexport const callSlice = createSlice({\n  name: \"calls\",\n  initialState: callAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchCalls.fulfilled, (state, action) =>\n      callAdapter.setAll(state, action.payload)\n    );\n    builder.addCase(initializeVisit.rejected, () =>\n      showToast(\"initializeVisit\", \"Failed to initialize call.\", \"error\")\n    );\n    builder.addCase(initializeProducers.rejected, () =>\n      showToast(\n        \"initializeProducers\",\n        \"Failed to initialize local streams.\",\n        \"error\"\n      )\n    );\n    builder.addCase(initializeRemotes.rejected, () =>\n      showToast(\"initializeProducers\", \"Failed to initialize remotes.\", \"error\")\n    );\n  },\n});\n\nexport const callActions = callSlice.actions;\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n} from \"@reduxjs/toolkit\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { Contact } from \"src/types/User\";\n\nexport const contactsAdapter = createEntityAdapter<Contact>();\n\nexport const fetchContacts = createAsyncThunk(\"contacts/fetchAll\", async () => {\n  const body = await fetchAuthenticated(`contacts`);\n  const contacts = ((body.data as Record<string, unknown>)\n    .contacts as Contact[]).map((inmate) => camelcaseKeys(inmate));\n\n  return contacts;\n});\n\nexport const contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: contactsAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchContacts.fulfilled, (state, action) => {\n      contactsAdapter.setAll(state, action.payload);\n    });\n  },\n});\n","import { RootState } from \".\";\nimport { callAdapter } from \"./modules/call\";\nimport { contactsAdapter } from \"./modules/contactsSlice\";\nimport { BaseCall } from \"src/types/Call\";\nimport { createSelector } from \"reselect\";\n\n// get selectors from entity adapter\nexport const {\n  selectAll: selectAllCalls,\n  selectById: selectCallById,\n} = callAdapter.getSelectors<RootState>((state) => state.calls);\n\nexport const {\n  selectAll: selectAllContacts,\n  selectById: selectContactById,\n  selectEntities: selectContactEntities,\n} = contactsAdapter.getSelectors<RootState>((state) => state.contacts);\n\nexport const selectUpcomingCalls = createSelector(\n  selectAllCalls,\n  (baseCalls: BaseCall[]) =>\n    baseCalls.filter(\n      (call) => call.status !== \"ended\" && call.status !== \"terminated\"\n    )\n);\n\nexport const selectEndedCalls = createSelector(\n  selectAllCalls,\n  (baseCalls: BaseCall[]) =>\n    baseCalls.filter(\n      (call) => call.status === \"ended\" || call.status === \"terminated\"\n    )\n);\n","import i18n from \"i18next\";\nimport enDashboard from \"./en/dashboard.json\";\nimport enProfile from \"./en/profile.json\";\nimport esProfile from \"./es/profile.json\";\nimport enCall from \"./en/call.json\";\nimport enCalls from \"./en/calls.json\";\nimport enLogin from \"./en/login.json\";\nimport enFeedback from \"./en/feedback.json\";\nimport enError from \"./en/error.json\";\nimport enCommon from \"./en/common.json\";\nimport esLogin from \"./es/login.json\";\nimport esDashboard from \"./es/dashboard.json\";\nimport esCall from \"./es/call.json\";\nimport enModals from \"./en/modals.json\";\nimport esModals from \"./es/modals.json\";\nimport enSettings from \"./en/settings.json\";\nimport esSettings from \"./es/settings.json\";\nimport esFeedback from \"./es/feedback.json\";\nimport esError from \"./es/error.json\";\nimport esCommon from \"./es/common.json\";\n\nimport { initReactI18next } from \"react-i18next\";\n\nexport const resources = {\n  en: {\n    login: enLogin,\n    dashboard: enDashboard,\n    profile: enProfile,\n    call: enCall,\n    calls: enCalls,\n    modals: enModals,\n    settings: enSettings,\n    feedback: enFeedback,\n    error: enError,\n    common: enCommon,\n  },\n  es: {\n    login: esLogin,\n    dashboard: esDashboard,\n    profile: esProfile,\n    call: esCall,\n    modals: esModals,\n    settings: esSettings,\n    feedback: esFeedback,\n    error: esError,\n    common: esCommon,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  lng: \"en\",\n  ns: [\n    \"login\",\n    \"dashboard\",\n    \"call\",\n    \"profile\",\n    \"settings\",\n    \"modals\",\n    \"feedback\",\n    \"error\",\n    \"common\",\n  ],\n  resources,\n});\n","import PageLayout from \"./PageLayout\";\n\nexport default PageLayout;\n","import { Layout } from \"antd\";\nimport React, { ReactNode } from \"react\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nconst PageLayout: React.FC = ({ children }: Props) => (\n  <Layout className=\"min-h-screen\">\n    <Layout.Content>\n      <div\n        style={{\n          height: \"60px\",\n          backgroundColor: \"#F0DEFF\",\n          opacity: 0.4,\n        }}\n      />\n      {children}\n    </Layout.Content>\n  </Layout>\n);\n\nexport default PageLayout;\n","import EditButton from \"./EditButton\";\n\nexport default EditButton;\n","import { SaveOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport React, { ReactNode } from \"react\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nconst EditButton: React.FC = ({ children }: Props) => (\n  <Button\n    type=\"primary\"\n    icon={<SaveOutlined />}\n    size=\"large\"\n    className=\"rounded\"\n  >\n    {children}\n  </Button>\n);\n\nexport default EditButton;\n","import { Space, PageHeader, Row, Card, Typography, Col } from \"antd\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport { differenceInMinutes, format } from \"date-fns\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { User } from \"src/types/User\";\nimport { getFullName } from \"src/utils/utils\";\nimport { BaseCall } from \"src/types/Call\";\nimport { AVATAR_LARGE } from \"src/utils/constants\";\nimport PageLayout from \"src/components/Common/PageLayout\";\nimport EditButton from \"src/components/Common/Buttons/EditButton\";\n\ninterface Props {\n  user: User;\n  calls: BaseCall[];\n  onEdit: () => void;\n}\n\nconst ProfileInfo: React.FC<Props> = ({ user, calls, onEdit }) => {\n  const { t } = useTranslation(\"profile\");\n  const [totalMinutes, setTotalMinutes] = useState(0);\n\n  useEffect(() => {\n    if (calls.length) {\n      const total = calls\n        .map((call) =>\n          differenceInMinutes(\n            new Date(call.scheduledEnd),\n            new Date(call.scheduledStart)\n          )\n        )\n        .reduce((a, b) => a + b);\n      setTotalMinutes(total);\n    }\n  }, [calls]);\n\n  return (\n    <PageLayout>\n      <Space direction=\"vertical\" size=\"large\" className=\"w-100 p-6 pt-9\">\n        <PageHeader className=\"p-6 border border-solid border-opacity-1 border-gray-200\">\n          <Space className=\"flex justify-between\">\n            <Space>\n              <Avatar src={user.profileImagePath} size={AVATAR_LARGE} />\n              <Space direction=\"vertical\">\n                <Typography.Title level={4}>\n                  <Typography.Text strong>{getFullName(user)}</Typography.Text>\n                </Typography.Title>\n                <Typography.Title level={5}>\n                  <Typography.Text>{user.location}</Typography.Text>\n                </Typography.Title>\n              </Space>\n            </Space>\n            <EditButton>{t(\"profileInfo.editProfile\")}</EditButton>\n          </Space>\n        </PageHeader>\n        <Row gutter={32}>\n          <Col span={16}>\n            <Card title={t(\"profileInfo.about\")}>\n              <p>\n                <Typography.Text>{`${t(\"profileInfo.name\")}: ${getFullName(\n                  user\n                )}`}</Typography.Text>\n              </p>\n              <p>\n                <Typography.Text>{`${t(\"profileInfo.home\")}: ${\n                  user.location\n                }`}</Typography.Text>\n              </p>\n              <p>\n                <Typography.Text>{`${t(\"profileInfo.birthday\")}: ${format(\n                  new Date(user.dateOfBirth),\n                  \"MMMM d, yyyy\"\n                )}`}</Typography.Text>\n              </p>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title={t(\"profileInfo.history\")}>\n              <Row>\n                <Col span={4}>\n                  <p>\n                    <Typography.Text type=\"secondary\">\n                      {t(\"profileInfo.totalCalls\")}\n                    </Typography.Text>\n                  </p>\n                  <p>\n                    <Typography.Text>{calls.length}</Typography.Text>\n                  </p>\n                </Col>\n                <Col span={16} offset={2}>\n                  <p>\n                    <Typography.Text type=\"secondary\">\n                      {t(\"profileInfo.totalMinutes\")}\n                    </Typography.Text>\n                  </p>\n                  <p>\n                    <Typography.Text>{totalMinutes}</Typography.Text>\n                  </p>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </Space>\n    </PageLayout>\n  );\n};\n\nexport default ProfileInfo;\n","import Profile from \"./Profile\";\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport { BaseCall } from \"src/types/Call\";\nimport { User } from \"src/types/User\";\nimport ProfileInfo from \"./ProfileInfo\";\n\ninterface Props {\n  calls: BaseCall[];\n  user: User;\n}\n\nconst Profile: React.FC<Props> = ({ calls, user }) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  return isEditing ? null : (\n    <ProfileInfo user={user} calls={calls} onEdit={() => setIsEditing(true)} />\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { useAppSelector } from \"src/redux\";\nimport { selectAllCalls } from \"src/redux/selectors\";\nimport \"src/i18n/config\";\nimport Profile from \"src/components/Profile\";\n\nconst ProfilePage: React.FC = () => {\n  const user = useAppSelector((state) => state.session.user);\n  const calls = useAppSelector((state) => selectAllCalls(state));\n  return <Profile calls={calls} user={user} />;\n};\n\nexport default ProfilePage;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  CancelCallModalData,\n  InactiveModalData,\n  ResourceModalData,\n  TestConnectionModalData,\n  KioskConfirmationModalData,\n} from \"src/types/UI\";\n\ntype ModalEntity =\n  | CancelCallModalData\n  | ResourceModalData\n  | TestConnectionModalData\n  | InactiveModalData\n  | KioskConfirmationModalData;\n\n// type ModalsSliceState =  {activeType: ModalType | null, entity: Call |{ title: string; body: string } | null };\ntype ModalsSliceState = { data: ModalEntity };\n\nconst initialState: ModalsSliceState = {\n  data: { activeType: \"INACTIVE_MODAL\", entity: null },\n};\n\nexport const modalsSlice = createSlice({\n  name: \"modals\",\n  initialState,\n  reducers: {\n    openModal: (state, action: PayloadAction<ModalEntity>) => {\n      state.data = action.payload;\n    },\n    closeModal: (state) => {\n      state.data = { activeType: \"INACTIVE_MODAL\", entity: null };\n    },\n  },\n});\n\nexport const { openModal, closeModal } = modalsSlice.actions;\n","import { Avatar, Button, Col, Row, Space, Table, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { Call } from \"src/types/Call\";\nimport { User } from \"src/types/User\";\nimport PageLayout from \"src/components/Common/PageLayout\";\nimport { useTranslation } from \"react-i18next\";\nimport { format } from \"date-fns\";\nimport { getFullName } from \"src/utils/utils\";\nimport { useAppDispatch } from \"src/redux\";\nimport { openModal } from \"src/redux/modules/modalsSlice\";\n\ninterface Props {\n  calls: Call[];\n  user: User;\n}\n\ninterface TableData {\n  date: string;\n  time: string;\n  participants: JSX.Element;\n  cancel: JSX.Element;\n}\n\nconst tableColumns = [\n  {\n    title: \"Date\",\n    dataIndex: \"date\",\n  },\n  {\n    title: \"Time\",\n    dataIndex: \"time\",\n  },\n  {\n    title: \"Participants\",\n    dataIndex: \"participants\",\n  },\n  {\n    title: \"\",\n    dataIndex: \"cancel\",\n  },\n];\n\nconst Calls: React.FC<Props> = ({ calls, user }) => {\n  const dispatch = useAppDispatch();\n  const [tableData, setTableData] = useState<TableData[]>([]);\n  const { t } = useTranslation(\"calls\");\n\n  useEffect(() => {\n    setTableData(\n      calls.map((call) => {\n        return {\n          date: format(new Date(call.scheduledStart), \"eeee, LLLL d\"),\n          time: `${format(\n            new Date(call.scheduledStart),\n            \"h:mm bbb\"\n          )} - ${format(new Date(call.scheduledStart), \"h:mm bbb\")}`,\n          participants: (\n            <Space>\n              <Avatar src={user.profileImagePath} size=\"small\" />\n              <Typography.Text>{getFullName(user)}</Typography.Text>\n            </Space>\n          ),\n          cancel: (\n            <Button\n              type=\"link\"\n              onClick={() =>\n                dispatch(\n                  openModal({ activeType: \"CANCEL_CALL_MODAL\", entity: call })\n                )\n              }\n            >\n              {t(\"cancel\")}\n            </Button>\n          ),\n        };\n      })\n    );\n  }, [calls, user, dispatch, t]);\n\n  return (\n    <PageLayout>\n      <Space className=\"p-8 w-full\" direction=\"vertical\">\n        <Row className=\"pb-2\">\n          <Col>\n            <p className=\"pb-2\">\n              <Typography.Text type=\"secondary\">\n                {t(\"callLimit\")}\n              </Typography.Text>\n            </p>\n            <p>\n              <Typography.Text strong className=\"text-base\">\n                {user.quota}\n              </Typography.Text>\n            </p>\n          </Col>\n        </Row>\n        <Row>\n          <Table\n            className=\"w-full\"\n            columns={tableColumns}\n            dataSource={tableData}\n          />\n        </Row>\n      </Space>\n    </PageLayout>\n  );\n};\n\nexport default Calls;\n","import Calls from \"./Calls\";\n\nexport default Calls;\n","import { useState, useEffect } from \"react\";\nimport { Call } from \"src/types/Call\";\nimport { loadAllCallEntities, loadCallEntities } from \"src/utils\";\nimport {\n  selectAllCalls,\n  selectCallById,\n  selectContactEntities,\n} from \"src/redux/selectors\";\nimport { useAppSelector } from \"src/redux\";\n\nexport function useCalls() {\n  const [calls, setCalls] = useState<Call[]>([]);\n  const baseCalls = useAppSelector(selectAllCalls);\n  const contactEntities = useAppSelector(selectContactEntities);\n\n  useEffect(() => {\n    setCalls(loadAllCallEntities(baseCalls, contactEntities));\n  }, [baseCalls, contactEntities]);\n\n  return calls;\n}\n\nexport function useUpcomingCalls() {\n  const [calls, setCalls] = useState<Call[]>([]);\n  const baseCalls = useAppSelector(selectAllCalls);\n  const contactEntities = useAppSelector(selectContactEntities);\n\n  useEffect(() => {\n    const filteredCalls = baseCalls\n      .filter(\n        (call) =>\n          call.status === \"live\" ||\n          call.status === \"scheduled\" ||\n          call.status === \"missing_monitor\"\n      )\n      .sort((a, b) => {\n        const key1 = new Date(a.scheduledStart);\n        const key2 = new Date(b.scheduledStart);\n        if (key1 < key2) {\n          return -1;\n        } else if (key1 === key2) {\n          return 0;\n        } else {\n          return 1;\n        }\n      });\n    setCalls(loadAllCallEntities(filteredCalls, contactEntities));\n  }, [baseCalls, contactEntities]);\n\n  return calls;\n}\n\nexport function useCallById(id: number) {\n  const baseCall = useAppSelector((state) => selectCallById(state, id));\n  const contactEntities = useAppSelector(selectContactEntities);\n  const [call, setCall] = useState<Call>();\n\n  useEffect(() => {\n    if (baseCall) setCall(loadCallEntities(baseCall, contactEntities));\n  }, [baseCall, contactEntities]);\n\n  return call;\n}\n","import React from \"react\";\nimport { useAppSelector } from \"src/redux\";\nimport \"src/i18n/config\";\nimport Calls from \"src/components/Calls\";\nimport { useCalls } from \"src/hooks/useCalls\";\n\nconst CallsPage: React.FC = () => {\n  const user = useAppSelector((state) => state.session.user);\n  const calls = useCalls();\n\n  return <Calls calls={calls} user={user} />;\n};\n\nexport default CallsPage;\n","import Settings from \"./Settings\";\n\nexport default Settings;\n","import React from \"react\";\nimport { Language } from \"src/types/Session\";\nimport PageLayout from \"src/components/Common/PageLayout\";\nimport { Card, Col, Row, Select, Space, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { LANGUAGES } from \"src/utils/constants\";\nimport { openModal } from \"../../redux/modules/modalsSlice\";\nimport { useAppDispatch } from \"src/redux\";\n\nconst Settings: React.FC = () => {\n  const { t, i18n } = useTranslation(\"settings\");\n  const dispatch = useAppDispatch();\n  const { Option } = Select;\n\n  return (\n    <PageLayout>\n      <Space direction=\"vertical\" size=\"large\" className=\"w-100 p-6 pt-9\">\n        <Row gutter={32}>\n          <Col span={12}>\n            <Card title={t(\"language.title\")}>\n              <p>\n                <Typography.Text>{t(\"language.messageOne\")}</Typography.Text>\n              </p>\n              <p>\n                <Typography.Text type=\"secondary\">\n                  {t(\"language.messageTwo\")}\n                </Typography.Text>\n              </p>\n              <div className=\"pt-4\">\n                <Typography.Text>{`${t(\"language.title\")}:`}</Typography.Text>\n                {/* TODO: Right now, this only changes the language on the frontend via i18n. We need to also update the database\n                                whenever we have an API endpoint for it */}\n                <Select\n                  className=\"pl-4\"\n                  defaultValue={i18n.language}\n                  onChange={(value) => i18n.changeLanguage(value)}\n                >\n                  {Object.keys(LANGUAGES).map((key, index) => (\n                    <Option key={`${key}-${index}`} value={key}>\n                      {LANGUAGES[key as Language]}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card title={t(\"resources.title\")}>\n              <Row className=\"pb-2\">\n                <Typography.Link\n                  onClick={() =>\n                    dispatch(\n                      openModal({\n                        activeType: \"RESOURCE_MODAL\",\n                        entity: { title: \"Hello\", body: \"World\" },\n                      })\n                    )\n                  }\n                >\n                  {t(\"resources.contactVerification\")}\n                </Typography.Link>\n              </Row>\n              <Row className=\"pb-2\">\n                <Typography.Link\n                  onClick={() =>\n                    dispatch(\n                      openModal({\n                        activeType: \"RESOURCE_MODAL\",\n                        entity: { title: \"Hello\", body: \"World\" },\n                      })\n                    )\n                  }\n                >\n                  {t(\"resources.callInfo\")}\n                </Typography.Link>\n              </Row>\n              <Row className=\"pb-2\">\n                <Typography.Link\n                  onClick={() =>\n                    dispatch(\n                      openModal({\n                        activeType: \"RESOURCE_MODAL\",\n                        entity: { title: \"Hello\", body: \"World\" },\n                      })\n                    )\n                  }\n                >\n                  {t(\"resources.privacyInfo\")}\n                </Typography.Link>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </Space>\n    </PageLayout>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport \"src/i18n/config\";\nimport Settings from \"src/components/Settings\";\n\nconst SettingsPage: React.FC = () => {\n  return <Settings />;\n};\n\nexport default SettingsPage;\n","import { Options } from \"react-lottie\";\n\nexport function getLottieOptions(lottie: any): Options {\n  return {\n    loop: true,\n    autoplay: true,\n    animationData: lottie,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n}\n\nfunction hashCode(str: string): number {\n  var hash = 0;\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 6) - hash);\n  }\n  return hash;\n}\nexport function getAvatarBackgroundColor(name: string): string {\n  const colors = [\n    \"bg-green-700\",\n    \"bg-green-800\",\n    \"bg-green-900\",\n    \"bg-blue-900\",\n    \"bg-blue-800\",\n    \"bg-blue-700\",\n  ];\n  return colors[Math.abs(hashCode(name) % colors.length)];\n}\n","import { Avatar } from \"antd\";\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\nimport React from \"react\";\nimport { Contact } from \"src/types/User\";\nimport { getFullName, getInitials } from \"src/utils\";\nimport { getAvatarBackgroundColor } from \"src/utils/UI\";\n\ninterface Props {\n  contacts: Contact[];\n  size?: AvatarSize;\n}\n\nconst ContactAvatarGroup: React.FC<Props> = ({ contacts, size }) => {\n  return (\n    <Avatar.Group>\n      {contacts.map((contact) => (\n        <Avatar\n          key={contact.id}\n          size={size}\n          className={`${getAvatarBackgroundColor(\n            getFullName(contact)\n          )} text-white`}\n        >\n          {getInitials(getFullName(contact))}\n        </Avatar>\n      ))}\n    </Avatar.Group>\n  );\n};\n\nexport default ContactAvatarGroup;\n","import { Button, Card, Row, Space, Typography } from \"antd\";\nimport { differenceInMinutes, format, isToday, isTomorrow } from \"date-fns\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Call } from \"src/types/Call\";\nimport { subMinutes } from \"date-fns/esm\";\nimport { WAITING_ROOM_BUFFER_MIN } from \"src/constants\";\nimport { getParticipantsFullNames } from \"src/utils\";\nimport ContactAvatarGroup from \"../Avatar/UserAvatarGroup\";\n\ninterface Props {\n  call: Call;\n  selectCall: (call: Call) => void;\n  joinCall: (call: Call) => void;\n}\nconst CallItem: React.FC<Props> = ({ call, selectCall, joinCall }: Props) => {\n  const { t } = useTranslation(\"dashboard\");\n\n  const duration = differenceInMinutes(\n    new Date(call.scheduledEnd),\n    new Date(call.scheduledStart)\n  );\n\n  const started =\n    subMinutes(new Date(call.scheduledStart), WAITING_ROOM_BUFFER_MIN) <\n    new Date();\n\n  const getDateLabel = (date: Date) => {\n    if (isToday(date)) return \"Today\";\n    if (isTomorrow(date)) return \"Tomorrow\";\n    return format(date, \"EEEE, MMMM d\");\n  };\n\n  return (\n    <Card key={call.id}>\n      <Row justify=\"space-between\" align=\"bottom\">\n        <Space direction=\"vertical\">\n          <Typography.Title level={5}>\n            {getDateLabel(new Date(call.scheduledStart))}\n          </Typography.Title>\n          <Typography.Text>\n            {format(new Date(call.scheduledStart), \"h:mm aaa\")} •{\" \"}\n            {`${duration} minutes`}\n          </Typography.Text>\n          <Space className=\"mt-4\">\n            <ContactAvatarGroup contacts={call.userParticipants} />\n            <Typography.Text type=\"secondary\">\n              {getParticipantsFullNames(call)}\n            </Typography.Text>\n          </Space>\n        </Space>\n        <Space>\n          {started ? (\n            <Button\n              size=\"large\"\n              type=\"primary\"\n              className=\"rounded-sm\"\n              disabled={!call.videoHandler}\n              onClick={() => {\n                joinCall(call);\n              }}\n            >\n              {t(\"call.join\")}\n            </Button>\n          ) : (\n            <Button\n              size=\"large\"\n              className=\"rounded-sm\"\n              onClick={() => selectCall(call)}\n            >\n              {t(\"call.seeDetails\")}\n            </Button>\n          )}\n        </Space>\n      </Row>\n    </Card>\n  );\n};\n\nexport default CallItem;\n","export const WAITING_ROOM_BUFFER_MIN = 5;\n\nexport const FADING_ANIMATION_DURATION = 5;\n","import { Card, Typography } from \"antd\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Call } from \"src/types/Call\";\nimport CallItem from \"./CallItem\";\n\ninterface Props {\n  calls: Call[];\n  selectCall: (call: Call) => void;\n  joinCall: (call: Call) => void;\n  seeAllCalls: () => void;\n}\n\nconst CallsList: React.FC<Props> = ({\n  calls,\n  selectCall,\n  joinCall,\n  seeAllCalls,\n}: Props) => {\n  const { t } = useTranslation(\"dashboard\");\n\n  return (\n    <Card\n      title={t(\"call.title\")}\n      extra={\n        <Typography.Link onClick={seeAllCalls}>\n          {t(\"call.seeAll\")}\n        </Typography.Link>\n      }\n      className=\"rounded-md\"\n    >\n      <div className=\"pb-5\">\n        <Typography.Text>\n          {!calls.length\n            ? t(\"call.noCalls\")\n            : `${calls.length} ${t(\"call.upcomingCalls\")}${\n                calls.length > 1 ? \"s\" : \"\"\n              }`}\n        </Typography.Text>\n      </div>\n      {calls.map((call) => (\n        <CallItem\n          call={call}\n          selectCall={selectCall}\n          joinCall={joinCall}\n          key={`callItem-${call.id}`}\n        />\n      ))}\n    </Card>\n  );\n};\n\nexport default CallsList;\n","import { Avatar, Col, Space, Typography } from \"antd\";\nimport React from \"react\";\n// import { useTranslation } from \"react-i18next\";\nimport { Contact } from \"src/types/User\";\nimport { getFullName } from \"src/utils/utils\";\n\ninterface Props {\n  contact: Contact;\n}\n\nconst ConnectionItem: React.FC<Props> = ({ contact }) => {\n  // const { t } = useTranslation(\"dashboard\");\n\n  // TODO: https://github.com/Ameelio/pathways-client/issues/42\n  // const getDaysPastNum = () => {\n  //   return differenceInDays(\n  //     new Date(),\n  //     new Date(contact.lastCall.scheduledEnd)\n  //   );\n  //   return 1;\n  // };\n\n  return (\n    <Col key={contact.id} className=\"d-flex flex-column align-items-center\">\n      <Space direction=\"vertical\">\n        <Avatar shape=\"square\" size={80} src={contact.profileImagePath} />\n        <div>\n          <div>\n            <Typography.Text>{getFullName(contact)}</Typography.Text>\n          </div>\n          {/* {contact.status === \"active\" && (\n            <div>\n              <Typography.Text type=\"secondary\">\n                {t(\"connection.lastCall\", {\n                  daysPastNum: getDaysPastNum(),\n                })}\n              </Typography.Text>\n            </div>\n          )} */}\n        </div>\n      </Space>\n    </Col>\n  );\n};\n\nexport default ConnectionItem;\n","import { Card, Row } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Call } from \"src/types/Call\";\nimport { Contact } from \"src/types/User\";\nimport ConnectionItem from \"./ConnectionItem\";\n\ninterface Props {\n  calls: Call[];\n  contacts: Contact[];\n}\n\nconst ConnectionsList: React.FC<Props> = ({ calls, contacts }: Props) => {\n  const { t } = useTranslation(\"dashboard\");\n  const [filteredContacts, setFilteredContacts] = useState<Contact[]>([]);\n  const [activeContactTab, setActiveContactTab] = useState(\"active\");\n  const tabList = [\n    {\n      key: \"active\",\n      tab: t(\"connection.active\"),\n    },\n    {\n      key: \"pending\",\n      tab: t(\"connection.pending\"),\n    },\n  ];\n\n  useEffect(() => {\n    setFilteredContacts(\n      contacts.filter((contact) => contact.status === activeContactTab)\n    );\n  }, [activeContactTab, contacts]);\n\n  const connectionItems = filteredContacts.map((contact) => (\n    <ConnectionItem key={contact.id} contact={contact} />\n  ));\n\n  return (\n    <Card\n      title={t(\"connection.title\")}\n      tabList={tabList}\n      activeTabKey={activeContactTab}\n      onTabChange={(key) => setActiveContactTab(key)}\n    >\n      <Row justify=\"space-around\">{connectionItems}</Row>\n    </Card>\n  );\n};\n\nexport default ConnectionsList;\n","import { Col, Space, Typography } from \"antd\";\nimport { format } from \"date-fns\";\nimport React, { useEffect, useState } from \"react\";\nimport { Quote } from \"src/types/Common\";\nimport { QUOTES } from \"src/utils/constants\";\nimport { getRandomItem } from \"src/utils/utils\";\n\nconst DashboardHeader: React.FC = () => {\n  const [dailyQuote] = useState(getRandomItem(QUOTES) as Quote);\n  const [currTime, setCurrTime] = useState(new Date());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  });\n\n  return (\n    <Space\n      direction=\"vertical\"\n      align=\"center\"\n      style={{\n        backgroundImage: `url(${dailyQuote.background})`,\n      }}\n      className=\"w-full h-52 rounded-md bg-cover bg-center text-center flex-1 justify-end\"\n    >\n      <Col className=\"pb-4\">\n        <Typography.Title level={1} style={Styles.headerTime}>\n          {format(currTime, \"HH:mm\")}\n        </Typography.Title>\n        <Typography.Title level={5} style={Styles.headerDate}>\n          {format(currTime, \"eeee, MMMM d\")}\n        </Typography.Title>\n      </Col>\n      <Col>\n        <Typography.Title level={5} style={Styles.quote}>\n          {`${dailyQuote.quote} - ${dailyQuote.author}`}\n        </Typography.Title>\n      </Col>\n    </Space>\n  );\n};\n\nconst Styles = {\n  headerTime: {\n    color: \"white\",\n    marginBottom: 0,\n  },\n  headerDate: {\n    color: \"white\",\n    marginTop: 0,\n  },\n  quote: {\n    color: \"white\",\n  },\n};\n\nexport default DashboardHeader;\n","import { CalendarOutlined, TeamOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Divider, Drawer, Row, Space, Typography } from \"antd\";\nimport { differenceInMinutes, format } from \"date-fns\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppDispatch } from \"src/redux\";\nimport { Call } from \"src/types/Call\";\nimport { openModal } from \"src/redux/modules/modalsSlice\";\nimport { getParticipantsFullNames } from \"src/utils\";\nimport ContactAvatarGroup from \"../Avatar/UserAvatarGroup\";\n\ninterface Props {\n  selectedCall: Call | null;\n  onClose: () => void;\n}\n\nconst CallDetails: React.FC<Props> = ({ selectedCall, onClose }) => {\n  const dispatch = useAppDispatch();\n\n  const { t } = useTranslation(\"dashboard\");\n  const duration =\n    selectedCall &&\n    differenceInMinutes(\n      new Date(selectedCall.scheduledEnd),\n      new Date(selectedCall.scheduledStart)\n    );\n\n  return selectedCall ? (\n    <Drawer\n      title=\"Call Details\"\n      placement=\"right\"\n      closable={false}\n      onClose={onClose}\n      visible={selectedCall ? true : false}\n      getContainer={false}\n      style={{ position: \"absolute\" }}\n    >\n      <Space direction=\"vertical\" size=\"large\">\n        <Row>\n          <Space>\n            <Col>\n              <CalendarOutlined className=\"text-2xl\" />\n            </Col>\n            <Col className=\"text-sm\">\n              <div>\n                <Typography.Text>\n                  {format(\n                    new Date(selectedCall.scheduledStart),\n                    \"EEEE, MMMM d\"\n                  )}\n                </Typography.Text>\n              </div>\n              <div>\n                <Typography.Text type=\"secondary\">\n                  {format(\n                    new Date(selectedCall.scheduledStart),\n                    \"h:mm aaa OOO\"\n                  )}{\" \"}\n                  • {`${duration}mins`}\n                </Typography.Text>\n              </div>\n            </Col>\n          </Space>\n        </Row>\n        <Row>\n          <Space>\n            <Col>\n              <TeamOutlined className=\"text-2xl\" />\n            </Col>\n            <Col>\n              <ContactAvatarGroup contacts={selectedCall.userParticipants} />\n            </Col>\n            <Col style={{ fontSize: 14 }}>\n              <Typography.Text type=\"secondary\">\n                {getParticipantsFullNames(selectedCall)}\n              </Typography.Text>\n            </Col>\n          </Space>\n        </Row>\n        <Row>\n          <Typography.Text type=\"secondary\">\n            {t(\"call.cancelDescription\")}\n          </Typography.Text>\n        </Row>\n        <Row>\n          <Button\n            className=\"rounded-sm\"\n            onClick={() =>\n              dispatch(\n                openModal({\n                  activeType: \"CANCEL_CALL_MODAL\",\n                  entity: selectedCall,\n                })\n              )\n            }\n          >\n            {t(\"call.cancel\")}\n          </Button>\n        </Row>\n        <Divider />\n        <Row>\n          <Typography.Link>{t(\"call.whatToExpect\")}</Typography.Link>\n        </Row>\n        <Row>\n          <Typography.Link>{t(\"call.privacyNotice\")}</Typography.Link>\n        </Row>\n      </Space>\n    </Drawer>\n  ) : null;\n};\n\nexport default CallDetails;\n","import Dashboard from \"./Dashboard\";\n\nexport default Dashboard;\n","import { Col, Row, Space } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Call } from \"src/types/Call\";\nimport CallsList from \"./CallsList\";\nimport ConnectionsList from \"./ConnectionsList\";\nimport DashboardHeader from \"./DashboardHeader\";\nimport CallDetails from \"./CallDetails\";\nimport PageLayout from \"src/components/Common/PageLayout\";\nimport { Contact } from \"src/types/User\";\n\ninterface Props {\n  calls: Call[];\n  contacts: Contact[];\n  joinCall: (call: Call) => void;\n  seeAllCalls: () => void;\n}\nconst Dashboard: React.FC<Props> = ({\n  calls,\n  contacts,\n  joinCall,\n  seeAllCalls,\n}) => {\n  const [selectedCall, setSelectedCall] = useState<null | Call>(null);\n  return (\n    <PageLayout>\n      <Space direction=\"vertical\" size=\"large\" className=\"w-100 p-6 pt-9\">\n        <Row>\n          <Col span={24}>\n            <DashboardHeader />\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={16}>\n            <CallsList\n              calls={calls}\n              selectCall={(call: Call) => setSelectedCall(call)}\n              joinCall={joinCall}\n              seeAllCalls={seeAllCalls}\n            />\n          </Col>\n          <Col span={8}>\n            <ConnectionsList calls={calls} contacts={contacts} />\n          </Col>\n        </Row>\n      </Space>\n      <CallDetails\n        selectedCall={selectedCall}\n        onClose={() => setSelectedCall(null)}\n      />\n    </PageLayout>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { fetchCalls } from \"src/redux/modules/call\";\nimport { selectAllContacts } from \"src/redux/selectors\";\nimport { push } from \"connected-react-router\";\nimport \"src/i18n/config\";\nimport Dashboard from \"src/components/Dashboard\";\nimport { openModal } from \"src/redux/modules/modalsSlice\";\nimport { useCalls, useUpcomingCalls } from \"src/hooks/useCalls\";\nimport { Call } from \"src/types/Call\";\n\nconst mapDispatchToProps = { fetchCalls, push };\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst DashboardPage: React.FC<PropsFromRedux> = ({ fetchCalls }) => {\n  const dispatch = useAppDispatch();\n  const contacts = useAppSelector(selectAllContacts);\n  const calls = useUpcomingCalls();\n\n  useEffect(() => {\n    (async () => await fetchCalls())();\n  }, [fetchCalls]);\n\n  return (\n    <Dashboard\n      calls={calls.slice(0, 3)}\n      contacts={contacts}\n      joinCall={(call: Call) => {\n        dispatch(\n          openModal({ activeType: \"KIOSK_CONFIRMATION_MODAL\", entity: call })\n        );\n      }}\n      seeAllCalls={() => dispatch(push(\"/calls\"))}\n    />\n  );\n};\n\nexport default connector(DashboardPage);\n","import { createSlice } from \"@reduxjs/toolkit\";\n\ninterface CommonSliceState {\n  fullScreen: boolean;\n}\n\nconst initialState: CommonSliceState = { fullScreen: false };\n\nexport const commonSlice = createSlice({\n  name: \"common\",\n  initialState,\n  reducers: {\n    enterFullScreen: (state) => {\n      state.fullScreen = true;\n    },\n    exitFullScreen: (state) => {\n      state.fullScreen = false;\n    },\n  },\n});\n\nexport const { enterFullScreen, exitFullScreen } = commonSlice.actions;\n","import { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { Space, Typography } from \"antd\";\nimport { format } from \"date-fns\";\nimport React from \"react\";\nimport { CallMessage } from \"src/types/Call\";\n\ninterface Props {\n  message: CallMessage;\n}\n\nconst MessageDisplay: React.FC<Props> = ({ message }) => {\n  const type = message.senderType;\n  const getDisplayName = () => {\n    switch (type) {\n      case \"inmate\":\n        return \"You\";\n      case \"doc\":\n        return \"DOC\";\n      case \"user\":\n        return \"Loved One\";\n    }\n  };\n  return (\n    <Space\n      direction=\"vertical\"\n      align={type === \"inmate\" ? \"end\" : \"start\"}\n      style={{ width: \"100%\" }}\n    >\n      <Space>\n        <Typography.Text strong>{getDisplayName()}</Typography.Text>\n        <Typography.Text type=\"secondary\">\n          {format(new Date(message.createdAt), \"HH:mm\")}\n        </Typography.Text>\n      </Space>\n      <Typography.Text>{message.contents}</Typography.Text>\n      {message.status === \"error\" && (\n        <Space direction=\"horizontal\">\n          <ExclamationCircleOutlined className=\"text-red-600 text-xs\" />\n          <Typography.Text>Message failed to send</Typography.Text>\n        </Space>\n      )}\n    </Space>\n  );\n};\n\nexport default MessageDisplay;\n","import { Divider, Input, Layout, PageHeader, Space, Typography } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Call, CallMessage } from \"src/types/Call\";\nimport { WRAPPER_PADDING } from \"src/utils/constants\";\nimport MessageDisplay from \"src/components/Call/MessageDisplay\";\nimport { useTranslation } from \"react-i18next\";\nimport RoomClient from \"src/pages/Call/RoomClient\";\n\ninterface Props {\n  room: RoomClient;\n  inmateId: number;\n  call: Call;\n  messages: CallMessage[];\n  addCallMessage: (message: CallMessage) => void;\n  chatCollapsed: boolean;\n  hasUnreadMessages: boolean;\n}\n\nconst Chat: React.FC<Props> = ({\n  room,\n  inmateId,\n  call,\n  messages,\n  addCallMessage,\n  chatCollapsed,\n}) => {\n  const { Sider } = Layout;\n  const { t } = useTranslation(\"call\");\n\n  const [draftMessage, setDraftMessage] = useState(\"\");\n\n  const onSendMessage = async () => {\n    setDraftMessage(\"\");\n    room\n      .request(\"textMessage\", {\n        callId: call.id,\n        contents: draftMessage,\n      })\n      .then(\n        () =>\n          addCallMessage({\n            contents: draftMessage,\n            senderType: \"inmate\",\n            senderId: inmateId,\n            createdAt: new Date().toISOString(),\n            status: \"success\",\n            callId: call.id,\n          }),\n        (rejection: string) => {\n          // TODO: log Sentry rejection error\n          // https://github.com/Ameelio/connect-doc-client/issues/60\n          console.log(rejection);\n          addCallMessage({\n            contents: draftMessage,\n            senderType: \"inmate\",\n            senderId: inmateId,\n            createdAt: new Date().toISOString(),\n            status: \"error\",\n            callId: call.id,\n          });\n        }\n      );\n  };\n\n  return (\n    <Sider\n      theme=\"light\"\n      style={{ height: \"100vh\", maxHeight: \"100vh\" }}\n      width={300}\n      collapsible\n      collapsed={chatCollapsed}\n      trigger={null}\n    >\n      {!chatCollapsed && (\n        <div className=\"flex flex-col h-full\">\n          <PageHeader title={t(\"chat.title\")} />\n          <div className=\"flex flex-col h-full\" style={WRAPPER_PADDING}>\n            <Space direction=\"vertical\" style={{ overflowY: \"scroll\" }}>\n              <Typography.Text mark>{t(\"chat.monitorWarning\")}</Typography.Text>\n              {messages.map((message) => (\n                <MessageDisplay message={message} />\n              ))}\n            </Space>\n            <div className=\"mt-auto mb-8 flex-shrink-0\">\n              <Divider />\n              <Input.TextArea\n                value={draftMessage}\n                rows={2}\n                onChange={(e) => setDraftMessage(e.target.value)}\n                onPressEnter={(_e) => onSendMessage()}\n                onSubmit={(_e) => onSendMessage()}\n                placeholder={t(\"chat.placeholder\")}\n                autoFocus\n                bordered={false}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </Sider>\n  );\n};\n\nexport default Chat;\n","import IconButton from \"./IconButton\";\n\nexport default IconButton;\n","import { Button, Space, Typography } from \"antd\";\nimport { ButtonShape, ButtonType } from \"antd/lib/button\";\nimport { SizeType } from \"antd/lib/config-provider/SizeContext\";\nimport React from \"react\";\n\ninterface Props {\n  icon: React.ReactNode;\n  label: string;\n  onClick: () => void;\n  type?: ButtonType;\n  danger?: boolean;\n  block?: boolean;\n  size?: SizeType;\n  shape?: ButtonShape;\n  style?: React.CSSProperties;\n}\n\nconst IconButton = ({\n  icon,\n  label,\n  onClick,\n  type,\n  danger,\n  block,\n  size,\n  shape,\n  style,\n}: Props) => {\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Button\n        icon={icon}\n        onClick={onClick}\n        type={type}\n        block={block}\n        danger={danger}\n        size={size || \"large\"}\n        shape={shape || \"round\"}\n        style={style}\n      ></Button>\n      <Typography.Text type=\"secondary\">{label}</Typography.Text>\n    </Space>\n  );\n};\n\nexport default IconButton;\n","import {\n  AudioMutedOutlined,\n  AudioOutlined,\n  ClockCircleOutlined,\n  MessageOutlined,\n  VideoCameraOutlined,\n} from \"@ant-design/icons\";\nimport { Badge, Button, Col, Row, Space, Spin } from \"antd\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport IconButton from \"../Common/Buttons/IconButton\";\n\ninterface Props {\n  loading: boolean;\n  audioOn: boolean;\n  toggleAudio: () => void;\n  videoOn: boolean;\n  toggleVideo: () => void;\n  chatCollapsed: boolean;\n  toggleChat: () => void;\n  timerOn: boolean;\n  toggleTimer: () => void;\n  terminateCall: () => void;\n  hasUnreadMessages: boolean;\n}\n\nconst VideoOverlay: React.FC<Props> = ({\n  loading,\n  audioOn,\n  toggleAudio,\n  videoOn,\n  toggleVideo,\n  chatCollapsed,\n  toggleChat,\n  terminateCall,\n  timerOn,\n  toggleTimer,\n  hasUnreadMessages,\n}) => {\n  const { t } = useTranslation(\"call\");\n  return !loading ? (\n    <Row className=\"absolute bottom-0 bg-white w-full p-4\" align=\"middle\">\n      <Col span={8} offset={8}>\n        <Space size=\"large\">\n          <IconButton\n            icon={\n              audioOn ? (\n                <AudioOutlined style={Style.iconButton} />\n              ) : (\n                <AudioMutedOutlined style={Style.iconButton} />\n              )\n            }\n            danger={!audioOn}\n            type={audioOn ? \"default\" : \"primary\"}\n            onClick={toggleAudio}\n            label={`${t(\"videoOverlay.mic\")}${\" \"}${\n              audioOn ? t(\"videoOverlay.on\") : t(\"videoOverlay.off\")\n            }`}\n          />\n          <IconButton\n            shape=\"round\"\n            danger={!videoOn}\n            icon={\n              videoOn ? (\n                <VideoCameraOutlined style={Style.iconButton} />\n              ) : (\n                <VideoCameraOutlined style={Style.iconButton} />\n              )\n            }\n            size=\"large\"\n            type={videoOn ? \"default\" : \"primary\"}\n            onClick={toggleVideo}\n            label={`${t(\"videoOverlay.video\")} ${\n              videoOn ? t(\"videoOverlay.on\") : t(\"videoOverlay.off\")\n            }`}\n          />\n          <IconButton\n            shape=\"round\"\n            style={chatCollapsed ? Style.inactive : Style.active}\n            icon={\n              chatCollapsed ? (\n                <Badge dot={hasUnreadMessages}>\n                  <MessageOutlined style={Style.iconButton} />\n                </Badge>\n              ) : (\n                <MessageOutlined style={Style.iconButton} />\n              )\n            }\n            size=\"large\"\n            onClick={toggleChat}\n            label={t(\"videoOverlay.chat\")}\n          />\n          <IconButton\n            shape=\"round\"\n            style={!timerOn ? Style.inactive : Style.active}\n            icon={<ClockCircleOutlined style={Style.iconButton} />}\n            size=\"large\"\n            onClick={toggleTimer}\n            label={`${\n              !timerOn ? t(\"videoOverlay.showTime\") : t(\"videoOverlay.hideTime\")\n            }`}\n          />\n        </Space>\n      </Col>\n      <Col span={2} offset={4}>\n        <Button\n          danger\n          size=\"large\"\n          onClick={() => terminateCall()}\n          className=\"align-self-end\"\n        >\n          {t(\"videoOverlay.leaveCall\")}\n        </Button>\n      </Col>\n    </Row>\n  ) : (\n    <Row className=\"absolute bottom-0 bg-white w-full p-4 flex\" align=\"middle\">\n      <Col className=\"m-auto\">\n        <Spin />\n      </Col>\n    </Row>\n  );\n};\n\nconst Style = {\n  iconButton: {\n    fontSize: 24,\n  },\n  active: {\n    backgroundColor: \"#f5f5f5\",\n  },\n  inactive: {\n    backgroundColor: \"#fff\",\n  },\n};\nexport default VideoOverlay;\n","import { Avatar } from \"antd\";\nimport React from \"react\";\n\ninterface Props {\n  initials: string;\n}\n\nconst VideoMePlaceholder: React.FC<Props> = ({ initials }) => {\n  return (\n    <div style={Styles.background}>\n      <Avatar size={64} style={Styles.avatar}>\n        {initials}\n      </Avatar>\n    </div>\n  );\n};\nconst Styles = {\n  background: {\n    backgroundColor: \"black\",\n    position: \"absolute\",\n    top: 16,\n    left: 16,\n    width: \"300px\",\n    height: \"200px\",\n    zIndex: 9999,\n    display: \"flex\",\n  } as React.CSSProperties,\n  avatar: {\n    color: \"#f56a00\",\n    backgroundColor: \"#fde3cf\",\n    margin: \"auto\",\n  },\n};\n\nexport default VideoMePlaceholder;\n","import { Button, Card, Space, Spin, Typography } from \"antd\";\nimport { differenceInMinutes, format } from \"date-fns\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Call } from \"src/types/Call\";\nimport { Icebreaker } from \"src/types/Common\";\nimport { Language } from \"src/types/Session\";\nimport { FAQResource } from \"src/types/UI\";\nimport { QUESTIONS } from \"src/utils/constants\";\nimport { getRandomItem } from \"src/utils/utils\";\n\ninterface Props {\n  title: string;\n  call: Call;\n  navigateBack: () => void;\n  openInfoModal: (resource: FAQResource) => void;\n  openTestConnectionModal: () => void;\n}\n\nconst getTranslatedDailyQuestion = (\n  language: Language,\n  question: Icebreaker\n): string => {\n  switch (language) {\n    case \"en\":\n      return question.en;\n    case \"es\":\n      return question.es;\n    default:\n      return question.en;\n  }\n};\n\nexport const WaitingRoomCard = ({\n  title,\n  call,\n  navigateBack,\n  openInfoModal,\n  openTestConnectionModal,\n}: Props) => {\n  const { t, i18n } = useTranslation(\"call\");\n  const [icebreaker] = useState(getRandomItem(QUESTIONS) as Icebreaker);\n\n  return (\n    <Card className=\"bg-black\tbg-opacity-80 text-white w-6/12\t h-6/12 m-auto\">\n      <Space direction=\"vertical\" className=\"text-white\" size=\"large\">\n        <Space>\n          <Typography.Text strong className=\"text-white text-xl\t\">\n            {title}\n          </Typography.Text>\n          <Spin />\n        </Space>\n\n        <Typography.Text className=\"text-white\">\n          {format(new Date(call.scheduledStart), \"HH:mm\")} •{\" \"}\n          {differenceInMinutes(\n            new Date(call.scheduledEnd),\n            new Date(call.scheduledStart)\n          )}\n          mins\n        </Typography.Text>\n        <Typography.Text className=\"text-white\">\n          {t(\"waitingRoom.questionOfDay\")}:{\" \"}\n          {getTranslatedDailyQuestion(i18n.language as Language, icebreaker)}\n        </Typography.Text>\n        <Typography.Link\n          onClick={() =>\n            openInfoModal({\n              title: t(\"waitingRoom.whenWillCallConnect\"),\n              body: \"Soon.\",\n            })\n          }\n        >\n          {t(\"waitingRoom.whenWillCallConnect\")}\n        </Typography.Link>\n        <Space>\n          <Button type=\"primary\" onClick={openTestConnectionModal}>\n            {t(\"waitingRoom.checkConnection\")}\n          </Button>\n          <Button onClick={navigateBack}>\n            {t(\"waitingRoom.leaveWaitingRoom\")}\n          </Button>\n        </Space>\n      </Space>\n    </Card>\n  );\n};\n","import { Typography } from \"antd\";\nimport React from \"react\";\nimport Countdown from \"react-countdown\";\nimport { ISOString } from \"src/types/Call\";\nimport { mapCountdownTimeToStyle } from \"src/utils\";\n\ninterface Props {\n  endTime: ISOString;\n  style?: React.CSSProperties;\n  className?: string;\n}\n// Renderer callback with condition\nconst renderer = ({\n  formatted,\n  minutes,\n  seconds,\n  completed,\n}: {\n  formatted: { minutes: string; seconds: string };\n  minutes: number;\n  seconds: number;\n  completed: boolean;\n}) => {\n  const style = mapCountdownTimeToStyle(minutes, seconds);\n\n  return completed ? (\n    <div />\n  ) : (\n    <Typography.Text className={`${style} px-4 py-2 rounded-md`}>\n      {formatted.minutes}:{formatted.seconds}\n    </Typography.Text>\n  );\n};\n\nexport const Timer = ({ endTime, style, className }: Props) => {\n  return (\n    <div style={style} className={className}>\n      <Countdown date={endTime} renderer={renderer} zeroPadTime={2} />{\" \"}\n    </div>\n  );\n};\n","import { VideoHTMLAttributes, useEffect, useRef, useState } from \"react\";\nimport { FADING_ANIMATION_DURATION } from \"src/constants\";\n\ntype PropsType = VideoHTMLAttributes<HTMLVideoElement> & {\n  srcObject: MediaStream;\n  isFadingOut?: boolean;\n};\n\nexport default function Video({ srcObject, isFadingOut, ...props }: PropsType) {\n  const refVideo = useRef<HTMLVideoElement>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!refVideo.current) return;\n    refVideo.current.srcObject = srcObject;\n  }, [srcObject]);\n\n  useEffect(() => {\n    if (!refVideo.current) return;\n    refVideo.current.addEventListener(\"loadeddata\", () => setLoading(false));\n  }, []);\n\n  return (\n    <video\n      ref={refVideo}\n      {...props}\n      style={{\n        ...props.style,\n        opacity: loading || isFadingOut ? 0 : 1,\n        transition: `opacity, ${FADING_ANIMATION_DURATION}s ease-in-out`,\n      }}\n    />\n  );\n}\n","import { AudioHTMLAttributes, useEffect, useRef, useState } from \"react\";\nimport { FADING_ANIMATION_DURATION } from \"src/constants\";\n\ntype PropsType = AudioHTMLAttributes<HTMLAudioElement> & {\n  srcObject: MediaStream;\n  isFadingOut?: boolean;\n};\n\nconst VOLUME_INCREMENT = 1.0 / FADING_ANIMATION_DURATION;\n\nexport default function Video({ srcObject, isFadingOut, ...props }: PropsType) {\n  const refAudio = useRef<HTMLAudioElement>(null);\n  const [volume, setVolume] = useState(0.01);\n\n  useEffect(() => {\n    if (!refAudio.current) return;\n    refAudio.current.srcObject = srcObject;\n  }, [srcObject]);\n\n  // Fade in effect\n  useEffect(() => {\n    if (!refAudio.current) return;\n\n    refAudio.current.addEventListener(\"loadeddata\", () => {\n      const timer = setTimeout(() => {\n        if (isFadingOut) return;\n        setVolume((vol) => Math.min(vol + VOLUME_INCREMENT, 1));\n      }, 1e3);\n\n      return () => clearTimeout(timer);\n    });\n  }, [isFadingOut]);\n\n  // Fadeout effect\n  useEffect(() => {\n    if (!refAudio.current) return;\n\n    const timer = setTimeout(() => {\n      if (!isFadingOut) return;\n      setVolume((vol) => Math.max(vol - VOLUME_INCREMENT, 0));\n    }, 1e3);\n\n    return () => clearTimeout(timer);\n  }, [isFadingOut]);\n\n  useEffect(() => {\n    if (!refAudio.current) return;\n    refAudio.current.volume = volume;\n  }, [volume]);\n\n  return <audio ref={refAudio} {...props} />;\n}\n","export default __webpack_public_path__ + \"static/media/LeaveCall.3b29d342.wav\";","export default __webpack_public_path__ + \"static/media/EnterCall.082ea360.wav\";","export default __webpack_public_path__ + \"static/media/MessageReceived.d8858c69.mp3\";","import Call from \"./Call\";\n\nexport default Call;\n","import React, { useEffect, useState } from \"react\";\nimport { Typography, Layout } from \"antd\";\nimport { Call, CallParticipant, ControlledStream } from \"src/types/Call\";\nimport { AudioMutedOutlined } from \"@ant-design/icons\";\nimport {\n  getFullName,\n  getInitials,\n  openNotificationWithIcon,\n  showToast,\n} from \"src/utils/utils\";\nimport { useTranslation } from \"react-i18next\";\nimport \"src/i18n/config\";\nimport Chat from \"src/components/Call/Chat\";\nimport VideoOverlay from \"src/components/Call/VideoOverlay\";\nimport VideoMePlaceholder from \"src/components/Call/VideoMePlaceholder\";\nimport { WaitingRoomCard } from \"./WaitingRoomCard\";\nimport { FAQResource } from \"src/types/UI\";\nimport { Timer } from \"./Timer\";\nimport Video from \"./Video\";\nimport Audio from \"./Audio\";\nimport { User } from \"src/types/User\";\nimport LeaveCallSound from \"src/assets/Sounds/LeaveCall.wav\";\nimport JoinedCallSound from \"src/assets/Sounds/EnterCall.wav\";\nimport useSound from \"use-sound\";\nimport { useCallMessages } from \"src/hooks/useRoom\";\nimport RoomClient from \"src/pages/Call/RoomClient\";\nimport MessageReceivedSound from \"src/assets/Sounds/MessageReceived.mp3\";\nimport { getParticipantsFirstNames } from \"src/utils\";\nimport ContactAvatarGroup from \"../Avatar/UserAvatarGroup\";\nimport { differenceInSeconds } from \"date-fns\";\nimport { FADING_ANIMATION_DURATION } from \"src/constants\";\n\ndeclare global {\n  interface Window {\n    Debug: any;\n  }\n}\n\ninterface Props {\n  call: Call;\n  user: User;\n  remoteAudios: Record<number, MediaStream>;\n  remoteVideos: Record<number, MediaStream>;\n  room: RoomClient;\n  localVideo?: ControlledStream;\n  localAudio?: ControlledStream;\n  leaveCall: () => void;\n  push: (path: string) => void;\n  openInfoModal: (resource: FAQResource) => void;\n  openTestConnectionModal: () => void;\n}\n\nconst CallBase: React.FC<Props> = React.memo(\n  ({\n    call,\n    user,\n    room,\n    localVideo,\n    localAudio,\n    remoteAudios,\n    remoteVideos,\n    leaveCall,\n    push,\n    openInfoModal,\n    openTestConnectionModal,\n  }) => {\n    const { t } = useTranslation(\"call\");\n\n    const [showOverlay, setShowOverlay] = useState(true);\n    const [participantHasJoined, setParticipantsHasJoined] = useState(false);\n    const [chatCollapsed, setChatCollapsed] = useState(true);\n    const [peerAudioOn, setPeerAudioOn] = useState(true);\n    const [peerVideoOn, setPeerVideoOn] = useState(true);\n    const [timerOn, setTimerOn] = useState(false);\n\n    const {\n      messages,\n      addCallMessage,\n      hasUnreadMessages,\n      setHasUnreadMessages,\n    } = useCallMessages(call.id, room, (contents: string) =>\n      openNotificationWithIcon(t(\"doc.warning\"), contents, \"warning\")\n    );\n\n    const [playJoinCall] = useSound(JoinedCallSound);\n    const [playLeaveCall] = useSound(LeaveCallSound);\n\n    const [playMessageReceived] = useSound(MessageReceivedSound);\n\n    useEffect(() => {\n      Object.keys(remoteVideos).length > 0 ||\n      Object.keys(remoteAudios).length > 0\n        ? setParticipantsHasJoined(true)\n        : setParticipantsHasJoined(false);\n    }, [remoteVideos, remoteAudios]);\n\n    // TODO fix this\n    useEffect(() => {\n      if (room) {\n        room.socket.on(\n          \"producerUpdate\",\n          async ({\n            from,\n            contents,\n          }: {\n            from: CallParticipant;\n            contents: {\n              producerId: string;\n              active: boolean;\n              type: \"audio\" | \"video\";\n            };\n          }) => {\n            if (from.type !== \"user\") return;\n            contents.type === \"audio\"\n              ? setPeerAudioOn(contents.active)\n              : setPeerVideoOn(contents.active);\n          }\n        );\n      }\n    }, [room, t]);\n\n    // play a cool sound effect if a new message is received\n    useEffect(() => {\n      if (!chatCollapsed) setHasUnreadMessages(false);\n      if (chatCollapsed && hasUnreadMessages) playMessageReceived();\n    }, [\n      hasUnreadMessages,\n      chatCollapsed,\n      setHasUnreadMessages,\n      playMessageReceived,\n    ]);\n\n    useEffect(() => {\n      if (call && participantHasJoined)\n        showToast(\n          \"peerVideo\",\n          `${getParticipantsFirstNames(call)} ${\n            peerVideoOn ? t(\"peer.videoOn\") : t(\"peer.videoOff\")\n          }`,\n          \"info\"\n        );\n    }, [peerVideoOn, call, participantHasJoined, t]);\n\n    useEffect(() => {\n      if (call && participantHasJoined)\n        showToast(\n          \"peerAudio\",\n          `${getParticipantsFirstNames(call)} ${\n            peerAudioOn ? t(\"peer.unmuted\") : t(\"peer.muted\")\n          }`,\n          \"info\"\n        );\n    }, [peerAudioOn, call, participantHasJoined, t]);\n\n    useEffect(() => {\n      if (participantHasJoined && call) {\n        playJoinCall();\n        openNotificationWithIcon(\n          `${getParticipantsFirstNames(call)} ${t(\"peer.joinedCallTitle\")}.`,\n          t(\"peer.joinedCallBody\"),\n          \"info\"\n        );\n      }\n    }, [participantHasJoined, call, playJoinCall, t]);\n\n    useEffect(() => {\n      if (room) {\n        room.socket.on(\n          \"participantDisconnect\",\n          async ({ id, type }: CallParticipant) => {\n            if (type === \"user\" && call?.userIds.includes(id)) {\n              playLeaveCall();\n              setParticipantsHasJoined(false);\n              openNotificationWithIcon(\n                `${call?.userParticipants[0].firstName} ${t(\n                  \"peer.joinedCallTitle\"\n                )}.`,\n                t(\"peer.joinedCallBody\"),\n                \"info\"\n              );\n            }\n          }\n        );\n      }\n    }, [call, room, t, playLeaveCall]);\n\n    if (!call) return <div />;\n\n    const getMessage = (): string => {\n      if (!room) {\n        return t(\"waitingRoom.initialization\");\n      } else if (!participantHasJoined) {\n        return `${t(\n          \"waitingRoom.waitingForPrefix\"\n        )} ${getParticipantsFirstNames(call)} ${t(\n          \"waitingRoom.waitingForSuffix\"\n        )}...`;\n      }\n      return t(\"waitingRoom.loading\");\n    };\n\n    let timeout: any;\n    const onMouseMove = () => {\n      setShowOverlay(true);\n      (() => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => setShowOverlay(false), 5000);\n      })();\n    };\n\n    // TODO once we support calls with multiple people at once, we can expand on this implementation\n    const keys = Object.keys(remoteVideos).map((key) => parseInt(key));\n\n    const isCallEnding =\n      differenceInSeconds(new Date(call.scheduledEnd), new Date()) <=\n      FADING_ANIMATION_DURATION;\n    return (\n      <Layout>\n        <div\n          className=\"ant-layout-content flex flex-column bg-gray-800\"\n          onMouseMove={() => onMouseMove()}\n          onMouseOver={() => onMouseMove()}\n        >\n          {keys.map((key: number) => (\n            <div className=\"w-full h-full\">\n              <Video\n                srcObject={remoteVideos[key]}\n                className=\"w-full h-full item-fadein\"\n                autoPlay={true}\n                isFadingOut={isCallEnding}\n              />\n              <Audio\n                srcObject={remoteAudios[key]}\n                autoPlay={true}\n                isFadingOut={isCallEnding}\n              />\n            </div>\n          ))}\n          {timerOn && (\n            <Timer\n              endTime={call.scheduledEnd}\n              className=\"absolute right-4 top-4 bg-opacity-80\"\n            />\n          )}\n          {!peerVideoOn && (\n            <ContactAvatarGroup size={128} contacts={call.userParticipants} />\n          )}\n          {!peerAudioOn && (\n            <div className=\"absolute bottom-20 left-4 bg-black bg-opacity-50 py-1 px-2\">\n              <AudioMutedOutlined className=\"text-red-600 text-xs\" />\n              <Typography.Text className=\"text-white text-base\">\n                {\" \"}\n                {getParticipantsFirstNames(call)}\n              </Typography.Text>\n            </div>\n          )}\n          {localVideo && localVideo.stream && !localVideo.paused ? (\n            <Video\n              srcObject={localVideo.stream}\n              className=\"w-2/12 absolute top-4 left-4 flex\"\n              autoPlay={true}\n            />\n          ) : (\n            <VideoMePlaceholder initials={getInitials(getFullName(user))} />\n          )}\n          {!participantHasJoined && (\n            <WaitingRoomCard\n              call={call}\n              title={getMessage()}\n              navigateBack={() => push(\"/\")}\n              openInfoModal={openInfoModal}\n              openTestConnectionModal={openTestConnectionModal}\n            />\n          )}\n          {showOverlay && (\n            <VideoOverlay\n              loading={!(localAudio && localVideo)}\n              audioOn={!!!localAudio?.paused}\n              toggleAudio={() => {\n                if (!room || !localAudio) return;\n                showToast(\n                  \"microphone\",\n                  `You ${\n                    localAudio.paused ? \"unmuted\" : \"muted\"\n                  } your microphone`,\n                  \"info\"\n                );\n                localAudio.paused ? room.resumeAudio() : room.pauseAudio();\n              }}\n              videoOn={!!!localVideo?.paused}\n              toggleVideo={() => {\n                if (!room || !localVideo) return;\n                showToast(\n                  \"webcam\",\n                  `You ${\n                    localVideo.paused ? \"turned on\" : \"turned off\"\n                  } your webcam`,\n                  \"info\"\n                );\n                localVideo.paused ? room.resumeVideo() : room.pauseVideo();\n              }}\n              chatCollapsed={chatCollapsed}\n              toggleChat={() => {\n                if (chatCollapsed) setHasUnreadMessages(false);\n                setChatCollapsed((collapsed) => !collapsed);\n              }}\n              timerOn={timerOn}\n              toggleTimer={() => setTimerOn((timerOn) => !timerOn)}\n              terminateCall={() => {\n                playLeaveCall();\n                leaveCall();\n              }}\n              hasUnreadMessages={hasUnreadMessages}\n            />\n          )}\n        </div>\n        <Chat\n          room={room}\n          inmateId={user.id}\n          call={call}\n          messages={messages}\n          addCallMessage={addCallMessage}\n          chatCollapsed={chatCollapsed}\n          hasUnreadMessages={hasUnreadMessages}\n        />\n      </Layout>\n    );\n  }\n);\nexport default CallBase;\n","import { useState, useEffect } from \"react\";\nimport RoomClient from \"src/pages/Call/RoomClient\";\nimport { CallMessage, CallParticipant } from \"src/types/Call\";\n\nexport const useCallMessages = (\n  callId: number,\n  room: RoomClient,\n  alertDocMessage: (contents: string) => void\n) => {\n  const [messages, setMessages] = useState<CallMessage[]>([]);\n  const [hasUnreadMessages, setHasUnreadMessages] = useState(false);\n\n  const addCallMessage = (message: CallMessage) => {\n    setMessages([...messages, message]);\n  };\n\n  // TODO: wrap alertDocMessage in useCallback\n  useEffect(() => {\n    room.socket.on(\n      \"textMessage\",\n      async ({\n        from,\n        contents,\n      }: {\n        from: CallParticipant;\n        contents: string;\n      }) => {\n        setHasUnreadMessages(true);\n        if (from.type === \"doc\") {\n          alertDocMessage(contents);\n        }\n        setMessages((messages) => [\n          ...messages,\n          {\n            contents,\n            senderId: from.id,\n            senderType: from.type,\n            createdAt: new Date().toISOString(),\n            callId,\n            status: \"success\",\n          },\n        ]);\n      }\n    );\n  }, [callId, room, setHasUnreadMessages]);\n\n  return { messages, addCallMessage, hasUnreadMessages, setHasUnreadMessages };\n};\n","import Error from \"./Error\";\n\nexport default Error;\n","import { Result } from \"antd\";\nimport { ResultProps } from \"antd/lib/result\";\nimport React from \"react\";\n\ninterface Props extends ResultProps {}\n\nconst ErrorPage = (props: Props) => {\n  return (\n    <div className=\"flex h-screen w-screen\">\n      <Result {...props} className=\"m-auto\" />\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import Loader from \"./Loader\";\n\nexport default Loader;\n","import { Spin } from \"antd\";\nimport React from \"react\";\n\ninterface Props {\n  tip?: string;\n  fullPage?: boolean;\n}\n\nconst Loader: React.FC<Props> = ({ tip, fullPage }) => (\n  <div className={`flex ${fullPage ? \"h-screen\" : \"h-full\"} w-full`}>\n    <Spin size=\"large\" className=\"m-auto\" tip={tip} />\n  </div>\n);\n\nexport default Loader;\n","import React, { useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"src/redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { push } from \"connected-react-router\";\nimport \"src/i18n/config\";\nimport {\n  enterFullScreen,\n  exitFullScreen,\n} from \"src/components/Common/commonSlice\";\nimport Call from \"src/components/Call\";\nimport { openModal } from \"src/redux/modules/modalsSlice\";\nimport { FAQResource } from \"src/types/UI\";\nimport {\n  initializeProducers,\n  initializeRemotes,\n  initializeVisit,\n} from \"src/redux/modules/call\";\nimport RoomClient from \"./RoomClient\";\nimport { ControlledStream } from \"src/types/Call\";\nimport { useCallById } from \"src/hooks/useCalls\";\nimport Error from \"src/components/Error\";\nimport { Button } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport Loader from \"src/components/Loader\";\n\ntype TParams = { id: string };\n\nconst CallBase: React.FC<RouteComponentProps<TParams>> = ({ match }) => {\n  const dispatch = useAppDispatch();\n\n  const call = useCallById(parseInt(match.params.id));\n  const { authInfo, user } = useAppSelector((state) => state.session);\n\n  const { t } = useTranslation([\"error\", \"common\", \"modals\"]);\n\n  const [rc, setRc] = useState<RoomClient>();\n  const [localAudio, setLocalAudio] = useState<ControlledStream>();\n  const [localVideo, setLocalVideo] = useState<ControlledStream>();\n  const [remoteAudios, setRemoteAudios] = useState<Record<number, MediaStream>>(\n    {}\n  );\n  const [remoteVideos, setRemoteVideos] = useState<Record<number, MediaStream>>(\n    {}\n  );\n\n  const [hasInit, setHasInit] = useState(false);\n\n  useEffect(() => {\n    dispatch(\n      openModal({\n        activeType: \"RESOURCE_MODAL\",\n        entity: {\n          title: t(\"modals:privacyNotice.title\"),\n          body: t(\"modals:privacyNotice.body\"),\n          okBtnText: t(\"modals:privacyNotice.okText\"),\n        },\n      })\n    );\n  }, [t, dispatch]);\n\n  useEffect(() => {\n    dispatch(enterFullScreen());\n    return () => {\n      dispatch(exitFullScreen());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!call || hasInit || !call.videoHandler) return;\n    dispatch(\n      initializeVisit({\n        callId: call.id,\n        setRc,\n        authInfo,\n        videoHandler: call.videoHandler,\n      })\n    );\n  }, [call, hasInit, authInfo, dispatch]);\n\n  useEffect(() => {\n    if (!rc || hasInit) return;\n    dispatch(initializeRemotes({ rc, setRemoteAudios, setRemoteVideos }));\n    dispatch(initializeProducers({ rc, setLocalAudio, setLocalVideo, setRc }));\n    setHasInit(true);\n  }, [hasInit, rc, dispatch]);\n\n  useEffect(() => {\n    return () => {\n      rc?.destroy();\n    };\n  }, [rc]);\n\n  if (!rc || !hasInit) {\n    return <Loader fullPage tip={`${t(\"common:loading\")}...`} />;\n  }\n\n  if (!call)\n    return (\n      <Error\n        status=\"error\"\n        title={t(\"error:call.callNull\")}\n        extra={[\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            onClick={() => dispatch(push(\"/\"))}\n          >\n            {t(\"error:call.returnHome\")}\n          </Button>,\n        ]}\n      />\n    );\n\n  if (\n    call.status === \"terminated\" ||\n    call.status === \"ended\" ||\n    call.status === \"no_show\" ||\n    new Date(call.scheduledEnd) < new Date()\n  )\n    return (\n      <Error\n        status=\"error\"\n        title={t(\"error:call.callNull\")}\n        extra={[\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            onClick={() => dispatch(push(\"/\"))}\n          >\n            {t(\"error:call.returnHome\")}\n          </Button>,\n        ]}\n      />\n    );\n\n  return (\n    <Call\n      call={call}\n      user={user}\n      push={(path: string) => dispatch(push(path))}\n      openInfoModal={(resource: FAQResource) =>\n        dispatch(openModal({ activeType: \"RESOURCE_MODAL\", entity: resource }))\n      }\n      openTestConnectionModal={() =>\n        dispatch(\n          openModal({ activeType: \"TEST_CONNECTION_MODAL\", entity: null })\n        )\n      }\n      leaveCall={() => {\n        dispatch(push(`/feedback/${call.id}`));\n      }}\n      room={rc}\n      localAudio={localAudio}\n      localVideo={localVideo}\n      remoteAudios={remoteAudios}\n      remoteVideos={remoteVideos}\n    />\n  );\n};\n\nexport default CallBase;\n","import CallFeedback from \"./CallFeedback\";\n\nexport default CallFeedback;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Layout, Rate, Button, Space, Typography, Card } from \"antd\";\nimport { Call } from \"src/types/Call\";\nimport { getLottieOptions } from \"src/utils/UI\";\nimport Lottie from \"react-lottie\";\nimport GoodbyeLottie from \"src/assets/Lottie/Goodbye.json\";\nimport TeamWaveLottie from \"src/assets/Lottie/TeamWave.json\";\nimport CyclingLottie from \"src/assets/Lottie/GirlCycling.json\";\nimport ShrugLottie from \"src/assets/Lottie/Shrug.json\";\nimport { getRandomItem } from \"src/utils\";\n\nexport type CallFeedbackType =\n  | \"forced\"\n  | \"deliberate\"\n  | \"unhappy\"\n  | \"terminated\";\n\ninterface Props {\n  call: Call;\n  navigate: (path: string) => void;\n  rateCall: (rating: number) => void;\n  type: CallFeedbackType;\n  logout: () => void;\n}\n\nconst CallFeedback: React.FC<Props> = ({\n  call,\n  navigate,\n  rateCall,\n  type,\n  logout,\n}) => {\n  const { t } = useTranslation([\"feedback\", \"common\"]);\n\n  const [rating, setRating] = useState<number>();\n\n  const desc = [\n    t(\"feedback:ratings.terrible\"),\n    t(\"feedback:ratings.bad\"),\n    t(\"feedback:ratings.normal\"),\n    t(\"feedback:ratings.good\"),\n    t(\"feedback:ratings.wonderful\"),\n  ];\n\n  const renderTitle = () => {\n    switch (type) {\n      case \"deliberate\":\n      case \"forced\":\n        return t(\"feedback:title.happy\");\n      case \"unhappy\":\n        return t(\"feedback:title.unhappy\");\n      default:\n        return t(\"feedback:title.unhappy\");\n    }\n  };\n\n  const renderBodyText = () => {\n    switch (type) {\n      case \"unhappy\":\n        return t(\"feedback:body.unhappy\");\n      case \"deliberate\":\n        return t(\"feedback:body.happy\");\n      case \"terminated\":\n        return t(\"feedback:body.terminated\");\n      case \"forced\":\n        return \"\";\n    }\n  };\n\n  const pickIllustration = () => {\n    switch (type) {\n      case \"deliberate\":\n      case \"forced\":\n        return getRandomItem([TeamWaveLottie, CyclingLottie, GoodbyeLottie]);\n      case \"unhappy\":\n      case \"terminated\":\n        return ShrugLottie;\n      default:\n        return GoodbyeLottie;\n    }\n  };\n\n  const renderButtons = () => {\n    switch (type) {\n      case \"deliberate\":\n      case \"forced\":\n        return (\n          <Space>\n            <Button\n              size=\"large\"\n              disabled={!!rating}\n              onClick={() => {\n                if (!rating) return;\n                logout();\n              }}\n            >\n              {t(\"common:logout\")}\n            </Button>\n\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              disabled={!!rating}\n              onClick={() => {\n                if (!rating) return;\n                rateCall(rating);\n                navigate(`/`);\n              }}\n            >\n              {t(\"feedback:buttons.return\")}\n            </Button>\n          </Space>\n        );\n      case \"unhappy\":\n        return (\n          <Space>\n            <Button size=\"large\" onClick={() => navigate(`/call/${call.id}`)}>\n              {t(\"feedback:buttons.rejoin\")}\n            </Button>\n            <Button type=\"primary\" size=\"large\" onClick={() => navigate(`/`)}>\n              {t(\"feedback:buttons.return\")}\n            </Button>\n          </Space>\n        );\n      default:\n        return (\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            onClick={() => navigate(`/`)}\n            block\n          >\n            {t(\"feedback:buttons.return\")}\n          </Button>\n        );\n    }\n  };\n\n  const renderRatings = () => {\n    switch (type) {\n      case \"forced\":\n      case \"deliberate\":\n      case \"unhappy\":\n        return (\n          <Card title=\"How was the audio and video?\">\n            <Rate\n              value={rating}\n              onChange={(val: number) => setRating(val)}\n              tooltips={desc}\n              style={{ fontSize: 36 }}\n            />\n          </Card>\n        );\n      default:\n        return <div />;\n    }\n  };\n\n  return (\n    <Layout.Content className=\"flex w-screen h-screen bg-white\">\n      <Space\n        direction=\"vertical\"\n        align=\"center\"\n        style={{ margin: \"auto\" }}\n        className=\"w-50\"\n        size=\"large\"\n      >\n        <Lottie\n          options={getLottieOptions(pickIllustration())}\n          height=\"50%\"\n          width=\"50%\"\n        />\n        <Typography.Title level={2}>{renderTitle()}</Typography.Title>\n        <Typography.Text type=\"secondary\">{renderBodyText()}</Typography.Text>\n        {renderRatings()}\n        {renderButtons()}\n      </Space>\n    </Layout.Content>\n  );\n};\n\nexport default CallFeedback;\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport {\n  enterFullScreen,\n  exitFullScreen,\n} from \"src/components/Common/commonSlice\";\nimport { useAppDispatch } from \"src/redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { useCallById } from \"src/hooks/useCalls\";\nimport { push } from \"connected-react-router\";\nimport CallFeedback from \"src/components/CallFeedback\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { differenceInMinutes } from \"date-fns/esm\";\nimport { CallFeedbackType } from \"src/components/CallFeedback/CallFeedback\";\nimport Error from \"src/components/Error\";\nimport { useTranslation } from \"react-i18next\";\nimport Loader from \"src/components/Loader\";\nimport { logout } from \"src/redux/modules/session\";\nimport { addMinutes } from \"date-fns\";\n\n// const customIcons = {\n//   1: <FrownOutlined style={{ fontSize: 36 }} />,\n//   2: <FrownOutlined style={{ fontSize: 36 }} />,\n//   3: <MehOutlined style={{ fontSize: 36 }} />,\n//   4: <SmileOutlined style={{ fontSize: 36 }} />,\n//   5: <SmileOutlined style={{ fontSize: 36 }} />,\n// };\n\nasync function rateCall(callId: number, rating: number): Promise<void> {\n  await fetchAuthenticated(`calls/${callId}`, {\n    method: \"PATCH\",\n    body: JSON.stringify({\n      rating,\n    }),\n  });\n}\n\ntype TParams = { id: string };\n\nconst CallFeedbackPage: React.FC<RouteComponentProps<TParams>> = ({\n  match,\n}) => {\n  const dispatch = useAppDispatch();\n\n  const { t } = useTranslation(\"error\");\n\n  const call = useCallById(parseInt(match.params.id));\n\n  const [exitType, setExitType] = useState<CallFeedbackType>();\n\n  useEffect(() => {\n    if (!call) return;\n\n    if (call.status === \"terminated\") setExitType(\"terminated\");\n\n    const diffMin = differenceInMinutes(\n      new Date(call.scheduledEnd),\n      new Date()\n    );\n\n    if (diffMin >= 5) {\n      setExitType(\"unhappy\");\n    } else if (diffMin <= 0) {\n      setExitType(\"forced\");\n    } else {\n      setExitType(\"deliberate\");\n    }\n  }, [call]);\n\n  useEffect(() => {\n    dispatch(enterFullScreen());\n\n    return () => {\n      dispatch(exitFullScreen());\n    };\n  }, [dispatch]);\n\n  if (!call || !exitType) {\n    return <Loader />;\n  }\n\n  if (\n    call.status === \"rescheduled\" ||\n    call.status === \"pending_approval\" ||\n    call.status === \"cancelled\" ||\n    call.status === \"no_show\"\n  )\n    return (\n      <Error\n        status=\"error\"\n        title={t(\"call.callNull\")}\n        extra={[\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            onClick={() => dispatch(push(\"/\"))}\n          >\n            {t(\"call.returnHome\")}\n          </Button>,\n        ]}\n      />\n    );\n\n  if (addMinutes(new Date(call.scheduledEnd), 15) < new Date())\n    return (\n      <Error\n        status=\"error\"\n        title={t(\"call.callNull\")}\n        extra={[\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            onClick={() => dispatch(push(\"/\"))}\n          >\n            {t(\"call.returnHome\")}\n          </Button>,\n        ]}\n      />\n    );\n\n  return (\n    <CallFeedback\n      call={call}\n      navigate={(path: string) => dispatch(push(path))}\n      rateCall={async (rating: number) => await rateCall(call.id, rating)}\n      type={exitType}\n      logout={() => dispatch(logout())}\n    />\n  );\n};\n\nexport default CallFeedbackPage;\n","import { Icebreaker, Quote, Route } from \"src/types/Common\";\nimport ProfilePage from \"src/pages/Profile\";\nimport CallsPage from \"src/pages/Calls\";\nimport SettingsPage from \"src/pages/Settings\";\nimport DashboardPage from \"src/pages/Dashboard\";\nimport CallPage from \"src/pages/Call\";\nimport CallFeedbackPage from \"src/pages/CallFeedback\";\nimport { Language } from \"src/types/Session\";\n\nexport const UNAUTHENTICATED_USER_ID = -1;\n\nexport const AVATAR_LARGE = 135;\n\nexport const ROUTES: Route[] = [\n  { path: \"/calls\", component: CallsPage, label: \"Calls\" },\n  { path: \"/settings\", component: SettingsPage, label: \"Settings\" },\n  { path: \"/profile/:id\", component: ProfilePage, label: \"Profile\" },\n  { path: \"/call/:id\", component: CallPage, label: \"Call\" },\n  { path: \"/feedback/:id\", component: CallFeedbackPage, label: \"Feedback\" },\n  { path: \"/\", component: DashboardPage, label: \"Dash\" },\n];\n\nexport const TOKEN_KEY = \"apiToken\";\n\nexport const WRAPPER_PADDING = { padding: 24, paddingTop: 0 };\n\nexport const QUOTES: Quote[] = [\n  {\n    author: \"Mary Ann Evans\",\n    quote: \"It is never too late to be what you might have been.\",\n    description: \"\",\n    background:\n      \"https://images.unsplash.com/photo-1536257104079-aa99c6460a5a?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\",\n  },\n  {\n    author: \"Walt Disney\",\n    quote:\n      \"All our dreams can come true, if we have the courage to pursue them.\",\n    description: \"\",\n    background:\n      \"https://images.unsplash.com/photo-1508556497405-ed7dcd94acfc?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\",\n  },\n  {\n    author: \"Mark Twain\",\n    quote: \"The secret of getting ahead is getting started\",\n    description: \"\",\n    background:\n      \"https://images.unsplash.com/photo-1532971077387-7c6568101df5?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\",\n  },\n  {\n    author: \"Babe Ruth\",\n    quote: \"It’s hard to beat a person who never gives up.\",\n    description: \"\",\n    background:\n      \"https://images.unsplash.com/photo-1564521456797-9f176245daa9?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1951&q=80\",\n  },\n];\n\nexport const LANGUAGES: Record<Language, string> = {\n  en: \"English\",\n  es: \"Español\",\n};\n\nexport const QUESTIONS: Icebreaker[] = [\n  {\n    en: \"If you had your own intro theme song, which song would it be and why?\",\n    es: \"If you had your own intro theme song, which song would it be and why?\",\n  },\n];\n","import { UNAUTHENTICATED_USER_ID } from \"src/utils/constants\";\nimport { User } from \"src/types/User\";\nimport { Language } from \"src/types/Session\";\n\ninterface AuthInfo {\n  id: number;\n  type: \"inmate\";\n  token: string;\n}\n\ntype SessionStatus = \"inactive\" | \"active\" | \"loading\";\n\ninterface SessionState {\n  isLoggedIn: boolean;\n  authInfo: AuthInfo;\n  user: User;\n  language: Language;\n  status: SessionStatus;\n}\n\n// Constants & Shapes\nconst SET_SESSION = \"user/SET_SESSION\";\nconst LOGOUT = \"user/LOGOUT\";\nconst SET_SESSION_STATUS = \"user/SET_STATUS\";\n\ninterface SetSessionAction {\n  type: typeof SET_SESSION;\n  payload: SessionState;\n}\ninterface LogoutAction {\n  type: typeof LOGOUT;\n}\n\ninterface SetSessionStatusAction {\n  type: typeof SET_SESSION_STATUS;\n  payload: SessionStatus;\n}\n\ntype UserActionTypes = LogoutAction | SetSessionAction | SetSessionStatusAction;\n\nexport const logout = (): UserActionTypes => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const setSession = (userState: SessionState): UserActionTypes => {\n  return {\n    type: SET_SESSION,\n    payload: userState,\n  };\n};\n\nexport const setSessionStatus = (status: SessionStatus): UserActionTypes => {\n  return {\n    type: SET_SESSION_STATUS,\n    payload: status,\n  };\n};\n\n// Reducer\nconst initialState: SessionState = {\n  authInfo: { id: UNAUTHENTICATED_USER_ID, type: \"inmate\", token: \"\" },\n  user: {\n    id: UNAUTHENTICATED_USER_ID,\n    firstName: \"\",\n    lastName: \"\",\n    location: \"\",\n    dateOfBirth: \"\",\n    inmateIdentification: \"\",\n    quota: 0,\n    race: \"\",\n    needsMonitor: true,\n    needsApproval: true,\n  },\n  isLoggedIn: false,\n  language: \"en\",\n  status: \"inactive\",\n};\n\nexport function sessionReducer(\n  state = initialState,\n  action: UserActionTypes\n): SessionState {\n  switch (action.type) {\n    case SET_SESSION:\n      return action.payload;\n    case LOGOUT:\n      return {\n        authInfo: { id: UNAUTHENTICATED_USER_ID, type: \"inmate\", token: \"\" },\n        user: {\n          id: UNAUTHENTICATED_USER_ID,\n          firstName: \"\",\n          lastName: \"\",\n          location: \"\",\n          dateOfBirth: \"\",\n          inmateIdentification: \"\",\n          quota: 0,\n          race: \"\",\n          needsApproval: true,\n          needsMonitor: true,\n        },\n        isLoggedIn: false,\n        status: \"inactive\",\n        language: \"en\",\n      };\n    case SET_SESSION_STATUS:\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { Connection } from \"src/types/Connection\";\nimport { fetchAuthenticated } from \"src/api/Common\";\n\nexport const fetchConnections = createAsyncThunk(\n  \"connections/fetchAll\",\n  async () => {\n    const body = await fetchAuthenticated(`connections`);\n    const connections = ((body.data as Record<string, unknown>)\n      .connections as Connection[]).map((inmate) => camelcaseKeys(inmate));\n\n    return connections;\n  }\n);\n\nexport const connectionAdapter = createEntityAdapter<Connection>();\n\nexport const connectionSlice = createSlice({\n  name: \"connection\",\n  initialState: connectionAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchConnections.fulfilled, (state, action) => {\n      connectionAdapter.setAll(state, action.payload);\n    });\n  },\n});\n\nexport const connectionActions = connectionSlice.actions;\n","import { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport { combineReducers } from \"redux\";\nimport { History, createBrowserHistory } from \"history\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { sessionReducer } from \"./modules/session\";\nimport { callSlice } from \"./modules/call\";\nimport { connectionSlice } from \"./modules/connection\";\nimport { modalsSlice } from \"src/redux/modules/modalsSlice\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { commonSlice } from \"src/components/Common/commonSlice\";\nimport { contactsSlice } from \"./modules/contactsSlice\";\n\nexport const history = createBrowserHistory();\n\nexport const createRootReducer = (history: History) =>\n  combineReducers({\n    common: commonSlice.reducer,\n    session: sessionReducer,\n    calls: callSlice.reducer,\n    contacts: contactsSlice.reducer,\n    modals: modalsSlice.reducer,\n    connections: connectionSlice.reducer,\n    router: connectRouter(history),\n  });\nexport const rootReducer = createRootReducer(history);\n\nexport const Store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(routerMiddleware(history)),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppDispatch = typeof Store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>(); // Export a hook that can be reused to resolve types\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router\";\n\nexport interface ProtectedRouteProps extends RouteProps {\n  isAuthenticated: boolean;\n  authenticationPath: string;\n}\n\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = (props) => {\n  let redirectPath = \"\";\n  if (!props.isAuthenticated) {\n    redirectPath = props.authenticationPath;\n  }\n\n  if (redirectPath) {\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />;\n    return <Route {...props} component={renderComponent} render={undefined} />;\n  } else {\n    return <Route {...props} />;\n  }\n};\n\nexport default ProtectedRoute;\n","import { API_URL, fetchTimeout } from \"./Common\";\nimport { setSession, setSessionStatus } from \"src/redux/modules/session\";\nimport { Store } from \"src/redux\";\nimport { User } from \"src/types/User\";\nimport { Language } from \"src/types/Session\";\n\nasync function initializeSession(token: string, data: any, language: Language) {\n  const user: User = {\n    id: data.id,\n    firstName: data.firstName,\n    lastName: data.lastName,\n    dateOfBirth: data.dateOfBirth,\n    profileImagePath: data.profileImagePath,\n    inmateIdentification: data.inmateIdentification,\n    quota: data.quota,\n    location: data.location,\n    race: data.race,\n    needsApproval: data.needsApproval,\n    needsMonitor: data.needsMonitor,\n  };\n  Store.dispatch(\n    setSession({\n      user,\n      authInfo: { id: data.id, type: \"inmate\", token },\n      isLoggedIn: true,\n      language,\n      status: \"active\",\n    })\n  );\n}\n\nexport async function loginWithCredentials(cred: {\n  inmateNumber: string;\n  pin: string;\n  facilityId: number;\n  language: Language;\n}): Promise<void> {\n  Store.dispatch(setSessionStatus(\"loading\"));\n  const response = await fetchTimeout(`${API_URL}auth/member/login/`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify({\n      facilityId: cred.facilityId,\n      inmateIdentification: cred.inmateNumber,\n      pin: cred.pin,\n    }),\n  });\n  const body = await response.json();\n  const token = response.headers.get(\"Authorization\") || \"\";\n  // const re = /(?<=connect.sid=)([^\\s;]+)/gm;\n  // const found = cookies.match(re);\n  // console.log('found?')\n  // console.log(found)\n  if (!token) throw new Error(\"Cannot find header token\");\n  await initializeSession(token, body.data, cred.language);\n}\n","var _defs, _path, _polygon, _polygon2, _path2, _polygon3, _polygon4, _path3, _path4, _path5, _path6, _path7, _path8, _path9;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Golden_Grid\",\n    \"data-name\": \"Golden Grid\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 666.85 257.93\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1,.cls-2{fill:#0073eb;stroke:#fff;stroke-miterlimit:10;stroke-width:3px;}.cls-2{opacity:0.7;}.cls-3{fill:#1a1a1a;}\"))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M111.83,48.88h0l-8.38,20.22L98.27,81.58l0,0v.08L91.48,98h0L90,101.55h0l-2.9,7-.6-2.23-.64-2.43-4-15.27L71,47.66l-1.6-6.1L63.79,20.1Z\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"cls-2\",\n    points: \"87.09 108.56 85.99 107.12 84.4 105.05 77.65 96.2 71.96 88.74 50.31 60.32 41.21 48.39 71.04 47.66 81.83 88.63 85.85 103.9 86.49 106.33 87.09 108.56\"\n  })), _polygon2 || (_polygon2 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"cls-1\",\n    points: \"67.95 154.72 59.71 174.61 29.58 171.5 58.55 149.76 64.48 145.32 75.17 137.31 67.96 154.69 67.95 154.72\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M134.41,137.69h0L81.75,151.16l-2.83.73-11,2.8,7.21-17.38h0l2.27-5.48h0l9.54-23,.1-.23h0l2.9-7h0L91.47,98h0l6.75-16.29h0l0-.09,5.17-12.47,8.38-20.22h0l4,15.53,4.51,17.78,4.95,19.43,3,11.89h0Z\"\n  })), _polygon3 || (_polygon3 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"cls-1\",\n    points: \"161.52 72.3 156.34 84.79 151.4 96.73 147.81 105.36 146.74 107.93 146.74 107.94 134.41 137.69 128.27 113.52 128.26 113.52 125.24 101.63 120.29 82.2 120.3 82.19 121.87 81.82 141.5 77.1 160.2 72.62 161.52 72.3\"\n  })), _polygon4 || (_polygon4 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"cls-2\",\n    points: \"187.8 89.91 179.44 91.47 170.42 93.17 170.41 93.16 151.4 96.73 156.34 84.79 161.52 72.3 162.14 72.71 187.8 89.91\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M234.77,211.91h-17.2L209.18,190H163l-8.4,21.88H137.37l38.93-98.23h19.54Zm-66-36.73H203.4l-17.33-45.27Z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M259.67,211.91H245V161.28h-5.64V148.07h11.83l6.19,6.2c5.5-4.54,12.24-7.43,18.57-7.43a20.61,20.61,0,0,1,17.34,8.66,31.53,31.53,0,0,1,21-8.66c11.7,0,22.43,8,22.43,26.55v38.52H322V173.39c0-8.39-4.54-12.93-11.28-12.93-7.57,0-12.52,4.54-12.52,10.59v40.86H283.61V173.39c0-8.39-4.68-12.93-11.29-12.93-7.42,0-12.65,4.4-12.65,10.18Z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M393.53,190.72l12.1,6.61c-4.95,8.39-14.17,16.09-26.82,16.09-18.3,0-31.37-15.41-31.37-33.29s13.07-33.57,31.23-33.57,29.44,15.27,30,31.92l-5.5,5.36H362.3c.82,9.5,8.11,15.82,16.51,15.82C384.58,199.66,390.36,196,393.53,190.72ZM363,172.15h30.95c-1-7.15-7.43-12.52-15.27-12.52A15.72,15.72,0,0,0,363,172.15Z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M461.76,190.72l12.11,6.61c-4.95,8.39-14.17,16.09-26.83,16.09-18.3,0-31.37-15.41-31.37-33.29s13.07-33.57,31.23-33.57,29.44,15.27,30,31.92l-5.5,5.36H430.53c.83,9.5,8.12,15.82,16.51,15.82C452.82,199.66,458.6,196,461.76,190.72Zm-30.54-18.57h30.95c-1-7.15-7.42-12.52-15.27-12.52A15.72,15.72,0,0,0,431.22,172.15Z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M489.41,113.68l4.82-5h10.18V197.6h5.64v14.31H495.6l-6.19-6.33Z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M540.73,211.91H526V161.28h-5.5V148.07h15l5.23,5.23ZM532,112a10.49,10.49,0,0,1,10.39,10.39A10.37,10.37,0,0,1,532,132.67a10.25,10.25,0,0,1-10.25-10.26A10.37,10.37,0,0,1,532,112Z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M620,180a33.36,33.36,0,1,1-33.29-33.29A33.35,33.35,0,0,1,620,180Zm-15,0c0-10.32-7.71-19.12-18.3-19.12s-18.44,8.8-18.44,19.12,7.85,19.26,18.44,19.26S605,190.31,605,180Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.31994bf9.svg\";\nexport { ForwardRef as ReactComponent };","export const BORDER_RADIUS = { borderRadius: 8 };\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport {\n  Input,\n  Layout,\n  Button,\n  Form,\n  Typography,\n  Space,\n  Row,\n  Radio,\n  Col,\n  Select,\n} from \"antd\";\nimport { Redirect } from \"react-router\";\nimport { loginWithCredentials } from \"src/api/User\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { getRandomItem, showToast } from \"src/utils/utils\";\nimport { ReactComponent as Logo } from \"src/assets/logo.svg\";\nimport \"./index.css\";\nimport \"src/i18n/config\";\nimport { useTranslation } from \"react-i18next\";\nimport { LANGUAGES, QUOTES } from \"src/utils/constants\";\nimport { BORDER_RADIUS } from \"src/styles/Layout\";\nimport { Quote } from \"src/types/Common\";\nimport { fetchFacilities } from \"src/api/Common\";\nimport { FacilityRO } from \"src/api/interfaces/apiResponses\";\n\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  session: state.session,\n});\n\nconst mapDispatchToProps = {};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst FORM_LAYOUT = {\n  labelCol: { flex: \"95px\" },\n  wrapperCol: { flex: 1 },\n};\n\nconst FORM_TAIL_LAYOUT = {\n  wrapperCol: { span: 24 },\n};\n\nfunction LoginContainer({ session }: PropsFromRedux): ReactElement {\n  const { t, i18n } = useTranslation(\"login\");\n  const { Option } = Select;\n\n  const [dailyQuote] = useState(getRandomItem(QUOTES) as Quote);\n  const [facilities, setFacilities] = useState<FacilityRO[]>([]);\n\n  useEffect(() => {\n    const getFacilityOptions = async () => {\n      const response = await fetchFacilities();\n      setFacilities(response.data.results);\n    };\n    getFacilityOptions();\n  }, []);\n\n  if (session.isLoggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const onFinish = async (values: any) => {\n    try {\n      await loginWithCredentials({\n        inmateNumber: values.inmateNumber,\n        pin: values.pin,\n        facilityId: values.facilityId,\n        language: values.language,\n      });\n    } catch (err) {\n      showToast(\"login_error\", \"Invalid ID or Pin Code\", \"error\");\n    }\n  };\n\n  const onFinishFailed = (_errorInfo: any) => {\n    showToast(\"login_error\", \"Invalid ID or Pin Code\", \"error\");\n  };\n\n  const facilityOptions = facilities.map((facility: FacilityRO) => (\n    <Option key={`option-${facility.id}`} value={facility.id}>\n      {facility.name}\n    </Option>\n  ));\n\n  return (\n    <Content\n      className=\"d-flex flex-column banner-background\"\n      style={{\n        backgroundImage: `url(${dailyQuote.background})`,\n      }}\n    >\n      <div className=\"login-form-container m-auto\" style={BORDER_RADIUS}>\n        <Space direction=\"vertical\" size=\"large\">\n          <Row>\n            <Logo className=\"login-logo\" />\n          </Row>\n          <Row justify=\"center\">\n            <Col>\n              <Typography.Text>\n                {t(\"caption\")}{\" \"}\n                <Typography.Link href=\"/tos.pdf\" target=\"_blank\">\n                  {t(\"tos\")}{\" \"}\n                </Typography.Link>\n                {t(\"and\")}{\" \"}\n                <Typography.Link href=\"/privacy_policy.pdf\" target=\"_blank\">\n                  {t(\"pp\")}.\n                </Typography.Link>{\" \"}\n              </Typography.Text>\n            </Col>\n          </Row>\n\n          <Form\n            {...FORM_LAYOUT}\n            name=\"login\"\n            className=\"w-full rounded-lg\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            initialValues={{\n              language: Object.keys(LANGUAGES)[0],\n            }}\n          >\n            <Form.Item\n              label=\"Language\"\n              name=\"language\"\n              rules={[{ required: true, message: \"Language is required.\" }]}\n            >\n              <Radio.Group\n                className=\"w-100\"\n                onChange={(e) => i18n.changeLanguage(e.target.value)}\n              >\n                {Object.entries(LANGUAGES).map(([key, value]) => (\n                  <Radio.Button key={key} value={key}>\n                    {value}\n                  </Radio.Button>\n                ))}\n              </Radio.Group>\n            </Form.Item>\n\n            <Form.Item\n              name=\"inmateNumber\"\n              label=\"ID Number\"\n              rules={[{ required: true, message: \"Inmate ID is required.\" }]}\n            >\n              <Input\n                prefix={<UserOutlined />}\n                placeholder={t(\"placeholder.inmateNumber\")}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"PIN Code\"\n              name=\"pin\"\n              rules={[{ required: true, message: \"Password is required.\" }]}\n            >\n              <Input.Password\n                prefix={<LockOutlined />}\n                placeholder={t(\"placeholder.pinCode\")}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"facilityId\"\n              label=\"Facility\"\n              rules={[\n                { required: true, message: \"Facility must be selected.\" },\n              ]}\n            >\n              <Select>{facilityOptions}</Select>\n            </Form.Item>\n\n            <Form.Item {...FORM_TAIL_LAYOUT} style={{ borderRadius: 4 }}>\n              <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                {t(\"buttonText\")}\n              </Button>\n            </Form.Item>\n          </Form>\n        </Space>\n      </div>\n    </Content>\n  );\n}\n\nexport default connector(LoginContainer);\n","import React, { ReactElement } from \"react\";\nimport { Menu, Layout, Space, Row, Avatar, Typography, Divider } from \"antd\";\nimport {\n  EllipsisOutlined,\n  HomeOutlined,\n  ScheduleOutlined,\n} from \"@ant-design/icons\";\nimport { User } from \"src/types/User\";\nimport { ReactComponent as Logo } from \"src/assets/logo.svg\";\nimport { getFullName } from \"src/utils/utils\";\n\nconst { Sider } = Layout;\ninterface Props {\n  user: User;\n  navigate: (path: string) => void;\n}\n\nexport default function Sidebar({ user, navigate }: Props): ReactElement {\n  return (\n    <Sider theme=\"light\" className=\"shadow-lg\">\n      <Space direction=\"vertical\" className=\"w-full\">\n        <Row className=\"p-2 cursor-pointer\" onClick={() => navigate(\"/\")}>\n          <Logo className=\"login-logo\" />\n        </Row>\n        <Row\n          align=\"middle\"\n          className=\"pl-4 cursor-pointer\"\n          onClick={() => navigate(`/profile/${user.id}`)}\n        >\n          <Space>\n            <Avatar src={user.profileImagePath} size=\"large\" />\n            <Typography.Text>{getFullName(user)}</Typography.Text>\n          </Space>\n        </Row>\n        <Menu mode=\"inline\" defaultSelectedKeys={[\"home\"]} className=\"w-full\">\n          <Menu.Item\n            key=\"home\"\n            icon={<HomeOutlined />}\n            onClick={() => navigate(\"/\")}\n          >\n            Home\n          </Menu.Item>\n          <Menu.Item\n            key=\"calls\"\n            icon={<ScheduleOutlined />}\n            onClick={() => navigate(\"/calls\")}\n          >\n            Calls\n          </Menu.Item>\n          <Divider />\n          <Menu.Item\n            key=\"settings\"\n            icon={<EllipsisOutlined />}\n            onClick={() => navigate(\"/settings\")}\n          >\n            Settings\n          </Menu.Item>\n        </Menu>\n      </Space>\n    </Sider>\n  );\n}\n","import Sidebar from \"./Sidebar\";\n\nexport default Sidebar;\n","import KioskConfirmationModal from \"./KioskConfirmationModal\";\n\nexport default KioskConfirmationModal;\n","import { Space, Typography } from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport React, { ReactElement } from \"react\";\nimport { KioskConfirmationModalData } from \"src/types/UI\";\nimport Lottie from \"react-lottie\";\nimport KioskLottie from \"src/assets/Lottie/Kiosk.json\";\nimport { useTranslation } from \"react-i18next\";\nimport { getLottieOptions } from \"src/utils/UI\";\n\ninterface Props {\n  data: KioskConfirmationModalData;\n  handleConfirm: () => void;\n  handleLogout: () => void;\n}\n\nexport default function KioskConfirmationModal({\n  data,\n  handleConfirm,\n  handleLogout,\n}: Props): ReactElement {\n  const call = data.entity;\n  const { t } = useTranslation([\"modals\", \"common\"]);\n\n  return (\n    <Modal\n      title={t(\"modals:kioskConfirmationModal.title\")}\n      visible={true}\n      onOk={handleConfirm}\n      onCancel={handleLogout}\n      className=\"rounded-sm w-full flex flex-col align-center\"\n      okText={t(\"common:confirm\")}\n      cancelText={t(\"common:logout\")}\n    >\n      <Lottie\n        options={getLottieOptions(KioskLottie)}\n        height=\"50%\"\n        width=\"50%\"\n      />\n      <Space direction=\"vertical\" className=\"w-full\">\n        <Typography.Text>\n          {t(\"modals:kioskConfirmationModal.subtitle\")}\n        </Typography.Text>\n        <Typography.Text strong>{call.kioskName}</Typography.Text>\n        <Typography.Text>\n          {t(\"modals:kioskConfirmationModal.body\")}\n        </Typography.Text>\n      </Space>\n    </Modal>\n  );\n}\n","import CancelCallModal from \"./CancelCallModal\";\n\nexport default CancelCallModal;\n","import { Space, Row, Col, Typography, Select } from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { differenceInMinutes, format } from \"date-fns\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { CancelCallModalData } from \"src/types/UI\";\nimport { getParticipantsFirstNames, getParticipantsFullNames } from \"src/utils\";\n\ninterface Props {\n  data: CancelCallModalData;\n  closeModal: () => void;\n}\n\nconst CancelCallModal: React.FC<Props> = ({ data, closeModal }) => {\n  const { t } = useTranslation(\"modals\");\n  const call = data.entity;\n  const fullName = getParticipantsFullNames(call);\n  const startDate = format(new Date(call.scheduledStart), \"EEEE, MMMM d\");\n  const startTime = format(new Date(call.scheduledStart), \"h:mm aaa OOO\");\n  const duration =\n    call &&\n    differenceInMinutes(\n      new Date(call.scheduledEnd),\n      new Date(call.scheduledEnd)\n    );\n  const firstName = getParticipantsFirstNames(call);\n\n  return (\n    <Modal\n      title={t(\"cancelCallModal.title\")}\n      visible={true}\n      okText={t(\"cancelCallModal.okText\")}\n      onOk={closeModal}\n      onCancel={closeModal}\n      className=\"rounded-sm\"\n    >\n      <Space direction=\"vertical\" size=\"large\">\n        <Row>\n          <Typography.Text>\n            {t(\"cancelCallModal.messageOne\", { connectionName: fullName })}\n          </Typography.Text>\n        </Row>\n        <Row>\n          <Col>\n            <div>\n              <Typography.Text>{startDate}</Typography.Text>\n            </div>\n            <div>\n              <Typography.Text>\n                {startTime} • {`${duration}mins`}\n              </Typography.Text>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Typography.Text>\n            {t(\"cancelCallModal.messageTwo\", {\n              connectionFirstName: firstName,\n            })}\n          </Typography.Text>\n        </Row>\n        <Row />\n      </Space>\n      <Select\n        className=\"w-full\"\n        placeholder={t(\"cancelCallModal.dropdownPlaceholder\")}\n      ></Select>\n    </Modal>\n  );\n};\n\nexport default CancelCallModal;\n","import InformationalModal from \"./InformationalModal\";\n\nexport default InformationalModal;\n","import React from \"react\";\nimport { Typography, Modal } from \"antd\";\nimport { ResourceModalData } from \"src/types/UI\";\n\ninterface Props {\n  data: ResourceModalData;\n  closeModal: () => void;\n}\n\nconst InformationalModal: React.FC<Props> = ({ data, closeModal }) => {\n  const resource = data.entity;\n  return (\n    <Modal\n      title={resource.title}\n      visible={true}\n      okText={resource.okBtnText || \"OK\"}\n      cancelButtonProps={{\n        style: { display: data.entity.hideCancel ? \"none\" : \"inline\" },\n      }}\n      onOk={closeModal}\n      onCancel={closeModal}\n      className=\"rounded-sm w-full\"\n    >\n      <Typography.Text>{resource.body}</Typography.Text>\n    </Modal>\n  );\n};\n\nexport default InformationalModal;\n","import TestConnectionModal from \"./TestConnectionModal\";\n\nexport default TestConnectionModal;\n","import React, { useEffect, useState } from \"react\";\nimport { Typography, Modal } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { TestConnectionModalData } from \"src/types/UI\";\nimport Video from \"src/components/Call/Video\";\nimport Audio from \"src/components/Call/Audio\";\nimport { getMedia } from \"src/utils\";\n// import { VolumeContainer } from \"src/components/Call/VolumeContainer\";\n\ninterface Props {\n  data: TestConnectionModalData;\n  closeModal: () => void;\n}\n\nconst TestConnectionModal = ({ data, closeModal }: Props) => {\n  const { t } = useTranslation(\"call\");\n\n  const [audio, setAudio] = useState<MediaStream>();\n  const [video, setVideo] = useState<MediaStream>();\n\n  useEffect(() => {\n    (async () => {\n      setAudio(await getMedia(\"audio\"));\n      setVideo(await getMedia(\"video\"));\n    })();\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      if (audio) {\n        const tracks = audio.getTracks();\n        tracks.forEach((track) => {\n          track.stop();\n        });\n      }\n      if (video) {\n        const tracks = video.getTracks();\n        tracks.forEach((track) => {\n          track.stop();\n        });\n      }\n    };\n  }, [audio, video]);\n\n  if (data.activeType !== \"TEST_CONNECTION_MODAL\") return <div />;\n\n  return (\n    <Modal\n      title={t(\"testConnection.title\")}\n      visible={true}\n      cancelButtonProps={{\n        style: { display: \"none\" },\n      }}\n      onOk={closeModal}\n      className=\"rounded-sm w-full\"\n    >\n      {video ? (\n        <Video srcObject={video} className=\"w-full\" autoPlay={true} />\n      ) : (\n        <div />\n      )}\n      {audio ? <Audio srcObject={audio} /> : <div />}\n      <Typography.Text>{\"\"}</Typography.Text>\n      {/* TODO figure out what's the best way to implement this */}\n      {/* <VolumeContainer audioVolume={audioVolume} className=\"absolute left-2 top-4\"/> */}\n    </Modal>\n  );\n};\n\nexport default TestConnectionModal;\n","import React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"src/redux\";\nimport { closeModal } from \"src/redux/modules/modalsSlice\";\nimport KioskConfirmationModal from \"./KioskConfirmationModal\";\nimport CancelCallModal from \"./CancelCallModal\";\nimport InformationalModal from \"./InformationalModal\";\nimport TestConnectionModal from \"./TestConnectionModal\";\nimport { push } from \"connected-react-router\";\nimport { logout } from \"src/redux/modules/session\";\nimport EnterCallSound from \"src/assets/Sounds/EnterCall.wav\";\nimport useSound from \"use-sound\";\n\nconst Modals: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const data = useAppSelector((state) => state.modals.data);\n  const [playEnterSound] = useSound(EnterCallSound);\n\n  switch (data.activeType) {\n    case \"CANCEL_CALL_MODAL\":\n      return (\n        <CancelCallModal\n          closeModal={() => dispatch(closeModal())}\n          data={data}\n        />\n      );\n    case \"RESOURCE_MODAL\":\n      return (\n        <InformationalModal\n          closeModal={() => dispatch(closeModal())}\n          data={data}\n        />\n      );\n    case \"TEST_CONNECTION_MODAL\":\n      return (\n        <TestConnectionModal\n          closeModal={() => dispatch(closeModal())}\n          data={data}\n        />\n      );\n    case \"KIOSK_CONFIRMATION_MODAL\":\n      return (\n        <KioskConfirmationModal\n          data={data}\n          handleConfirm={() => {\n            dispatch(closeModal());\n            playEnterSound();\n            dispatch(push(`/call/${data.entity.id}`));\n          }}\n          handleLogout={() => {\n            dispatch(closeModal());\n            dispatch(logout());\n          }}\n        />\n      );\n    default:\n      return null;\n  }\n};\n\nexport default Modals;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport { useAppSelector } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ConnectedRouter, push } from \"connected-react-router\";\nimport { Layout } from \"antd\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { History } from \"history\";\nimport ProtectedRoute, {\n  ProtectedRouteProps,\n} from \"./components/Hocs/ProtectedRoute\";\nimport LoginPage from \"src/pages/Login\";\nimport { ROUTES } from \"./utils/constants\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"./redux/modules/contactsSlice\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useTranslation } from \"react-i18next\";\nimport Modals from \"./components/Modals/Modals\";\nimport Loader from \"./components/Loader\";\n\nconst mapDispatchToProps = { fetchContacts, push };\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction App({\n  history,\n  fetchContacts,\n  push,\n}: PropsFromRedux & { history: History }) {\n  const { i18n } = useTranslation();\n  const hasSideBar = useAppSelector((state) => state.common.fullScreen);\n  const session = useAppSelector((state) => state.session);\n\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\n    isAuthenticated: session.isLoggedIn, // TODO: improve this later\n    authenticationPath: \"/login\",\n  };\n\n  const showSideBar = session.isLoggedIn && !hasSideBar;\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (session.isLoggedIn) {\n      setLoading(true);\n      fetchContacts();\n      setLoading(false);\n    }\n  }, [session.isLoggedIn, fetchContacts]);\n\n  useEffect(() => {\n    i18n.changeLanguage(session.language);\n  }, [session.language, i18n]);\n\n  return (\n    <ConnectedRouter history={history}>\n      <Modals />\n      <Layout style={{ minHeight: \"100vh\" }}>\n        {showSideBar && <Sidebar user={session.user} navigate={push} />}\n        {loading || session.status === \"loading\" ? (\n          <Loader fullPage />\n        ) : (\n          <Layout>\n            <Switch>\n              <Route exact path=\"/login\" component={LoginPage}></Route>\n              {ROUTES.map((route) => (\n                <ProtectedRoute\n                  exact\n                  {...defaultProtectedRouteProps}\n                  path={route.path}\n                  component={route.component}\n                  key={route.label}\n                ></ProtectedRoute>\n              ))}\n              <Redirect to=\"/login\" />\n            </Switch>\n          </Layout>\n        )}\n      </Layout>\n    </ConnectedRouter>\n  );\n}\n\nexport default connector(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { history, Store } from \"./redux\";\nimport \"./styles/tailwind.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App history={history} />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}