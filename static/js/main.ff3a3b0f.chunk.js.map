{"version":3,"sources":["components/hocs/ProtectedRoute.tsx","redux/modules/call.ts","redux/modules/connection.ts","redux/selectors.ts","utils/utils.ts","pages/Dashboard/index.tsx","pages/Call/RoomClient.js","pages/Call/index.tsx","pages/Call/useUserMedia.ts","utils/constants.ts","redux/modules/session.ts","redux/index.ts","api/Common.ts","api/User.ts","pages/Login/index.tsx","components/menu/Sidebar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProtectedRoute","props","redirectPath","isAuthenticated","authenticationPath","component","to","pathname","render","undefined","fetchCalls","createAsyncThunk","a","fetchAuthenticated","body","status","calls","data","map","call","camelcaseKeys","callAdapter","createEntityAdapter","callSlice","createSlice","name","initialState","getInitialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","setAll","payload","actions","fetchConnections","connections","inmate","connectionAdapter","connectionSlice","getSelectors","selectAllCalls","selectAll","selectCallById","selectById","selectAllConnections","Sider","Layout","Header","Footer","Content","mapDispatchToProps","Card","Meta","push","connector","connect","firstName","session","user","items","useState","appointments","setAppointments","QUOTES","Math","floor","random","length","dailyQuote","Date","currTime","setCurrTime","useEffect","interval","setInterval","clearInterval","upcoming","filter","end","connection","find","id","lastName","profileImgPath","getStatusType","style","minHeight","title","direction","size","WRAPPER_PADDING","span","align","backgroundImage","background","width","className","Title","level","format","quote","Text","author","backgroundColor","appointment","tMinus","differenceInMinutes","start","src","type","abs","onClick","EllipsisOutlined","gutter","VideoCameraFilled","UserAddOutlined","theme","entity","avatar","description","MEDIA_TYPE","window","rc","consumers","producers","config","video","min","ideal","height","encodings","rid","maxBitrate","scalabilityMode","codecOptions","videoGoogleStartBitrate","RoomClient","mediasoupClient","socket","callId","this","producerTransport","consumerTransport","device","handlers","consume","Promise","resolve","reject","emit","response","error","transport","on","callback","errback","dtlsParameters","request","transportId","producerTransportInfo","consumerTransportInfo","routerRtpCapabilities","loadDevice","createSendTransport","handleTransportConnect","createRecvTransport","rtpCapabilities","kind","rtpParameters","producerId","info","consumer","stream","consumerId","forEach","f","deviceId","audio","mediaConstraints","getMediaConstraints","navigator","mediaDevices","getUserMedia","track","getAudioTracks","getVideoTracks","params","produce","producer","Device","load","MediaStream","addTrack","event","fn","goBack","ownProps","match","authInfo","Loader","message","tip","CAPTURE_OPTIONS","MessageDisplay","from","strong","getDisplayName","timestamp","content","React","memo","isAuthed","setIsAuthed","setRc","setSocket","showOverlay","setShowOverlay","participantHasJoined","setParticipantHasJoined","chatCollapsed","setChatCollapsed","mediaStream","requestedMedia","setMediaStream","console","log","getTracks","stop","enableStream","useUserMedia","draftMessage","setDraftMessage","messages","setMessages","meRef","useRef","current","srcObject","s","io","process","transports","close","joinRoom","useCallback","init","connected","Debug","token","enumerateDevices","devices","videoInput","Array","audioInput","contents","meta","toLocaleDateString","measuredRef","node","document","createElement","autoplay","appendChild","HEARTBEAT_INTERVAL","timeout","onSendMessage","participants","recipients","ref","onMouseMove","clearTimeout","setTimeout","autoPlay","shape","icon","AudioOutlined","PoweroffOutlined","VideoCameraOutlined","maxHeight","collapsible","collapsed","onCollapse","overflowY","TextArea","value","rows","onChange","e","target","onPressEnter","_e","onSubmit","placeholder","autoFocus","bordered","UNAUTHENTICATED_USER_ID","ROUTES","path","CallPage","label","DashboardPage","TOKEN_KEY","padding","paddingTop","SET_SESSION","LOGOUT","setSession","userState","email","isLoggedIn","sessionReducer","history","createBrowserHistory","rootReducer","combineReducers","reducer","router","connectRouter","Store","configureStore","middleware","getDefaultMiddleware","concat","routerMiddleware","API_URL","fetchTimeout","fetchUrl","options","race","fetch","mode","_","Error","getState","requestOptions","headers","Accept","Authorization","url","json","initializeSession","dispatch","localStorage","setItem","loginWithCredentials","cred","method","JSON","stringify","node_id","inmate_number","inmateNumber","pin","setError","onFinish","values","onFinishFailed","errorInfo","Item","rules","required","prefix","UserOutlined","Password","LockOutlined","htmlType","block","Sidebar","navigate","isVisible","setCollapsed","indexOf","defaultSelectedKeys","HomeOutlined","location","defaultProtectedRouteProps","exact","LoginPage","route","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.ff3a3b0f.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router\";\n\nexport interface ProtectedRouteProps extends RouteProps {\n  isAuthenticated: boolean;\n  authenticationPath: string;\n}\n\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = (props) => {\n  let redirectPath = \"\";\n  if (!props.isAuthenticated) {\n    redirectPath = props.authenticationPath;\n  }\n\n  if (redirectPath) {\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />;\n    return <Route {...props} component={renderComponent} render={undefined} />;\n  } else {\n    return <Route {...props} />;\n  }\n};\n\nexport default ProtectedRoute;\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { Call } from \"src/types/Call\";\n\nexport const fetchCalls = createAsyncThunk(\"calls/fetchAll\", async () => {\n  const body = await fetchAuthenticated(`/calls`);\n  if (body.status !== 200) {\n    throw body;\n  }\n\n  const calls = ((body.data as Record<string, unknown>)\n    .calls as Call[]).map((call) => camelcaseKeys(call));\n\n  return calls;\n});\n\nexport const callAdapter = createEntityAdapter<Call>();\n\nexport const callSlice = createSlice({\n  name: \"calls\",\n  initialState: callAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchCalls.fulfilled, (state, action) =>\n      callAdapter.setAll(state, action.payload)\n    );\n  },\n});\n\nexport const callActions = callSlice.actions;\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { Connection } from \"src/types/Connection\";\nimport { Inmate } from \"src/types/User\";\nimport { fetchAuthenticated } from \"src/api/Common\";\n\nexport const fetchConnections = createAsyncThunk(\n  \"connections/fetchAll\",\n  async () => {\n    const body = await fetchAuthenticated(`/connections`);\n    if (body.status !== 200) {\n      throw body;\n    }\n\n    const connections = ((body.data as Record<string, unknown>)\n      .connections as Connection[]).map((inmate) => camelcaseKeys(inmate));\n\n    return connections;\n  }\n);\n\nexport const connectionAdapter = createEntityAdapter<Connection>();\n\nexport const connectionSlice = createSlice({\n  name: \"connection\",\n  initialState: connectionAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchConnections.fulfilled, (state, action) => {\n      connectionAdapter.setAll(state, action.payload);\n    });\n  },\n});\n\nexport const connectionActions = connectionSlice.actions;\n","import { RootState } from \".\";\nimport { callAdapter } from \"./modules/call\";\nimport { connectionAdapter } from \"./modules/connection\";\n\n// get selectors from entity adapter\nexport const {\n  selectAll: selectAllCalls,\n  selectById: selectCallById,\n} = callAdapter.getSelectors<RootState>((state) => state.calls);\n\nexport const {\n  selectAll: selectAllConnections,\n  selectById: selectConnectionById,\n} = connectionAdapter.getSelectors<RootState>((state) => state.connections);\n","import { BasePersona } from \"src/types/User\";\n\nexport function getRandomItem(items: Object[]) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n\nexport const genFullName = (entity: BasePersona): string =>\n  entity ? `${entity.firstName} ${entity.lastName}` : \"\";\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { fetchCalls } from \"src/redux/modules/call\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  Col,\n  Layout,\n  Menu,\n  PageHeader,\n  Row,\n  Space,\n  Typography,\n} from \"antd\";\nimport { selectAllCalls, selectAllConnections } from \"src/redux/selectors\";\nimport { push } from \"connected-react-router\";\nimport { differenceInMinutes, format } from \"date-fns\";\nimport { QUOTES, WRAPPER_PADDING } from \"src/utils/constants\";\nimport { Call } from \"src/types/Call\";\nimport { genFullName, getRandomItem } from \"src/utils/utils\";\nimport { Quote } from \"src/types/Common\";\nimport \"./index.css\";\nimport { Connection } from \"src/types/Connection\";\nimport {\n  EllipsisOutlined,\n  UserAddOutlined,\n  VideoCameraFilled,\n  VideoCameraOutlined,\n} from \"@ant-design/icons\";\n\nconst { Header, Footer, Sider, Content } = Layout;\nconst { Meta } = Card;\n\nconst mapStateToProps = (state: RootState) => ({\n  calls: selectAllCalls(state),\n  connections: selectAllConnections(state),\n  firstName: state.session.user.firstName,\n});\n\nconst mapDispatchToProps = { fetchCalls, push };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction DashboardPage({\n  calls,\n  connections,\n  fetchCalls,\n  push,\n  firstName,\n}: PropsFromRedux): ReactElement {\n  const [appointments, setAppointments] = useState<\n    { call: Call; connection: Connection }[]\n  >([]);\n  const [dailyQuote, setDailyQuote] = useState(getRandomItem(QUOTES) as Quote);\n\n  const [currTime, setCurrTime] = useState(new Date());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  });\n  useEffect(() => {\n    (async () => await fetchCalls())();\n  }, [fetchCalls]);\n\n  useEffect(() => {\n    // TODO sort\n    const upcoming = calls\n      .filter(\n        (call) =>\n          (call.status === \"scheduled\" || call.status === \"live\") &&\n          new Date(call.end) > new Date()\n      )\n      .map((call) => ({\n        call,\n        connection:\n          connections.find((connection) => connection.id === call.id) ||\n          ({\n            user: { firstName: \"\", lastName: \"\", profileImgPath: \"\" },\n          } as Connection),\n      }));\n\n    setAppointments(upcoming);\n  }, [calls, connections]);\n\n  const getStatusType = (\n    connection: Connection\n  ): \"success\" | \"warning\" | \"danger\" | \"secondary\" => {\n    switch (connection.status) {\n      case \"approved\":\n        return \"success\";\n      case \"pending\":\n        return \"warning\";\n      case \"rejected\":\n        return \"danger\";\n      default:\n        return \"secondary\";\n    }\n  };\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Content>\n        <PageHeader title={`Hi ${firstName}!`}></PageHeader>\n        <Space direction=\"vertical\" size=\"large\" style={WRAPPER_PADDING}>\n          <Row>\n            <Col span={24}>\n              <div>\n                <Space\n                  direction=\"vertical\"\n                  align=\"center\"\n                  style={{\n                    backgroundImage: `url(${dailyQuote.background})`,\n                    width: \"100%\",\n                  }}\n                  className=\"dashboard-header-container\"\n                >\n                  <Typography.Title\n                    level={3}\n                    className=\"dashboard-header-content\"\n                  >\n                    {format(currTime, \"HH:mm\")}\n                  </Typography.Title>\n                  <Typography.Title\n                    level={5}\n                    className=\"dashboard-header-content\"\n                  >\n                    {dailyQuote.quote}\n                  </Typography.Title>\n                  <Typography.Text className=\"dashboard-header-content\">\n                    {dailyQuote.author}\n                  </Typography.Text>\n                </Space>\n                <div style={{ width: \"100%\", backgroundColor: \"white\" }}>\n                  {!appointments.length && (\n                    <Card>\n                      <span>No upcoming calls today</span>\n                    </Card>\n                  )}\n                  {appointments.map((appointment) => {\n                    const tMinus = differenceInMinutes(\n                      new Date(appointment.call.start),\n                      new Date()\n                    );\n\n                    return (\n                      <Card key={appointment.call.id}>\n                        <Space size=\"large\">\n                          <Avatar\n                            src={appointment.connection.user.profileImgPath}\n                          />\n                          <div>\n                            <Typography.Title level={3}>\n                              Call with {appointment.connection.user.firstName}\n                            </Typography.Title>\n                            <Typography.Text>\n                              {format(\n                                new Date(appointment.call.start),\n                                \"HH:mm\"\n                              )}{\" \"}\n                              -{\" \"}\n                              {format(new Date(appointment.call.end), \"HH:mm\")}{\" \"}\n                              | {tMinus > 0 ? \"starts in \" : \"started \"}\n                              <Typography.Text\n                                type={tMinus >= 0 ? \"warning\" : \"danger\"}\n                              >\n                                {Math.abs(tMinus)} minutes{\" \"}\n                                {tMinus < 0 && \" ago\"}\n                              </Typography.Text>\n                            </Typography.Text>\n                          </div>\n                          <Space>\n                            <Button\n                              onClick={() =>\n                                push(`call/${appointment.call.id}`)\n                              }\n                            >\n                              <EllipsisOutlined />\n                            </Button>\n                            <Button\n                              type=\"primary\"\n                              onClick={() =>\n                                push(`call/${appointment.call.id}`)\n                              }\n                            >\n                              Join\n                            </Button>\n                          </Space>\n                        </Space>\n                      </Card>\n                    );\n                  })}\n                </div>\n              </div>\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Card>\n                <VideoCameraFilled />\n                <Typography.Title level={4}>Schedule Call</Typography.Title>\n              </Card>\n            </Col>\n            <Col span={12}>\n              <Card>\n                <UserAddOutlined />\n                <Typography.Title level={4}>Add Contact</Typography.Title>\n              </Card>\n            </Col>\n          </Row>\n        </Space>\n      </Content>\n      <Sider theme=\"light\" width={400}>\n        <PageHeader title={\"Your Loved Ones\"} />\n        {connections.map((connection) => (\n          <Card key={connection.id}>\n            <Card.Meta\n              title={genFullName(connection.user)}\n              avatar={<Avatar src={connection.user.profileImgPath} />}\n              description={\n                <Typography.Text type=\"secondary\">\n                  Status:{\" \"}\n                  <Typography.Text type={getStatusType(connection)}>\n                    {connection.status}\n                  </Typography.Text>\n                </Typography.Text>\n              }\n            ></Card.Meta>\n          </Card>\n        ))}\n      </Sider>\n    </Layout>\n  );\n}\n\nexport default connector(DashboardPage);\n","/*\n  Copyright 2020 Ameelio.org.\n  Published under the GPL v3.\n\n  You can obtain a copy of the GPL v3 at:\n  https://www.gnu.org/licenses/gpl-3.0.en.html\n\n  This file was inspired by code from https://github.com/Dirvann/mediasoup-sfu-webrtc-video-rooms,\n  which was published under the Apache License.\n  Copyright 2020 github.com/Dirvann.\n\n  You can obtain a copy of the Apache License at:\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  This file was substantially modified by Ameelio to streamline\n  the signalling protocol and change the structure of how a RoomClient\n  is initialized and what events it exposes for easier use by\n  Ameelio's client-side code, and to refactor and restructure the code\n  for easier maintainenance, among other changes.\n*/\nconst MEDIA_TYPE = {\n  audio: \"audioType\",\n  video: \"videoType\",\n  screen: \"screenType\",\n};\n\nwindow.rc = null;\nwindow.consumers = [];\nwindow.producers = [];\n\nconst config = {\n  video: {\n    width: { min: 640, ideal: 1920 },\n    height: { min: 400, ideal: 1080 },\n    encodings: [\n      {\n        rid: \"r0\",\n        maxBitrate: 100000,\n        scalabilityMode: \"S1T3\",\n      },\n      {\n        rid: \"r1\",\n        maxBitrate: 300000,\n        scalabilityMode: \"S1T3\",\n      },\n      {\n        rid: \"r2\",\n        maxBitrate: 900000,\n        scalabilityMode: \"S1T3\",\n      },\n    ],\n    codecOptions: {\n      videoGoogleStartBitrate: 1000,\n    },\n  },\n};\n\nclass RoomClient {\n  constructor(mediasoupClient, socket, callId) {\n    window.rc = this;\n    this.mediasoupClient = mediasoupClient;\n    this.socket = socket;\n    this.callId = callId;\n\n    // We will eventually have...\n    // Two transports (or one, if we are a monitor)\n    this.producerTransport = null;\n    this.consumerTransport = null;\n\n    // A device\n    this.device = null;\n\n    // Consumers and producers\n    this.consumers = {};\n    this.producers = {};\n\n    // Event handlers\n    this.handlers = { consume: [] };\n  }\n\n  async request(name, data) {\n    return new Promise((resolve, reject) => {\n      this.socket.emit(name, data, (response) => {\n        if (response.error) reject(response.error);\n        else resolve(response);\n      });\n    });\n  }\n\n  async handleTransportConnect(transport) {\n    return new Promise((resolve, reject) => {\n      // Wait for the producer transport to connect...\n      transport.on(\"connect\", async ({ dtlsParameters }, callback, errback) => {\n        await this.request(\"establishDtls\", {\n          dtlsParameters,\n          callId: this.callId,\n          transportId: transport.id,\n        });\n\n        callback();\n        resolve();\n      });\n    });\n  }\n\n  async init() {\n    // Request to join the room.\n    // We will recieve two transports and\n    // and rtpCapabilities object, if we are allowed in.\n    const {\n      producerTransportInfo,\n      consumerTransportInfo,\n      routerRtpCapabilities,\n    } = await this.request(\"join\", { callId: this.callId });\n\n    // Load up a local media device consistent\n    // with the server's RTP capabilities.\n    this.device = await this.loadDevice(routerRtpCapabilities);\n\n    // Set up both transports and promise to send\n    // dtls info when they connect (this won't occur until\n    // someone actually produces).\n    if (producerTransportInfo) {\n      this.producerTransport = this.device.createSendTransport(\n        producerTransportInfo\n      );\n      this.handleTransportConnect(this.producerTransport);\n    }\n\n    this.consumerTransport = this.device.createRecvTransport(\n      consumerTransportInfo\n    );\n    this.handleTransportConnect(this.consumerTransport);\n\n    // Declare what our device is capable of.\n    await this.request(\"declareRtpCapabilities\", {\n      rtpCapabilities: this.device.rtpCapabilities,\n    });\n\n    // We don't actually need to wait for this request to come back.\n    this.request(\"finishConnecting\", { callId: this.callId });\n\n    // When our producer transport is producing a new stream,\n    // inform the server.\n\n    if (this.producerTransport) {\n      this.producerTransport.on(\n        \"produce\",\n        async ({ kind, rtpParameters }, callback, errback) => {\n          const { producerId } = await this.request(\"produce\", {\n            callId: this.callId,\n            kind,\n            rtpParameters,\n          });\n\n          callback({ id: producerId });\n        }\n      );\n    }\n\n    // When we get a consumer, fire an event.\n    this.socket.on(\"consume\", async (info) => {\n      const { consumer, stream } = await this.consume(info);\n\n      this.socket.emit(\"resumeConsumer\", {\n        callId: this.callId,\n        consumerId: consumer.id,\n      });\n\n      this.handlers.consume.forEach((f) => f(info.kind, stream, info.user));\n    });\n  }\n\n  getMediaConstraints(type, deviceId) {\n    if (type === MEDIA_TYPE.audio) {\n      return { audio: { deviceId } };\n    } else if (type === MEDIA_TYPE.video) {\n      return {\n        video: {\n          width: config.video.width,\n          height: config.video.height,\n          deviceId,\n        },\n      };\n    }\n  }\n\n  async produce(type, deviceId = null) {\n    const mediaConstraints = this.getMediaConstraints(type, deviceId);\n    const stream = await navigator.mediaDevices.getUserMedia(mediaConstraints);\n\n    const track = (type === MEDIA_TYPE.audio\n      ? stream.getAudioTracks()\n      : stream.getVideoTracks())[0];\n\n    const params = { track };\n\n    if (type === MEDIA_TYPE.video) {\n      params.encodings = config.video.encodings;\n      params.codecOptions = config.video.codecOptions;\n    }\n\n    const producer = await this.producerTransport.produce(params);\n    window.producers.push(producer);\n    this.producers[producer.id] = producer;\n  }\n\n  async loadDevice(routerRtpCapabilities) {\n    const device = new this.mediasoupClient.Device();\n\n    await device.load({ routerRtpCapabilities });\n\n    return device;\n  }\n\n  async consume(info) {\n    const consumer = await this.consumerTransport.consume(info);\n    const stream = new MediaStream();\n\n    this.consumers[consumer.id] = consumer;\n\n    stream.addTrack(consumer.track);\n    return { consumer, stream };\n  }\n\n  async on(event, fn) {\n    if (!(event in this.handlers)) {\n      this.handlers[event] = [];\n    }\n    this.handlers[event].push(fn);\n  }\n\n  async terminate() {\n    await this.request(\"terminate\", { callId: this.callId });\n  }\n}\n\nexport default RoomClient;\n","import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport RoomClient from \"src/pages/Call/RoomClient\";\nimport * as mediasoupClient from \"mediasoup-client\";\nimport io from \"socket.io-client\";\nimport {\n  Button,\n  Space,\n  Spin,\n  Typography,\n  Layout,\n  PageHeader,\n  Input,\n  Divider,\n} from \"antd\";\nimport { Call, CallMessage, CallParticipant } from \"src/types/Call\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { selectCallById } from \"src/redux/selectors\";\nimport \"./index.css\";\nimport {\n  AudioMutedOutlined,\n  AudioOutlined,\n  MessageOutlined,\n  PoweroffOutlined,\n  ShopTwoTone,\n  VideoCameraOutlined,\n} from \"@ant-design/icons\";\nimport { format } from \"date-fns\";\nimport { useUserMedia } from \"./useUserMedia\";\nimport { goBack } from \"connected-react-router\";\nimport { HEARTBEAT_INTERVAL, WRAPPER_PADDING } from \"src/utils/constants\";\n\nconst { Sider } = Layout;\ndeclare global {\n  interface Window {\n    Debug: any;\n  }\n}\n\ntype TParams = { id: string };\n\nconst mapStateToProps = (\n  state: RootState,\n  ownProps: RouteComponentProps<TParams>\n) => ({\n  call: selectCallById(state, ownProps.match.params.id),\n  authInfo: state.session.authInfo,\n});\n\nconst mapDispatchToProps = { goBack };\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction Loader({ message }: { message: string }): ReactElement {\n  return (\n    <div className=\"video-loading-spinner\">\n      <Spin tip={message} />\n    </div>\n  );\n}\n\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: {\n    width: { min: 640, ideal: 1920 },\n    height: { min: 400, ideal: 1080 },\n  },\n};\n\nfunction MessageDisplay({ message }: { message: CallMessage }): ReactElement {\n  const { type } = message.from;\n  const getDisplayName = () => {\n    switch (type) {\n      case \"inmate\":\n        return \"You\";\n      case \"monitor\":\n        return \"DOC\";\n      case \"user\":\n        return \"Loved One\";\n    }\n  };\n  return (\n    <Space\n      direction=\"vertical\"\n      align={type === \"inmate\" ? \"end\" : \"start\"}\n      style={{ width: \"100%\" }}\n    >\n      <Space>\n        <Typography.Text strong>{getDisplayName()}</Typography.Text>\n        <Typography.Text type=\"secondary\">\n          {format(new Date(message.timestamp), \"HH:mm\")}\n        </Typography.Text>\n      </Space>\n      <Typography.Text>{message.content}</Typography.Text>\n    </Space>\n  );\n}\n\nconst CallBase: React.FC<PropsFromRedux> = React.memo(\n  ({ call, authInfo, goBack }) => {\n    const [isAuthed, setIsAuthed] = useState(false);\n    const [rc, setRc] = useState<RoomClient>();\n    const [socket, setSocket] = useState<SocketIOClient.Socket>();\n    const [showOverlay, setShowOverlay] = useState(true);\n    const [participantHasJoined, setParticipantHasJoined] = useState(false);\n    const [chatCollapsed, setChatCollapsed] = useState(false);\n    const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n    const [draftMessage, setDraftMessage] = useState(\"\");\n    const [messages, setMessages] = useState<CallMessage[]>([]);\n\n    const meRef = useRef<HTMLVideoElement>(null);\n    if (meRef.current && !meRef.current.srcObject && mediaStream) {\n      meRef.current.srcObject = mediaStream;\n    }\n\n    useEffect(() => {\n      if (!socket) {\n        const s = io.connect(\n          `${process.env.REACT_APP_MEDIASOUP_HOSTNAME}` || \"localhost:8000\",\n          {\n            transports: [\"websocket\"],\n          }\n        );\n        setSocket(s);\n      }\n      return () => {\n        socket?.close();\n      };\n    }, [setSocket, socket]);\n\n    const joinRoom = useCallback(async () => {\n      if (!call) return;\n      const rc = new RoomClient(mediasoupClient, socket, call.id);\n      await rc.init();\n\n      setRc(rc);\n    }, [call, socket]);\n\n    // Asynchronously load the room\n    useEffect(() => {\n      if (!isAuthed && socket && call) {\n        (async () => {\n          console.log(socket);\n          if (!socket.connected) {\n            console.log(\"Not connected, so waiting until connected.\");\n            window.Debug = socket;\n            await new Promise((resolve) => socket.on(\"connect\", resolve));\n            console.log(\"OK\");\n          }\n\n          await new Promise((resolve) => {\n            // TODO fetch actual credentials from redux\n            socket.emit(\n              \"authenticate\",\n              {\n                type: authInfo.type,\n                id: authInfo.id,\n                token: authInfo.token,\n              },\n              resolve\n            );\n          });\n          await joinRoom();\n          setIsAuthed(true);\n        })();\n      }\n    }, [call, authInfo, socket, joinRoom, isAuthed]);\n\n    useEffect(() => {\n      if (rc && isAuthed) {\n        (async () => {\n          // Enumerate media devices\n          const devices = await navigator.mediaDevices.enumerateDevices();\n\n          console.log(devices);\n\n          // Get a video input (should be the only one) to send\n          const videoInput = Array.from(devices).filter(\n            (device) => device.kind === \"videoinput\"\n          )[0];\n\n          console.log(\"producing video\");\n\n          // Produce video with it\n          await rc.produce(\"videoType\", videoInput);\n\n          // Get a audio input (should be the only one) to send\n\n          // Don't produce audio for now\n          const audioInput = Array.from(devices).filter(\n            (device) => device.kind === \"audioinput\"\n          )[0];\n\n          console.log(\"producing audio\");\n\n          // Produce video with it\n          await rc.produce(\"audioType\", audioInput);\n        })();\n      }\n    }, [isAuthed, rc]);\n\n    useEffect(() => {\n      if (rc && isAuthed) {\n        rc.on(\n          \"textMessage\",\n          async (from: CallParticipant, contents: string, meta: string) => {\n            console.log(\"receiving message\");\n            setMessages([\n              ...messages,\n              {\n                content: contents,\n                from,\n                timestamp: new Date().toLocaleDateString(),\n              },\n            ]);\n          }\n        );\n      }\n    }, [isAuthed, rc]);\n\n    const measuredRef = useCallback(\n      (node) => {\n        if (node !== null && rc && isAuthed) {\n          (async () => {\n            rc.on(\n              \"consume\",\n              async (\n                kind: string,\n                stream: MediaStream,\n                user: CallParticipant\n              ) => {\n                console.log(`CONSUME RECEIVED: ${user.type} ${kind}`);\n                if (node && user.type === \"user\") {\n                  console.log(\"CONSUME: user stream\");\n                  if (kind === \"video\") {\n                    const video = document.createElement(\"video\");\n                    video.style.width = \"100%\";\n                    video.style.height = \"100%\";\n                    video.srcObject = stream;\n                    video.autoplay = true;\n                    node.appendChild(video);\n                  } else if (kind === \"audio\") {\n                    const audio = document.createElement(\"audio\");\n                    audio.srcObject = stream;\n                    audio.autoplay = true;\n                    node.appendChild(audio);\n                  }\n\n                  setParticipantHasJoined(true);\n                } else if (node && user.type === \"inmate\") {\n                }\n              }\n            );\n          })();\n        }\n      },\n      [rc, isAuthed]\n    );\n\n    useEffect(() => {\n      if (rc && call) {\n        const interval = setInterval(() => {\n          rc.socket.emit(\"heartbeat\", { callId: call.id });\n        }, HEARTBEAT_INTERVAL);\n        return () => clearInterval(interval);\n      }\n    }, [rc, call]);\n\n    const getMessage = (): string => {\n      if (!isAuthed) {\n        return \"Initializing video call...\";\n      } else if (!participantHasJoined) {\n        return `Waiting for ${\"Gabe\"} to join the call...`;\n      }\n      return \"Loading...\";\n    };\n\n    let timeout: any;\n    const onMouseMove = () => {\n      setShowOverlay(true);\n      (() => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => setShowOverlay(false), 5000);\n      })();\n    };\n\n    const onSendMessage = async () => {\n      console.log(\"sending message\");\n      if (!socket || !call) return;\n      setDraftMessage(\"\");\n      //TODO add property sent and change image visibility depending on whether it actually went through\n      setMessages([\n        ...messages,\n        {\n          content: draftMessage,\n          from: {\n            type: \"inmate\",\n            id: authInfo.id,\n          },\n          timestamp: new Date().toLocaleDateString(),\n        },\n      ]);\n      const { participants } = await new Promise((resolve, reject) => {\n        socket.emit(\"info\", { callId: call.id }, resolve);\n      });\n      await new Promise((resolve) => {\n        // TODO fetch actual credentials from redux\n        socket.emit(\n          \"textMessage\",\n          {\n            callId: call.id,\n            contents: draftMessage,\n            recipients: participants,\n          },\n          resolve\n        );\n      });\n    };\n\n    return (\n      <Layout>\n        <div\n          className=\"video-wrapper ant-layout-content\"\n          ref={measuredRef}\n          onMouseMove={() => onMouseMove()}\n        >\n          <video className=\"video-me\" autoPlay={true} ref={meRef} />\n          {!participantHasJoined && <Loader message={getMessage()} />}\n          {showOverlay && (\n            <Space className=\"video-overlay-actions\" align=\"center\">\n              <Button\n                shape=\"round\"\n                icon={true ? <AudioOutlined /> : <AudioMutedOutlined />}\n                size=\"large\"\n              />\n              <Button\n                shape=\"round\"\n                icon={<PoweroffOutlined />}\n                size=\"large\"\n                onClick={() => goBack()}\n              />\n              <Button\n                shape=\"round\"\n                icon={true ? <VideoCameraOutlined /> : <AudioMutedOutlined />}\n                size=\"large\"\n              />\n            </Space>\n          )}\n        </div>\n        {(!chatCollapsed || showOverlay) && (\n          <Sider\n            theme=\"light\"\n            style={{ height: \"100vh\", maxHeight: \"100vh\" }}\n            width={300}\n            collapsible\n            collapsed={chatCollapsed}\n            onCollapse={(collapsed) => setChatCollapsed(collapsed)}\n          >\n            {!chatCollapsed && <PageHeader title=\"Chat\" />}\n\n            {!chatCollapsed && (\n              <div className=\"chat-container\" style={WRAPPER_PADDING}>\n                <Space direction=\"vertical\" style={{ overflowY: \"scroll\" }}>\n                  {messages.map((message) => (\n                    <MessageDisplay message={message} />\n                  ))}\n                </Space>\n                <div className=\"chat-input\">\n                  <Divider />\n                  <Input.TextArea\n                    value={draftMessage}\n                    rows={2}\n                    onChange={(e) => setDraftMessage(e.target.value)}\n                    onPressEnter={(_e) => onSendMessage()}\n                    onSubmit={(_e) => onSendMessage()}\n                    placeholder=\"Type here...\"\n                    autoFocus\n                    bordered={false}\n                  />\n                </div>\n              </div>\n            )}\n          </Sider>\n        )}\n      </Layout>\n    );\n  }\n);\n\nexport default connector(CallBase);\n","import { useState, useEffect } from \"react\";\n\nexport function useUserMedia(requestedMedia: MediaStreamConstraints) {\n  const [mediaStream, setMediaStream] = useState<MediaStream>();\n\n  useEffect(() => {\n    async function enableStream() {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(\n          requestedMedia\n        );\n        setMediaStream(stream);\n      } catch (err) {\n        // Removed for brevity\n        console.log(err);\n      }\n    }\n\n    if (!mediaStream) {\n      enableStream();\n    } else {\n      return function cleanup() {\n        mediaStream.getTracks().forEach((track) => {\n          track.stop();\n        });\n      };\n    }\n  }, [mediaStream, requestedMedia]);\n\n  return mediaStream;\n}\n","import { Quote, Route } from \"src/types/Common\";\nimport DashboardPage from \"src/pages/Dashboard\";\nimport CallPage from \"src/pages/Call\";\n\nexport const UNAUTHENTICATED_USER_ID = -1;\n\nexport const ROUTES: Route[] = [\n  { path: \"/call/:id\", component: CallPage, label: \"Call\" },\n  { path: \"/\", component: DashboardPage, label: \"Dash\" },\n];\n\nexport const TOKEN_KEY = \"apiToken\";\nexport const REMEMBER_TOKEN_KEY = \"rememberToken\";\n\nexport const WRAPPER_PADDING = { padding: 24, paddingTop: 0 };\n\nexport const QUOTES: Quote[] = [\n  {\n    author: \"Mary Ann Evans\",\n    quote: \"It is never too late to be what you might have been.\",\n    description: \"\",\n    background:\n      \"https://images.unsplash.com/photo-1536257104079-aa99c6460a5a?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\",\n  },\n  {\n    author: \"Walt Disney\",\n    quote:\n      \"All our dreams can come true, if we have the courage to pursue them.\",\n    description: \"\",\n    background:\n      \"https://images.unsplash.com/photo-1508556497405-ed7dcd94acfc?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\",\n  },\n  {\n    author: \"Mark Twain\",\n    quote: \"The secret of getting ahead is getting started\",\n    description: \"\",\n    background:\n      \"https://images.unsplash.com/photo-1532971077387-7c6568101df5?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\",\n  },\n  {\n    author: \"Babe Ruth\",\n    quote: \"It’s hard to beat a person who never gives up.\",\n    description: \"\",\n    background:\n      \"https://images.unsplash.com/photo-1564521456797-9f176245daa9?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1951&q=80\",\n  },\n];\n\nexport const HEARTBEAT_INTERVAL = 200;\n","import { UNAUTHENTICATED_USER_ID } from \"src/utils/constants\";\nimport { User } from \"src/types/User\";\n\ninterface AuthInfo {\n  token: string;\n  id: number;\n  type: \"inmate\";\n}\n\ninterface SessionState {\n  isLoggedIn: boolean;\n  authInfo: AuthInfo;\n  user: User;\n}\n\n// Constants & Shapes\nconst SET_SESSION = \"user/SET_SESSION\";\nconst LOGOUT = \"user/LOGOUT\";\n\ninterface SetSessionAction {\n  type: typeof SET_SESSION;\n  payload: SessionState;\n}\ninterface LogoutAction {\n  type: typeof LOGOUT;\n}\n\ntype UserActionTypes = LogoutAction | SetSessionAction;\n\nexport const logout = (): UserActionTypes => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const setSession = (userState: SessionState): UserActionTypes => {\n  return {\n    type: SET_SESSION,\n    payload: userState,\n  };\n};\n\n// Reducer\nconst initialState: SessionState = {\n  authInfo: { token: \"\", id: UNAUTHENTICATED_USER_ID, type: \"inmate\" },\n  user: {\n    id: UNAUTHENTICATED_USER_ID,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  },\n  isLoggedIn: false,\n};\n\nexport function sessionReducer(\n  state = initialState,\n  action: UserActionTypes\n): SessionState {\n  switch (action.type) {\n    case SET_SESSION:\n      return action.payload;\n    case LOGOUT:\n      //   sessionStorage.clear();\n      return {\n        ...state,\n        authInfo: { token: \"\", id: UNAUTHENTICATED_USER_ID, type: \"inmate\" },\n        user: {\n          id: UNAUTHENTICATED_USER_ID,\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n        },\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport { combineReducers } from \"redux\";\nimport { History, createBrowserHistory } from \"history\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { sessionReducer } from \"./modules/session\";\nimport { callSlice } from \"./modules/call\";\nimport { connectionSlice } from \"./modules/connection\";\n\nexport const history = createBrowserHistory();\n\nexport const createRootReducer = (history: History) =>\n  combineReducers({\n    session: sessionReducer,\n    calls: callSlice.reducer,\n    connections: connectionSlice.reducer,\n    router: connectRouter(history),\n  });\nexport const rootReducer = createRootReducer(history);\n\nexport const Store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(routerMiddleware(history)),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { Store } from \"src/redux\";\nimport url from \"url\";\nimport path from \"path\";\n// import { getApprovedConnections } from \"./Connection\";\n// import { getContacts, getInmates, getStaff } from \"./Persona\";\n\nexport const API_URL = `${process.env.REACT_APP_BASE_URL}api/`;\n\nconsole.log(process.env.REACT_APP_BASE_URL);\nexport interface ApiResponse {\n  date: number;\n  good: boolean;\n  status?: \"OK\" | \"ERROR\" | \"succeeded\" | 200;\n  message?: string;\n  data: Record<string, unknown> | Record<string, unknown>[] | unknown;\n}\n\nexport function fetchTimeout(\n  fetchUrl: string,\n  options: Record<string, unknown>,\n  timeout = 15000\n): Promise<Response> {\n  return Promise.race([\n    fetch(fetchUrl, { ...options, mode: \"cors\" }),\n    new Promise<Response>((_, reject) =>\n      setTimeout(() => reject(new Error(\"timeout\")), timeout)\n    ),\n  ]);\n}\n\nexport function toQueryString(options: string[][]) {\n  return options.map((x) => x[0] + \"=\" + encodeURIComponent(x[1])).join(\"&\");\n}\n\nexport async function fetchAuthenticated(\n  fetchUrl: string,\n  options: Record<string, unknown> = {},\n  timeout = 15000\n): Promise<ApiResponse> {\n  const state = Store.getState();\n\n  const requestOptions = {\n    ...options,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${state.session.authInfo.token}`,\n      \"X-Ameelio-User-Type\": \"inmate\",\n      \"X-Ameelio-Inmate-Id\": `${state.session.authInfo.id}`,\n    },\n  };\n\n  console.log(url.resolve(`${API_URL}/inmate/${state.session.authInfo.id}`, fetchUrl));\n  const response = await fetchTimeout(\n    `${API_URL}/inmate/${state.session.authInfo.id}/${fetchUrl}`,\n    requestOptions,\n    timeout\n  );\n\n  const body = await response.json();\n\n  return body;\n}\n\n// export async function initializeAppData() {\n//   await Promise.allSettled([\n//     getInmates(),\n//     getApprovedConnections(),\n//     getStaff(),\n//     getContacts(),\n//   ]);\n// }\n","import { API_URL, fetchTimeout } from \"./Common\";\nimport url from \"url\";\nimport { setSession } from \"src/redux/modules/session\";\nimport { Store } from \"src/redux\";\nimport { REMEMBER_TOKEN_KEY, TOKEN_KEY } from \"src/utils/constants\";\nimport { User } from \"src/types/User\";\n\nasync function initializeSession(body: any) {\n  const user = body.data.user as User;\n  const { token, id } = body.data.user;\n  Store.dispatch(\n    setSession({\n      user,\n      authInfo: { token, id, type: \"inmate\" },\n      isLoggedIn: true,\n    })\n  );\n\n  // TO\n  localStorage.setItem(TOKEN_KEY, token);\n}\n\nexport async function loginWithCredentials(cred: {\n  inmateNumber: string;\n  pin: string;\n}): Promise<void> {\n  const response = await fetchTimeout(url.resolve(API_URL, \"inmate/auth\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      node_id: 2,\n      inmate_number: cred.inmateNumber,\n      pin: cred.pin,\n    }),\n  });\n  const body = await response.json();\n  if (body.status !== 200) throw body;\n  await initializeSession(body);\n}\n","import React, { useState, ReactElement } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { Input, Layout, Button, Form, Checkbox, Typography, Card } from \"antd\";\n\n// import { ReactComponent as Operator } from \"src/assets/avatars/bald.svg\";\n// import { ReactComponent as Supervisor } from \"src/assets/avatars/woman.svg\";\n// import { ReactComponent as Admin } from \"src/assets/avatars/professor.svg\";\n// import { ReactComponent as Investigator } from \"src/assets/avatars/investigator.svg\";\n// import { OPERATOR, SUPERVISOR, ADMIN, INVESTIGATOR } from \"src/data/sample\";\n\nimport \"./index.css\";\nimport { Redirect } from \"react-router\";\nimport { loginWithCredentials } from \"src/api/User\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\n\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  session: state.session,\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction LoginContainer({ session }: PropsFromRedux): ReactElement {\n  const [error, setError] = useState(\"\");\n\n  if (session.isLoggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const onFinish = async (values: any) => {\n    try {\n      await loginWithCredentials({\n        inmateNumber: values.inmateNumber,\n        pin: values.pin,\n      });\n    } catch (err) {\n      setError(\"Invalid ID or Pin Code\");\n    }\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    setError(\"Invalid ID or Pin Code\");\n  };\n\n  return (\n    <Content>\n      <Card className=\"login-form-container\">\n        <Typography.Title level={3}>Welcome to Pathways!</Typography.Title>\n        <Form\n          name=\"basic\"\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          className=\"login-form\"\n        >\n          <Form.Item\n            name=\"inmateNumber\"\n            rules={[{ required: true, message: \"Inmate ID is required.\" }]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Inmate Number\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"pin\"\n            rules={[{ required: true, message: \"Password is required.\" }]}\n          >\n            <Input.Password\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Pin Code\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" size=\"large\" block>\n              Log In\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    </Content>\n  );\n}\n\nexport default connector(LoginContainer);\n","import React, { ReactElement, useState } from \"react\";\nimport { Menu, Layout } from \"antd\";\nimport { UserOutlined, HomeOutlined } from \"@ant-design/icons\";\n\nconst { Header, Content, Footer, Sider } = Layout;\ninterface Props {\n  navigate: (path: string) => void;\n  isVisible: boolean;\n  pathname: string;\n}\n\nexport default function Sidebar({\n  navigate,\n  isVisible,\n  pathname,\n}: Props): ReactElement {\n  const [collapsed, setCollapsed] = useState(false);\n\n  if (!isVisible || pathname.indexOf(\"call\") !== -1) return <div />;\n  return (\n    <Sider\n      theme=\"light\"\n      collapsible\n      collapsed={collapsed}\n      onCollapse={() => setCollapsed((collapsed) => !collapsed)}\n    >\n      <div className=\"logo\" />\n      <Menu mode=\"inline\" defaultSelectedKeys={[\"home\"]}>\n        <Menu.Item\n          key=\"home\"\n          icon={<HomeOutlined />}\n          onClick={() => navigate(\"home\")}\n        >\n          Home\n        </Menu.Item>\n        {/* <Menu.Item\n          key=\"contacts\"\n          icon={<UserOutlined />}\n          onClick={() => navigate(\"home\")}\n        >\n          Contacts\n        </Menu.Item> */}\n      </Menu>\n    </Sider>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ConnectedRouter, push } from \"connected-react-router\";\nimport { Layout } from \"antd\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { History } from \"history\";\nimport ProtectedRoute, {\n  ProtectedRouteProps,\n} from \"./components/hocs/ProtectedRoute\";\nimport LoginPage from \"src/pages/Login\";\nimport { ROUTES } from \"./utils/constants\";\nimport { useEffect } from \"react\";\nimport { fetchConnections } from \"./redux/modules/connection\";\nimport Sidebar from \"./components/menu/Sidebar\";\n\nconst { Footer, Header } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  session: state.session,\n  pathname: state.router.location.pathname,\n});\nconst mapDispatchToProps = { fetchConnections, push };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction App({\n  session,\n  history,\n  pathname,\n  fetchConnections,\n  push,\n}: PropsFromRedux & { history: History }) {\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\n    isAuthenticated: session.authInfo.token !== \"\", // TODO: improve this later\n    authenticationPath: \"/login\",\n  };\n\n  useEffect(() => {\n    if (session.isLoggedIn) fetchConnections();\n  }, [session.isLoggedIn]);\n\n  return (\n    <ConnectedRouter history={history}>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Sidebar\n          navigate={(path: string) => push(path)}\n          isVisible={session.isLoggedIn}\n          pathname={pathname}\n        />\n        <Layout>\n          <Switch>\n            <Route exact path=\"/login\" component={LoginPage}></Route>\n            {ROUTES.map((route) => (\n              <ProtectedRoute\n                exact\n                {...defaultProtectedRouteProps}\n                path={route.path}\n                component={route.component}\n                key={route.label}\n              ></ProtectedRoute>\n            ))}\n            <Redirect to=\"/login\" />\n          </Switch>\n          {/* <Footer style={{ textAlign: \"center\" }}>\n            Connect ©2021 Created by Ameelio Inc.\n          </Footer> */}\n        </Layout>\n      </Layout>\n    </ConnectedRouter>\n  );\n}\n\nexport default connector(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { history, Store } from \"./redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App history={history} />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}