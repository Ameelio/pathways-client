{"version":3,"sources":["api/Common.ts","utils/utils.ts","utils/Call.ts","pages/Call/RoomClient.ts","redux/modules/call.ts","redux/modules/contactsSlice.ts","redux/selectors.ts","i18n/config.ts","components/Common/PageLayout/index.tsx","components/Common/PageLayout/PageLayout.tsx","components/Common/Buttons/EditButton/index.tsx","components/Common/Buttons/EditButton/EditButton.tsx","components/Profile/ProfileInfo.tsx","components/Profile/index.tsx","components/Profile/Profile.tsx","pages/Profile/index.tsx","redux/modules/modalsSlice.ts","components/Calls/Calls.tsx","components/Calls/index.tsx","hooks/useCalls.ts","pages/Calls/index.tsx","components/Settings/index.tsx","components/Settings/Settings.tsx","pages/Settings/index.tsx","assets/Sounds/EnterCall.wav","components/Dashboard/CallItem.tsx","components/Dashboard/CallsList.tsx","components/Dashboard/ConnectionItem.tsx","components/Dashboard/ConnectionsList.tsx","components/Dashboard/DashboardHeader.tsx","components/Dashboard/CallDetails.tsx","components/Dashboard/index.tsx","components/Dashboard/Dashboard.tsx","pages/Dashboard/index.tsx","components/Common/commonSlice.ts","components/Call/MessageDisplay.tsx","assets/Sounds/MessageReceived.mp3","components/Call/Chat.tsx","components/Common/Buttons/IconButton/index.tsx","components/Common/Buttons/IconButton/IconButton.tsx","components/Call/VideoOverlay.tsx","components/Call/VideoMePlaceholder.tsx","components/Call/WaitingRoomCard.tsx","components/Call/Timer.tsx","components/Call/Video.tsx","components/Call/Audio.tsx","assets/Sounds/LeaveCall.wav","components/Call/index.tsx","components/Call/Call.tsx","pages/Call/index.tsx","pages/CallFeedback/index.tsx","utils/constants.ts","redux/modules/session.ts","redux/modules/connection.ts","redux/index.ts","components/Hocs/ProtectedRoute.tsx","api/User.ts","assets/logo.svg","styles/Layout.ts","pages/Login/index.tsx","components/Menu/Sidebar.tsx","components/Modals/CancelCallModal/index.tsx","components/Modals/CancelCallModal/CancelCallModal.tsx","components/Modals/InformationalModal/index.tsx","components/Modals/InformationalModal/InformationalModal.tsx","components/Modals/TestConnectionModal/index.tsx","components/Modals/TestConnectionModal/TestConnectionModal.tsx","components/Modals/Modals.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_URL","process","fetchTimeout","fetchUrl","options","timeout","Promise","race","fetch","mode","_","reject","setTimeout","Error","fetchAuthenticated","a","state","Store","getState","requestOptions","headers","Accept","credentials","session","authInfo","id","response","status","json","body","fetchFacilities","console","log","getRandomItem","items","Math","floor","random","length","getInitials","str","split","map","substr","join","genFullName","entity","firstName","lastName","openNotificationWithIcon","message","description","type","notification","showToast","key","content","duration","success","error","warning","loading","info","notEmpty","value","undefined","keyMinutes","WHITE_BACKGROUND","loadCallEntities","call","contacts","userParticipants","userIds","filter","getMediaConstraints","deviceId","audio","video","getMedia","mediaConstraints","navigator","mediaDevices","getUserMedia","config","width","min","ideal","height","encodings","rid","maxBitrate","scalabilityMode","codecOptions","videoGoogleStartBitrate","RoomClient","socket","callId","producerTransport","consumerTransport","device","consumers","producers","handlers","this","consume","name","data","resolve","emit","transport","on","callback","errback","dtlsParameters","request","transportId","producerTransportInfo","consumerTransportInfo","routerRtpCapabilities","loadDevice","createSendTransport","handleTransportConnect","createRecvTransport","rtpCapabilities","kind","rtpParameters","producerId","consumeResult","consumer","stream","consumerId","forEach","f","user","track","getAudioTracks","getVideoTracks","params","produce","producer","mediasoupClient","load","MediaStream","event","fn","push","Object","values","pause","paused","resume","off","close","fetchCalls","createAsyncThunk","calls","results","initializeVisit","setRc","videoHandler","io","connect","host","transports","connected","rc","init","initializeProducers","setLocalAudio","setLocalVideo","all","videoStream","audioStream","cs","initializeRemotes","setRemoteAudios","setRemoteVideos","existing","newStreams","callAdapter","createEntityAdapter","callSlice","createSlice","initialState","getInitialState","reducers","extraReducers","builder","addCase","fulfilled","action","setAll","payload","rejected","actions","contactsAdapter","fetchContacts","inmate","camelcaseKeys","contactsSlice","getSelectors","selectAllCalls","selectAll","selectCallById","selectById","selectAllContacts","selectContactEntities","selectEntities","createSelector","baseCalls","resources","en","login","enLogin","dashboard","enDashboard","profile","enProfile","enCall","enCalls","modals","enModals","settings","enSettings","es","esLogin","esDashboard","esProfile","esCall","esModals","esSettings","i18n","use","initReactI18next","lng","ns","PageLayout","children","className","Content","style","backgroundColor","opacity","EditButton","icon","SaveOutlined","size","ProfileInfo","t","onEdit","useTranslation","useState","totalMinutes","setTotalMinutes","useEffect","total","differenceInMinutes","Date","scheduledEnd","scheduledStart","reduce","b","direction","src","profileImagePath","AVATAR_LARGE","Title","level","Text","strong","location","gutter","span","title","format","dateOfBirth","offset","Profile","isEditing","setIsEditing","ProfilePage","useAppSelector","modalsSlice","activeType","openModal","closeModal","tableColumns","dataIndex","Calls","dispatch","useAppDispatch","tableData","setTableData","date","time","participants","cancel","onClick","quota","columns","dataSource","useCalls","setCalls","contactEntities","c","loadAllCallEntities","CallsPage","Settings","Option","Select","defaultValue","language","onChange","changeLanguage","keys","LANGUAGES","index","Link","SettingsPage","CallItem","selectCall","navigate","openPrivacyNotice","useSound","EnterCallSound","play","started","subMinutes","WAITING_ROOM_BUFFER_MIN","justify","align","isToday","isTomorrow","paddingTop","disabled","okBtnText","CallsList","openInfoModal","extra","path","ConnectionItem","contact","shape","daysPastNum","ConnectionsList","filteredContacts","setFilteredContacts","activeContactTab","setActiveContactTab","tabList","tab","connectionItems","activeTabKey","onTabChange","Styles","headerTime","color","marginBottom","headerDate","marginTop","quote","DashboardHeader","QUOTES","dailyQuote","currTime","setCurrTime","interval","setInterval","clearInterval","backgroundImage","background","author","CallDetails","selectedCall","onClose","placement","closable","visible","getContainer","position","CalendarOutlined","TeamOutlined","fontSize","Dashboard","setSelectedCall","mapDispatchToProps","connector","resource","commonSlice","fullScreen","enterFullScreen","exitFullScreen","MessageDisplay","from","getDisplayName","timestamp","Chat","roomClient","inmateId","Sider","Layout","chatCollapsed","setChatCollapsed","draftMessage","setDraftMessage","messages","setMessages","hasUnreadMessages","setHasUnreadMessages","MessageReceivedSound","playMessageReceived","contents","toLocaleDateString","onSendMessage","then","rejection","theme","maxHeight","collapsible","collapsed","onCollapse","WRAPPER_PADDING","overflowY","mark","TextArea","rows","e","target","onPressEnter","_e","onSubmit","placeholder","autoFocus","bordered","IconButton","label","danger","block","Style","iconButton","active","inactive","VideoOverlay","audioOn","toggleAudio","videoOn","toggleVideo","toggleChat","terminateCall","timerOn","toggleTimer","AudioOutlined","AudioMutedOutlined","VideoCameraOutlined","dot","MessageOutlined","ClockCircleOutlined","top","left","zIndex","display","avatar","margin","VideoMePlaceholder","initials","getTranslatedDailyQuestion","question","WaitingRoomCard","navigateBack","openTestConnectionModal","QUESTIONS","icebreaker","renderer","formatted","minutes","seconds","completed","some","val","mapCountdownTimeToStyle","Timer","endTime","zeroPadTime","Video","srcObject","props","refVideo","useRef","current","ref","refAudio","Call","React","memo","localVideo","localAudio","remoteAudios","remoteVideos","showOverlay","setShowOverlay","participantHasJoined","setParticipantsHasJoined","peerAudioOn","setPeerAudioOn","peerVideoOn","setPeerVideoOn","setTimerOn","JoinedCallSound","playJoinCall","LeaveCallSound","playLeaveCall","onMouseMove","clearTimeout","parseInt","onMouseOver","autoPlay","toUpperCase","resumeAudio","pauseAudio","resumeVideo","pauseVideo","CallBase","match","stableDispatch","useCallback","baseCall","setCall","useCallById","hasInit","setHasInit","desc","CallFeedbackBase","UNAUTHENTICATED_USER_ID","ROUTES","component","CallPage","character","HeartOutlined","tooltips","DashboardPage","padding","SET_SESSION","LOGOUT","setSession","userState","token","inmateIdentification","isLoggedIn","sessionReducer","history","fetchConnections","connections","connectionAdapter","connectionSlice","createBrowserHistory","rootReducer","combineReducers","common","reducer","router","connectRouter","configureStore","middleware","getDefaultMiddleware","concat","routerMiddleware","useDispatch","useSelector","ProtectedRoute","redirectPath","isAuthenticated","authenticationPath","to","pathname","render","initializeSession","loginWithCredentials","cred","method","JSON","stringify","facilityId","inmateNumber","pin","cookies","get","re","found","_defs","_path","_polygon","_polygon2","_path2","_polygon3","_polygon4","_path3","_path4","_path5","_path6","_path7","_path8","_path9","_extends","assign","i","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","xmlns","viewBox","d","points","ForwardRef","BORDER_RADIUS","borderRadius","FORM_LAYOUT","labelCol","flex","wrapperCol","FORM_TAIL_LAYOUT","facilities","setFacilities","getFacilityOptions","onFinish","facilityOptions","facility","href","onFinishFailed","_errorInfo","initialValues","Item","rules","required","Group","entries","Button","prefix","UserOutlined","Password","LockOutlined","htmlType","Sidebar","defaultSelectedKeys","HomeOutlined","ScheduleOutlined","EllipsisOutlined","CancelCallModal","fullName","startDate","startTime","okText","onOk","onCancel","connectionName","connectionFirstName","InformationalModal","cancelButtonProps","hideCancel","TestConnectionModal","setAudio","setVideo","getTracks","stop","Modals","hasSideBar","defaultProtectedRouteProps","showSideBar","minHeight","exact","LoginPage","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.3ee13539.chunk.js","sourcesContent":["import { Store } from \"src/redux\";\nimport { FacilitiesAPIResponse } from \"./interfaces/apiResponses\";\n\nexport const API_URL = process.env.REACT_APP_API_URL || \"api/v1/\";\n\nconsole.log(API_URL);\nexport interface ApiResponse {\n  date: number;\n  good: boolean;\n  status?: \"OK\" | \"ERROR\" | \"succeeded\" | 200;\n  message?: string;\n  data: Record<string, unknown> | Record<string, unknown>[] | unknown;\n}\n\nexport function fetchTimeout(\n  fetchUrl: string,\n  options: Record<string, unknown>,\n  timeout = 15000\n): Promise<Response> {\n  return Promise.race([\n    fetch(fetchUrl, { ...options, mode: \"cors\" }),\n    new Promise<Response>((_, reject) =>\n      setTimeout(() => reject(new Error(\"timeout\")), timeout)\n    ),\n  ]);\n}\n\nexport function toQueryString(options: string[][]) {\n  return options.map((x) => x[0] + \"=\" + encodeURIComponent(x[1])).join(\"&\");\n}\n\nexport async function fetchAuthenticated(\n  fetchUrl: string,\n  options: Record<string, unknown> = {},\n  timeout = 15000\n): Promise<ApiResponse> {\n  const state = Store.getState();\n\n  const requestOptions = {\n    ...options,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"include\",\n  };\n\n  const response = await fetchTimeout(\n    `${API_URL}inmates/${state.session.authInfo.id}/${fetchUrl}`,\n    requestOptions,\n    timeout\n  );\n\n  if (response.status !== 200 && response.status !== 201) {\n    throw response;\n  }\n\n  const body = await response.json();\n\n  return body;\n}\n\nexport async function fetchFacilities(\n  timeout = 1500\n): Promise<FacilitiesAPIResponse> {\n  const requestOptions = {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const response = await fetchTimeout(\n    `${API_URL}public/facilities`,\n    requestOptions,\n    timeout\n  );\n\n  const body = await response.json();\n\n  return body;\n}\n","import { notification, message } from \"antd\";\nimport { BasePersona } from \"src/types/User\";\n\nexport function getRandomItem(items: Object[]) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n\nexport const getInitials = (str: string) => {\n  return str\n    .split(\" \")\n    .map((substr) => substr[0])\n    .join(\"\");\n};\n\nexport const genFullName = (entity: BasePersona): string =>\n  entity ? `${entity.firstName} ${entity.lastName}` : \"\";\n\nexport const openNotificationWithIcon = (\n  message: string,\n  description: string,\n  type: \"success\" | \"info\" | \"error\" | \"warning\"\n) => {\n  notification[type]({\n    message,\n    description,\n  });\n};\nexport const showToast = (\n  key: string,\n  content: string,\n  type: \"success\" | \"error\" | \"warning\" | \"loading\" | \"info\",\n  duration = 3\n) => {\n  switch (type) {\n    case \"success\":\n      message.success({ content, key, duration });\n      break;\n    case \"error\":\n      message.error({ content, key, duration });\n      break;\n    case \"warning\":\n      message.warning({ content, key, duration });\n      break;\n    case \"loading\":\n      message.loading({ content, key, duration });\n      break;\n    default:\n      message.info({ content, key, duration });\n      break;\n  }\n};\n\nfunction hashCode(str: string): number {\n  var hash = 0;\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 6) - hash);\n  }\n  return hash;\n}\n\nexport function generateBgColor(label: string): string {\n  const BACKGROUND_COLORS = [\n    \"#093145\",\n    \"#3C6478\",\n    \"#107896\",\n    \"#43ABC9\",\n    \"#C2571A\",\n    \"#9A2617\",\n  ];\n  return BACKGROUND_COLORS[\n    Math.abs(hashCode(label) % BACKGROUND_COLORS.length)\n  ];\n}\nexport function notEmpty<TParam>(\n  value: TParam | null | undefined\n): value is TParam {\n  return value !== null && value !== undefined;\n}\n","import { Dictionary } from \"@reduxjs/toolkit\";\nimport { BaseCall, Call, MediaType } from \"src/types/Call\";\nimport { Contact } from \"src/types/User\";\nimport { notEmpty } from \"./utils\";\n\n// The timer will switch to a white background for four seconds around each of these key minutes\nconst keyMinutes = [10, 5, 2];\nconst DEFAULT_BACKGROUND = \"bg-gray-900 text-white\";\nconst WHITE_BACKGROUND = \"bg-white text-black\";\nconst BLUE_BACKGROUND = \"bg-blue-500 text-white\";\n\nexport function loadCallEntitiesById(\n  call: BaseCall,\n  contacts: Dictionary<Contact>\n): Call {\n  const userParticipants = call.userIds\n    .map((id) => contacts[id])\n    .filter(notEmpty);\n  return { ...call, userParticipants: userParticipants };\n}\n\nexport function loadCallEntities(\n  call: BaseCall,\n  contacts: Dictionary<Contact>\n): Call {\n  const userParticipants = call.userIds\n    .map((id) => contacts[id])\n    .filter(notEmpty);\n  return { ...call, userParticipants: userParticipants };\n}\n\nexport function loadAllCallEntities(\n  calls: BaseCall[],\n  contacts: Dictionary<Contact>\n): Call[] {\n  return calls.map((c) => loadCallEntities(c, contacts));\n}\n\n// This function determines what color the background should be\n// Within 4 seconds of a key minute (i.e. 9:56-10:00) -> White background\n// Last minute -> Blue bacground\n// Default -> Black background\nexport function mapCountdownTimeToStyle(\n  minutes: number,\n  seconds: number\n): string {\n  if (keyMinutes.some((val) => val === minutes && seconds === 0))\n    return WHITE_BACKGROUND;\n  if (keyMinutes.some((val) => val === minutes + 1 && seconds >= 56))\n    return WHITE_BACKGROUND;\n  if (minutes === 0 || (minutes === 1 && seconds === 0)) return BLUE_BACKGROUND;\n  return DEFAULT_BACKGROUND;\n}\n\nfunction getMediaConstraints(\n  type: MediaType,\n  deviceId?: number\n): MediaStreamConstraints {\n  if (type === \"audio\") {\n    return { audio: true };\n  } else {\n    return {\n      video: true,\n    };\n  }\n}\n\nexport async function getMedia(type: MediaType, deviceId?: number) {\n  const mediaConstraints = getMediaConstraints(type, deviceId);\n  return await navigator.mediaDevices.getUserMedia(mediaConstraints);\n}\n","import * as mediasoupClient from \"mediasoup-client\";\nimport { Transport } from \"mediasoup-client/lib/types\";\nimport { MediaType } from \"src/types/Call\";\nimport { getMedia } from \"src/utils\";\n/*\n  Copyright 2020 Ameelio.org.\n  Published under the GPL v3.\n\n  You can obtain a copy of the GPL v3 at:\n  https://www.gnu.org/licenses/gpl-3.0.en.html\n\n  This file was inspired by code from https://github.com/Dirvann/mediasoup-sfu-webrtc-video-rooms,\n  which was published under the Apache License.\n  Copyright 2020 github.com/Dirvann.\n\n  You can obtain a copy of the Apache License at:\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  This file was substantially modified by Ameelio to streamline\n  the signalling protocol and change the structure of how a RoomClient\n  is initialized and what events it exposes for easier use by\n  Ameelio's client-side code, and to refactor and restructure the code\n  for easier maintainenance, among other changes.\n*/\n// window.rc = null;\n// window.consumers = [];\n// window.producers = [];\n\nconst config = {\n  video: {\n    width: { min: 640, ideal: 1920 },\n    height: { min: 400, ideal: 1080 },\n    encodings: [\n      {\n        rid: \"r0\",\n        maxBitrate: 100000,\n        scalabilityMode: \"S1T3\",\n      },\n      {\n        rid: \"r1\",\n        maxBitrate: 300000,\n        scalabilityMode: \"S1T3\",\n      },\n      {\n        rid: \"r2\",\n        maxBitrate: 900000,\n        scalabilityMode: \"S1T3\",\n      },\n    ],\n    codecOptions: {\n      videoGoogleStartBitrate: 1000,\n    },\n  },\n};\n\n// function getMediaConstraints(\n//   type: MediaType,\n//   deviceId?: number\n// ): MediaStreamConstraints {\n//   if (type === \"audio\") {\n//     return { audio: true };\n//   } else {\n//     return {\n//       video: true,\n//     };\n//   }\n// }\n\nexport async function stopStream(stream: MediaStream) {\n  const tracks = stream.getTracks();\n  tracks.forEach((track) => {\n    track.stop();\n  });\n}\n\nclass RoomClient {\n  private callId: number;\n  private producerTransport: Transport | null;\n  private consumerTransport: Transport | null;\n  private device: mediasoupClient.Device | null;\n  private consumers: Record<string, mediasoupClient.types.Consumer>;\n  private producers: Record<string, mediasoupClient.types.Producer>;\n  private handlers: Record<string, ((...args: unknown[]) => void)[]>;\n\n  public socket: SocketIOClient.Socket;\n\n  constructor(socket: SocketIOClient.Socket, callId: number) {\n    this.socket = socket;\n    this.callId = callId;\n\n    this.producerTransport = null;\n    this.consumerTransport = null;\n\n    this.device = null;\n\n    this.consumers = {};\n    this.producers = {};\n\n    this.handlers = { consume: [] };\n  }\n\n  async request(name: string, data: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!this.socket) return reject(\"No socket connection.\");\n\n      this.socket.emit(name, data, (response: any) => {\n        if (response.error) reject(response.error);\n        else resolve(response);\n      });\n    });\n  }\n\n  async handleTransportConnect(transport: Transport) {\n    return new Promise((resolve: (value?: unknown) => void, reject) => {\n      // Wait for the producer transport to connect...\n      transport.on(\n        \"connect\",\n        async ({ dtlsParameters }, callback: () => void, errback) => {\n          await this.request(\"establishDtls\", {\n            dtlsParameters,\n            callId: this.callId,\n            transportId: transport.id,\n          });\n          callback();\n          resolve();\n        }\n      );\n    });\n  }\n\n  async init() {\n    // Request to join the room.\n    const {\n      producerTransportInfo,\n      consumerTransportInfo,\n      routerRtpCapabilities,\n    } = await this.request(\"join\", { callId: this.callId });\n\n    // Load up a local media device consistent with server\n    this.device = await this.loadDevice(routerRtpCapabilities);\n    if (!this.device) return;\n\n    // Set up both transports and promise to send\n    // dtls info when they connect (this won't occur until\n    // someone actually produces).\n    if (producerTransportInfo) {\n      this.producerTransport = this.device.createSendTransport(\n        producerTransportInfo\n      );\n      this.handleTransportConnect(this.producerTransport);\n    }\n\n    this.consumerTransport = this.device.createRecvTransport(\n      consumerTransportInfo\n    );\n    this.handleTransportConnect(this.consumerTransport);\n\n    // Declare what our device is capable of.\n    await this.request(\"declareRtpCapabilities\", {\n      rtpCapabilities: this.device.rtpCapabilities,\n    });\n\n    // We don't actually need to wait for this request to come back.\n    this.request(\"finishConnecting\", { callId: this.callId });\n\n    // When our producer transport is producing a new stream,\n    // inform the server.\n    if (this.producerTransport) {\n      this.producerTransport.on(\n        \"produce\",\n        async ({ kind, rtpParameters }, callback, errback) => {\n          const { producerId } = await this.request(\"produce\", {\n            callId: this.callId,\n            kind,\n            rtpParameters,\n          });\n\n          callback({ id: producerId });\n        }\n      );\n    }\n\n    // When we get a consumer, fire an event.\n    this.socket.on(\"consume\", async (info: any) => {\n      const consumeResult = await this.consume(info);\n      if (!consumeResult) return;\n      const { consumer, stream } = consumeResult;\n      this.socket.emit(\"resumeConsumer\", {\n        callId: this.callId,\n        consumerId: consumer.id,\n      });\n      this.handlers[\"consume\"].forEach((f) => f(info.kind, stream, info.user));\n    });\n  }\n\n  async produce(\n    type: MediaType,\n    deviceId?: number\n  ): Promise<MediaStream | null> {\n    if (!this.producerTransport) return null;\n    const stream = await getMedia(type, deviceId);\n\n    const track = (type === \"audio\"\n      ? stream.getAudioTracks()\n      : stream.getVideoTracks())[0];\n\n    const params: any = { track };\n\n    if (type === \"video\") {\n      params.encodings = config.video.encodings;\n      params.codecOptions = config.video.codecOptions;\n    }\n\n    const producer = await this.producerTransport.produce(params);\n    this.producers[producer.id] = producer;\n    return stream;\n  }\n\n  async loadDevice(\n    routerRtpCapabilities: mediasoupClient.types.RtpCapabilities\n  ) {\n    const device = new mediasoupClient.Device();\n\n    await device.load({ routerRtpCapabilities });\n\n    return device;\n  }\n\n  async consume(info: mediasoupClient.types.ConsumerOptions) {\n    if (!this.consumerTransport) return;\n    const consumer = await this.consumerTransport.consume(info);\n    const stream = new MediaStream([consumer.track]);\n    this.consumers[consumer.id] = consumer;\n    return { consumer, stream };\n  }\n\n  async on(event: string, fn: (...args: any) => void) {\n    if (!(event in this.handlers)) {\n      this.handlers[event] = [];\n    }\n    this.handlers[event].push(fn);\n  }\n\n  async terminate() {\n    await this.request(\"terminate\", { callId: this.callId });\n  }\n\n  async pauseVideo() {\n    Object.values(this.producers)?.forEach((producer) => {\n      if (producer.kind === \"video\") {\n        producer.pause();\n        this.request(\"producerUpdate\", {\n          callId: this.callId,\n          producerId: producer.id,\n          paused: true,\n          type: \"video\",\n        });\n      }\n    });\n    this.handlers[\"pauseVideo\"].forEach((f) => f());\n  }\n\n  async resumeVideo() {\n    Object.values(this.producers)?.forEach((producer) => {\n      if (producer.kind === \"video\") {\n        producer.resume();\n        this.request(\"producerUpdate\", {\n          callId: this.callId,\n          producerId: producer.id,\n          paused: false,\n          type: \"video\",\n        });\n      }\n    });\n    this.handlers[\"resumeVideo\"].forEach((f) => f());\n  }\n\n  async pauseAudio() {\n    Object.values(this.producers)?.forEach((producer) => {\n      if (producer.kind === \"audio\") {\n        producer.pause();\n        this.request(\"producerUpdate\", {\n          callId: this.callId,\n          producerId: producer.id,\n          paused: true,\n          type: \"audio\",\n        });\n      }\n    });\n    this.handlers[\"pauseAudio\"].forEach((f) => f());\n  }\n\n  async resumeAudio() {\n    Object.values(this.producers)?.forEach((producer) => {\n      if (producer.kind === \"audio\") {\n        producer.resume();\n        this.request(\"producerUpdate\", {\n          callId: this.callId,\n          producerId: producer.id,\n          paused: false,\n          type: \"audio\",\n        });\n      }\n    });\n    this.handlers[\"resumeAudio\"].forEach((f) => f());\n  }\n\n  async destroy() {\n    this.socket.off(\"connect\");\n    this.socket.off(\"consume\");\n    this.socket.off(\"textMessage\");\n    this.socket.close();\n\n    if (this.consumerTransport) this.consumerTransport.close();\n    if (this.producerTransport) this.producerTransport.close();\n    this.consumerTransport = null;\n    this.producerTransport = null;\n\n    Object.values(this.producers).forEach((producer) => {\n      producer.close();\n    });\n    Object.values(this.consumers).forEach((consumer) => {\n      consumer.close();\n    });\n    this.consumers = {};\n    this.producers = {};\n\n    this.handlers = {};\n  }\n}\n\nexport default RoomClient;\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport RoomClient from \"src/pages/Call/RoomClient\";\nimport {\n  BaseCall,\n  CallHandler,\n  CallParticipant,\n  ControlledStream,\n} from \"src/types/Call\";\nimport { ThunkApi } from \"../helper\";\nimport io from \"socket.io-client\";\nimport { showToast } from \"src/utils\";\nimport { AuthInfo } from \"src/types/Session\";\n\nexport const fetchCalls = createAsyncThunk(\"calls/fetchAll\", async () => {\n  const body = await fetchAuthenticated(`calls`);\n\n  const calls = (body.data as { results: BaseCall[] }).results;\n\n  return calls;\n});\n\nexport const initializeVisit = createAsyncThunk(\n  \"visit/initializeVisit\",\n  async ({\n    callId,\n    setRc,\n    authInfo,\n    videoHandler,\n  }: {\n    callId: number;\n    authInfo: AuthInfo;\n    setRc: (rc: RoomClient) => void;\n    videoHandler: CallHandler;\n  }) => {\n    const socket = io.connect(\n      process.env.NODE_ENV === \"production\"\n        ? `https://${videoHandler.host}`\n        : `https://${videoHandler.host}:${videoHandler.port}`,\n      {\n        transports: [\"websocket\"],\n      }\n    );\n    if (!socket.connected) {\n      await new Promise((resolve) => socket.on(\"connect\", resolve));\n    }\n    console.log(\"connected\");\n    await new Promise((resolve) => {\n      socket.emit(\"authenticate\", authInfo, resolve);\n    });\n    const rc = new RoomClient(socket, callId);\n    await rc.init();\n    setRc(rc);\n    return {\n      callId,\n    };\n  }\n);\n\nexport const initializeProducers = createAsyncThunk<\n  void,\n  {\n    rc: RoomClient;\n    setLocalAudio: React.Dispatch<\n      React.SetStateAction<ControlledStream | undefined>\n    >;\n    setLocalVideo: React.Dispatch<\n      React.SetStateAction<ControlledStream | undefined>\n    >;\n    setRc: (rc: RoomClient) => void;\n  },\n  ThunkApi\n>(\n  \"visit/initializeProducers\",\n  async ({ rc, setLocalAudio, setLocalVideo, setRc }) => {\n    const [videoStream, audioStream] = await Promise.all([\n      rc.produce(\"video\"),\n      rc.produce(\"audio\"),\n    ]);\n\n    if (!videoStream) throw Error(\"Unable to produce video\");\n    if (!audioStream) throw Error(\"Unable to produce audio\");\n\n    setLocalAudio({\n      stream: audioStream,\n      paused: false,\n    });\n    setLocalVideo({\n      stream: videoStream,\n      paused: false,\n    });\n    rc.on(\"pauseVideo\", () => {\n      setLocalVideo((cs) => {\n        if (cs) {\n          return {\n            stream: cs.stream,\n            paused: true,\n          };\n        }\n      });\n    });\n    rc.on(\"resumeVideo\", () => {\n      setLocalVideo((cs) => {\n        if (cs) {\n          return {\n            stream: cs.stream,\n            paused: false,\n          };\n        }\n      });\n    });\n    rc.on(\"pauseAudio\", () => {\n      setLocalAudio((cs) => {\n        if (cs) {\n          return {\n            stream: cs.stream,\n            paused: true,\n          };\n        }\n      });\n    });\n    rc.on(\"resumeAudio\", () => {\n      setLocalAudio((cs) => {\n        if (cs) {\n          return {\n            stream: cs.stream,\n            paused: false,\n          };\n        }\n      });\n    });\n    // update room client object\n    setRc(rc);\n  }\n);\n\nexport const initializeRemotes = createAsyncThunk<\n  void,\n  {\n    rc: RoomClient;\n    setRemoteAudios: React.Dispatch<\n      React.SetStateAction<Record<number, MediaStream>>\n    >;\n    setRemoteVideos: React.Dispatch<\n      React.SetStateAction<Record<number, MediaStream>>\n    >;\n  },\n  ThunkApi\n>(\n  \"visit/initializeRemotes\",\n  async ({ rc, setRemoteAudios, setRemoteVideos }) => {\n    rc.on(\n      \"consume\",\n      async (kind: string, stream: MediaStream, user: CallParticipant) => {\n        if (user.type !== \"user\") return;\n        if (kind === \"audio\") {\n          setRemoteAudios((existing) => {\n            const newStreams = { ...existing };\n            newStreams[user.id] = stream;\n            return newStreams;\n          });\n        }\n        if (kind === \"video\") {\n          setRemoteVideos((existing) => {\n            const newStreams = { ...existing };\n            newStreams[user.id] = stream;\n            return newStreams;\n          });\n        }\n      }\n    );\n  }\n);\n\nexport const callAdapter = createEntityAdapter<BaseCall>();\n\nexport const callSlice = createSlice({\n  name: \"calls\",\n  initialState: callAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchCalls.fulfilled, (state, action) =>\n      callAdapter.setAll(state, action.payload)\n    );\n    builder.addCase(initializeVisit.rejected, () =>\n      showToast(\"initializeVisit\", \"Failed to initialize call.\", \"error\")\n    );\n    builder.addCase(initializeProducers.rejected, () =>\n      showToast(\n        \"initializeProducers\",\n        \"Failed to initialize local streams.\",\n        \"error\"\n      )\n    );\n    builder.addCase(initializeRemotes.rejected, () =>\n      showToast(\"initializeProducers\", \"Failed to initialize remotes.\", \"error\")\n    );\n  },\n});\n\nexport const callActions = callSlice.actions;\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n} from \"@reduxjs/toolkit\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { Contact } from \"src/types/User\";\n\nexport const contactsAdapter = createEntityAdapter<Contact>();\n\nexport const fetchContacts = createAsyncThunk(\"contacts/fetchAll\", async () => {\n  const body = await fetchAuthenticated(`contacts`);\n  const contacts = ((body.data as Record<string, unknown>)\n    .contacts as Contact[]).map((inmate) => camelcaseKeys(inmate));\n\n  return contacts;\n});\n\nexport const contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: contactsAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchContacts.fulfilled, (state, action) => {\n      contactsAdapter.setAll(state, action.payload);\n    });\n  },\n});\n","import { RootState } from \".\";\nimport { callAdapter } from \"./modules/call\";\nimport { contactsAdapter } from \"./modules/contactsSlice\";\nimport { BaseCall } from \"src/types/Call\";\nimport { createSelector } from \"reselect\";\n\n// get selectors from entity adapter\nexport const {\n  selectAll: selectAllCalls,\n  selectById: selectCallById,\n} = callAdapter.getSelectors<RootState>((state) => state.calls);\n\nexport const {\n  selectAll: selectAllContacts,\n  selectById: selectContactById,\n  selectEntities: selectContactEntities,\n} = contactsAdapter.getSelectors<RootState>((state) => state.contacts);\n\nexport const selectUpcomingCalls = createSelector(\n  selectAllCalls,\n  (baseCalls: BaseCall[]) =>\n    baseCalls.filter(\n      (call) => call.status !== \"ended\" && call.status !== \"terminated\"\n    )\n);\n\nexport const selectEndedCalls = createSelector(\n  selectAllCalls,\n  (baseCalls: BaseCall[]) =>\n    baseCalls.filter(\n      (call) => call.status === \"ended\" || call.status === \"terminated\"\n    )\n);\n","import i18n from \"i18next\";\nimport enDashboard from \"./en/dashboard.json\";\nimport enProfile from \"./en/profile.json\";\nimport esProfile from \"./es/profile.json\";\nimport enCall from \"./en/call.json\";\nimport enCalls from \"./en/calls.json\";\nimport enLogin from \"./en/login.json\";\nimport esLogin from \"./es/login.json\";\nimport esDashboard from \"./es/dashboard.json\";\nimport esCall from \"./es/call.json\";\nimport enModals from \"./en/modals.json\";\nimport esModals from \"./es/modals.json\";\nimport enSettings from \"./en/settings.json\";\nimport esSettings from \"./es/settings.json\";\n\nimport { initReactI18next } from \"react-i18next\";\n\nexport const resources = {\n  en: {\n    login: enLogin,\n    dashboard: enDashboard,\n    profile: enProfile,\n    call: enCall,\n    calls: enCalls,\n    modals: enModals,\n    settings: enSettings,\n  },\n  es: {\n    login: esLogin,\n    dashboard: esDashboard,\n    profile: esProfile,\n    call: esCall,\n    modals: esModals,\n    settings: esSettings,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  lng: \"en\",\n  ns: [\"login\", \"dashboard\", \"call\", \"profile\", \"settings\", \"modals\"],\n  resources,\n});\n","import PageLayout from \"./PageLayout\";\n\nexport default PageLayout;\n","import { Layout } from \"antd\";\nimport React, { ReactNode } from \"react\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nconst PageLayout: React.FC = ({ children }: Props) => (\n  <Layout className=\"min-h-screen\">\n    <Layout.Content>\n      <div\n        style={{\n          height: \"60px\",\n          backgroundColor: \"#F0DEFF\",\n          opacity: 0.4,\n        }}\n      />\n      {children}\n    </Layout.Content>\n  </Layout>\n);\n\nexport default PageLayout;\n","import EditButton from \"./EditButton\";\n\nexport default EditButton;\n","import { SaveOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport React, { ReactNode } from \"react\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\nconst EditButton: React.FC = ({ children }: Props) => (\n  <Button\n    type=\"primary\"\n    icon={<SaveOutlined />}\n    size=\"large\"\n    className=\"rounded\"\n  >\n    {children}\n  </Button>\n);\n\nexport default EditButton;\n","import { Space, PageHeader, Row, Card, Typography, Col } from \"antd\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport { differenceInMinutes, format } from \"date-fns\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { User } from \"src/types/User\";\nimport { genFullName } from \"src/utils/utils\";\nimport { BaseCall } from \"src/types/Call\";\nimport { AVATAR_LARGE } from \"src/utils/constants\";\nimport PageLayout from \"src/components/Common/PageLayout\";\nimport EditButton from \"src/components/Common/Buttons/EditButton\";\n\ninterface Props {\n  user: User;\n  calls: BaseCall[];\n  onEdit: () => void;\n}\n\nconst ProfileInfo: React.FC<Props> = ({ user, calls, onEdit }) => {\n  const { t } = useTranslation(\"profile\");\n  const [totalMinutes, setTotalMinutes] = useState(0);\n\n  useEffect(() => {\n    if (calls.length) {\n      const total = calls\n        .map((call) =>\n          differenceInMinutes(\n            new Date(call.scheduledEnd),\n            new Date(call.scheduledStart)\n          )\n        )\n        .reduce((a, b) => a + b);\n      setTotalMinutes(total);\n    }\n  }, [calls]);\n\n  return (\n    <PageLayout>\n      <Space direction=\"vertical\" size=\"large\" className=\"w-100 p-6 pt-9\">\n        <PageHeader className=\"p-6 border border-solid border-opacity-1 border-gray-200\">\n          <Space className=\"flex justify-between\">\n            <Space>\n              <Avatar src={user.profileImagePath} size={AVATAR_LARGE} />\n              <Space direction=\"vertical\">\n                <Typography.Title level={4}>\n                  <Typography.Text strong>{genFullName(user)}</Typography.Text>\n                </Typography.Title>\n                <Typography.Title level={5}>\n                  <Typography.Text>{user.location}</Typography.Text>\n                </Typography.Title>\n              </Space>\n            </Space>\n            <EditButton>{t(\"profileInfo.editProfile\")}</EditButton>\n          </Space>\n        </PageHeader>\n        <Row gutter={32}>\n          <Col span={16}>\n            <Card title={t(\"profileInfo.about\")}>\n              <p>\n                <Typography.Text>{`${t(\"profileInfo.name\")}: ${genFullName(\n                  user\n                )}`}</Typography.Text>\n              </p>\n              <p>\n                <Typography.Text>{`${t(\"profileInfo.home\")}: ${\n                  user.location\n                }`}</Typography.Text>\n              </p>\n              <p>\n                <Typography.Text>{`${t(\"profileInfo.birthday\")}: ${format(\n                  new Date(user.dateOfBirth),\n                  \"MMMM d, yyyy\"\n                )}`}</Typography.Text>\n              </p>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title={t(\"profileInfo.history\")}>\n              <Row>\n                <Col span={4}>\n                  <p>\n                    <Typography.Text type=\"secondary\">\n                      {t(\"profileInfo.totalCalls\")}\n                    </Typography.Text>\n                  </p>\n                  <p>\n                    <Typography.Text>{calls.length}</Typography.Text>\n                  </p>\n                </Col>\n                <Col span={16} offset={2}>\n                  <p>\n                    <Typography.Text type=\"secondary\">\n                      {t(\"profileInfo.totalMinutes\")}\n                    </Typography.Text>\n                  </p>\n                  <p>\n                    <Typography.Text>{totalMinutes}</Typography.Text>\n                  </p>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </Space>\n    </PageLayout>\n  );\n};\n\nexport default ProfileInfo;\n","import Profile from \"./Profile\";\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport { BaseCall } from \"src/types/Call\";\nimport { User } from \"src/types/User\";\nimport ProfileInfo from \"./ProfileInfo\";\n\ninterface Props {\n  calls: BaseCall[];\n  user: User;\n}\n\nconst Profile: React.FC<Props> = ({ calls, user }) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  return isEditing ? null : (\n    <ProfileInfo user={user} calls={calls} onEdit={() => setIsEditing(true)} />\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { useAppSelector } from \"src/redux\";\nimport { selectAllCalls } from \"src/redux/selectors\";\nimport \"src/i18n/config\";\nimport Profile from \"src/components/Profile\";\n\nconst ProfilePage: React.FC = () => {\n  const user = useAppSelector((state) => state.session.user);\n  const calls = useAppSelector((state) => selectAllCalls(state));\n  return <Profile calls={calls} user={user} />;\n};\n\nexport default ProfilePage;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  CancelCallModalData,\n  InactiveModalData,\n  ResourceModalData,\n  TestConnectionModalData,\n} from \"src/types/UI\";\n\ntype ModalEntity =\n  | CancelCallModalData\n  | ResourceModalData\n  | TestConnectionModalData\n  | InactiveModalData;\n\n// type ModalsSliceState =  {activeType: ModalType | null, entity: Call |{ title: string; body: string } | null };\ntype ModalsSliceState = { data: ModalEntity };\n\nconst initialState: ModalsSliceState = {\n  data: { activeType: \"INACTIVE_MODAL\", entity: null },\n};\n\nexport const modalsSlice = createSlice({\n  name: \"modals\",\n  initialState,\n  reducers: {\n    openModal: (state, action: PayloadAction<ModalEntity>) => {\n      state.data = action.payload;\n    },\n    closeModal: (state) => {\n      state.data = { activeType: \"INACTIVE_MODAL\", entity: null };\n    },\n  },\n});\n\nexport const { openModal, closeModal } = modalsSlice.actions;\n","import { Avatar, Button, Col, Row, Space, Table, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { Call } from \"src/types/Call\";\nimport { User } from \"src/types/User\";\nimport PageLayout from \"src/components/Common/PageLayout\";\nimport { useTranslation } from \"react-i18next\";\nimport { format } from \"date-fns\";\nimport { genFullName } from \"src/utils/utils\";\nimport { useAppDispatch } from \"src/redux\";\nimport { openModal } from \"src/redux/modules/modalsSlice\";\n\ninterface Props {\n  calls: Call[];\n  user: User;\n}\n\ninterface TableData {\n  date: string;\n  time: string;\n  participants: JSX.Element;\n  cancel: JSX.Element;\n}\n\nconst tableColumns = [\n  {\n    title: \"Date\",\n    dataIndex: \"date\",\n  },\n  {\n    title: \"Time\",\n    dataIndex: \"time\",\n  },\n  {\n    title: \"Participants\",\n    dataIndex: \"participants\",\n  },\n  {\n    title: \"\",\n    dataIndex: \"cancel\",\n  },\n];\n\nconst Calls: React.FC<Props> = ({ calls, user }) => {\n  const dispatch = useAppDispatch();\n  const [tableData, setTableData] = useState<TableData[] | undefined>(\n    undefined\n  );\n  const { t } = useTranslation(\"calls\");\n\n  useEffect(() => {\n    setTableData(\n      calls.map((call) => {\n        return {\n          date: format(new Date(call.scheduledStart), \"eeee, LLLL d\"),\n          time: `${format(\n            new Date(call.scheduledStart),\n            \"h:mm bbb\"\n          )} - ${format(new Date(call.scheduledStart), \"h:mm bbb\")}`,\n          participants: (\n            <Space>\n              <Avatar src={user.profileImagePath} size=\"small\" />\n              <Typography.Text>{genFullName(user)}</Typography.Text>\n            </Space>\n          ),\n          cancel: (\n            <Button\n              type=\"link\"\n              onClick={() =>\n                dispatch(\n                  openModal({ activeType: \"CANCEL_CALL_MODAL\", entity: call })\n                )\n              }\n            >\n              {t(\"cancel\")}\n            </Button>\n          ),\n        };\n      })\n    );\n  }, [calls, user, dispatch, t]);\n\n  return (\n    <PageLayout>\n      <Space className=\"p-8 w-full\" direction=\"vertical\">\n        <Row className=\"pb-2\">\n          <Col>\n            <p className=\"pb-2\">\n              <Typography.Text type=\"secondary\">\n                {t(\"callLimit\")}\n              </Typography.Text>\n            </p>\n            <p>\n              <Typography.Text strong className=\"text-base\">\n                {user.quota}\n              </Typography.Text>\n            </p>\n          </Col>\n        </Row>\n        <Row>\n          <Table\n            className=\"w-full\"\n            columns={tableColumns}\n            dataSource={tableData}\n          />\n        </Row>\n      </Space>\n    </PageLayout>\n  );\n};\n\nexport default Calls;\n","import Calls from \"./Calls\";\n\nexport default Calls;\n","import { useState, useEffect } from \"react\";\nimport { Call } from \"src/types/Call\";\nimport { loadAllCallEntities, loadCallEntities } from \"src/utils\";\nimport {\n  selectAllCalls,\n  selectCallById,\n  selectContactEntities,\n} from \"src/redux/selectors\";\nimport { useAppSelector } from \"src/redux\";\n\nexport function useCalls() {\n  const [calls, setCalls] = useState<Call[]>([]);\n  const baseCalls = useAppSelector(selectAllCalls);\n  const contactEntities = useAppSelector(selectContactEntities);\n\n  useEffect(() => {\n    setCalls(loadAllCallEntities(baseCalls, contactEntities));\n  }, [baseCalls, contactEntities]);\n\n  return calls;\n}\n\nexport function useCallById(id: number) {\n  const baseCall = useAppSelector((state) => selectCallById(state, id));\n  const contactEntities = useAppSelector(selectContactEntities);\n  const [call, setCall] = useState<Call>();\n\n  useEffect(() => {\n    if (baseCall) setCall(loadCallEntities(baseCall, contactEntities));\n  }, [baseCall, contactEntities]);\n\n  return call;\n}\n","import React from \"react\";\nimport { useAppSelector } from \"src/redux\";\nimport \"src/i18n/config\";\nimport Calls from \"src/components/Calls\";\nimport { useCalls } from \"src/hooks/useCalls\";\n\nconst CallsPage: React.FC = () => {\n  const user = useAppSelector((state) => state.session.user);\n  const calls = useCalls();\n\n  return <Calls calls={calls} user={user} />;\n};\n\nexport default CallsPage;\n","import Settings from \"./Settings\";\n\nexport default Settings;\n","import React from \"react\";\nimport { Language } from \"src/types/Session\";\nimport PageLayout from \"src/components/Common/PageLayout\";\nimport { Card, Col, Row, Select, Space, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { LANGUAGES } from \"src/utils/constants\";\nimport { openModal } from \"../../redux/modules/modalsSlice\";\nimport { useAppDispatch } from \"src/redux\";\n\nconst Settings: React.FC = () => {\n  const { t, i18n } = useTranslation(\"settings\");\n  const dispatch = useAppDispatch();\n  const { Option } = Select;\n\n  return (\n    <PageLayout>\n      <Space direction=\"vertical\" size=\"large\" className=\"w-100 p-6 pt-9\">\n        <Row gutter={32}>\n          <Col span={12}>\n            <Card title={t(\"language.title\")}>\n              <p>\n                <Typography.Text>{t(\"language.messageOne\")}</Typography.Text>\n              </p>\n              <p>\n                <Typography.Text type=\"secondary\">\n                  {t(\"language.messageTwo\")}\n                </Typography.Text>\n              </p>\n              <div className=\"pt-4\">\n                <Typography.Text>{`${t(\"language.title\")}:`}</Typography.Text>\n                {/* TODO: Right now, this only changes the language on the frontend via i18n. We need to also update the database\n                                whenever we have an API endpoint for it */}\n                <Select\n                  className=\"pl-4\"\n                  defaultValue={i18n.language}\n                  onChange={(value) => i18n.changeLanguage(value)}\n                >\n                  {Object.keys(LANGUAGES).map((key, index) => (\n                    <Option key={`${key}-${index}`} value={key}>\n                      {LANGUAGES[key as Language]}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card title={t(\"resources.title\")}>\n              <Row className=\"pb-2\">\n                <Typography.Link\n                  onClick={() =>\n                    dispatch(\n                      openModal({\n                        activeType: \"RESOURCE_MODAL\",\n                        entity: { title: \"Hello\", body: \"World\" },\n                      })\n                    )\n                  }\n                >\n                  {t(\"resources.contactVerification\")}\n                </Typography.Link>\n              </Row>\n              <Row className=\"pb-2\">\n                <Typography.Link\n                  onClick={() =>\n                    dispatch(\n                      openModal({\n                        activeType: \"RESOURCE_MODAL\",\n                        entity: { title: \"Hello\", body: \"World\" },\n                      })\n                    )\n                  }\n                >\n                  {t(\"resources.callInfo\")}\n                </Typography.Link>\n              </Row>\n              <Row className=\"pb-2\">\n                <Typography.Link\n                  onClick={() =>\n                    dispatch(\n                      openModal({\n                        activeType: \"RESOURCE_MODAL\",\n                        entity: { title: \"Hello\", body: \"World\" },\n                      })\n                    )\n                  }\n                >\n                  {t(\"resources.privacyInfo\")}\n                </Typography.Link>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </Space>\n    </PageLayout>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport \"src/i18n/config\";\nimport Settings from \"src/components/Settings\";\n\nconst SettingsPage: React.FC = () => {\n  return <Settings />;\n};\n\nexport default SettingsPage;\n","export default __webpack_public_path__ + \"static/media/EnterCall.082ea360.wav\";","import { Avatar, Button, Card, Row, Space, Typography } from \"antd\";\nimport { differenceInMinutes, format, isToday, isTomorrow } from \"date-fns\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Call } from \"src/types/Call\";\nimport { FAQResource } from \"src/types/UI\";\nimport { genFullName } from \"src/utils/utils\";\nimport EnterCallSound from \"src/assets/Sounds/EnterCall.wav\";\nimport useSound from \"use-sound\";\nimport { subMinutes } from \"date-fns/esm\";\nimport { WAITING_ROOM_BUFFER_MIN } from \"src/utils/constants\";\n\ninterface Props {\n  call: Call;\n  selectCall: (call: Call) => void;\n  navigate: (path: string) => void;\n  openPrivacyNotice: (resource: FAQResource) => void;\n}\nconst CallItem: React.FC<Props> = ({\n  call,\n  selectCall,\n  navigate,\n  openPrivacyNotice,\n}: Props) => {\n  const { t } = useTranslation(\"dashboard\");\n\n  const [play] = useSound(EnterCallSound);\n\n  const duration = differenceInMinutes(\n    new Date(call.scheduledEnd),\n    new Date(call.scheduledStart)\n  );\n\n  const started =\n    subMinutes(new Date(call.scheduledStart), WAITING_ROOM_BUFFER_MIN) <\n    new Date();\n\n  const getDateLabel = (date: Date) => {\n    if (isToday(date)) return \"Today\";\n    if (isTomorrow(date)) return \"Tomorrow\";\n    return format(date, \"EEEE, MMMM d\");\n  };\n\n  return (\n    <Card key={call.id}>\n      <Row justify=\"space-between\" align=\"bottom\">\n        <Space direction=\"vertical\">\n          <Typography.Title level={5}>\n            {getDateLabel(new Date(call.scheduledStart))}\n          </Typography.Title>\n          <Typography.Text>\n            {format(new Date(call.scheduledStart), \"h:mm aaa\")} •{\" \"}\n            {`${duration} minutes`}\n          </Typography.Text>\n          <Space style={{ paddingTop: 18 }}>\n            <Avatar src={call.userParticipants[0].profileImagePath} />\n            <Typography.Text type=\"secondary\">\n              {genFullName(call.userParticipants[0])}\n            </Typography.Text>\n          </Space>\n        </Space>\n        <Space>\n          {started ? (\n            <Button\n              size=\"large\"\n              type=\"primary\"\n              className=\"rounded-sm\"\n              disabled={!call.videoHandler}\n              onClick={() => {\n                play();\n                navigate(`call/${call.id}`);\n                openPrivacyNotice({\n                  title: t(\"privacyNotice.title\"),\n                  body: t(\"privacyNotice.body\"),\n                  okBtnText: t(\"privacyNotice.okText\"),\n                });\n              }}\n            >\n              {t(\"call.join\")}\n            </Button>\n          ) : (\n            <Button\n              size=\"large\"\n              className=\"rounded-sm\"\n              onClick={() => selectCall(call)}\n            >\n              {t(\"call.seeDetails\")}\n            </Button>\n          )}\n        </Space>\n      </Row>\n    </Card>\n  );\n};\n\nexport default CallItem;\n","import { Card, Typography } from \"antd\";\nimport { push } from \"connected-react-router\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppDispatch } from \"src/redux\";\nimport { Call } from \"src/types/Call\";\nimport { FAQResource } from \"src/types/UI\";\nimport CallItem from \"./CallItem\";\n\ninterface Props {\n  calls: Call[];\n  selectCall: (call: Call) => void;\n  openInfoModal: (resource: FAQResource) => void;\n}\n\nconst CallsList: React.FC<Props> = ({\n  calls,\n  selectCall,\n  openInfoModal,\n}: Props) => {\n  const { t } = useTranslation(\"dashboard\");\n  const dispatch = useAppDispatch();\n\n  return (\n    <Card\n      title={t(\"call.title\")}\n      extra={\n        <Typography.Link onClick={() => dispatch(push(\"/\"))}>\n          {t(\"call.seeAll\")}\n        </Typography.Link>\n      }\n      className=\"rounded-md\"\n    >\n      <div className=\"pb-5\">\n        <Typography.Text>\n          {!calls.length\n            ? t(\"call.noCalls\")\n            : `${calls.length} ${t(\"call.upcomingCalls\")}${\n                calls.length > 1 ? \"s\" : \"\"\n              }`}\n        </Typography.Text>\n      </div>\n      {calls.map((call) => (\n        <CallItem\n          call={call}\n          selectCall={selectCall}\n          navigate={(path) => dispatch(push(path))}\n          openPrivacyNotice={openInfoModal}\n          key={`callItem-${call.id}`}\n        />\n      ))}\n    </Card>\n  );\n};\n\nexport default CallsList;\n","import { Avatar, Col, Space, Typography } from \"antd\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"src/types/User\";\nimport { genFullName } from \"src/utils/utils\";\n\ninterface Props {\n  contact: Contact;\n}\n\nconst ConnectionItem: React.FC<Props> = ({ contact }) => {\n  const { t } = useTranslation(\"dashboard\");\n\n  const getDaysPastNum = () => {\n    // TODO: get the last call\n    // return differenceInDays(\n    //   new Date(),\n    //   new Date(contact.lastCall.scheduledEnd)\n    // );\n    return 1;\n  };\n\n  return (\n    <Col key={contact.id} className=\"d-flex flex-column align-items-center\">\n      <Space direction=\"vertical\">\n        <Avatar shape=\"square\" size={80} src={contact.profileImagePath} />\n        <div>\n          <div>\n            <Typography.Text>{genFullName(contact)}</Typography.Text>\n          </div>\n          {contact.status === \"active\" && (\n            <div>\n              <Typography.Text type=\"secondary\">\n                {t(\"connection.lastCall\", {\n                  daysPastNum: getDaysPastNum(),\n                })}\n              </Typography.Text>\n            </div>\n          )}\n        </div>\n      </Space>\n    </Col>\n  );\n};\n\nexport default ConnectionItem;\n","import { Card, Row } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Call } from \"src/types/Call\";\nimport { Contact } from \"src/types/User\";\nimport ConnectionItem from \"./ConnectionItem\";\n\ninterface Props {\n  calls: Call[];\n  contacts: Contact[];\n}\n\nconst ConnectionsList: React.FC<Props> = ({ calls, contacts }: Props) => {\n  const { t } = useTranslation(\"dashboard\");\n  const [filteredContacts, setFilteredContacts] = useState<Contact[] | null>(\n    null\n  );\n  const [activeContactTab, setActiveContactTab] = useState(\"active\");\n  const tabList = [\n    {\n      key: \"active\",\n      tab: t(\"connection.active\"),\n    },\n    {\n      key: \"pending\",\n      tab: t(\"connection.pending\"),\n    },\n  ];\n\n  useEffect(() => {\n    setFilteredContacts(\n      contacts.filter((contact) => contact.status === activeContactTab)\n    );\n  }, [activeContactTab, contacts]);\n\n  const connectionItems = filteredContacts?.map((contact) => (\n    <ConnectionItem key={contact.id} contact={contact} />\n  ));\n\n  return (\n    <Card\n      title={t(\"connection.title\")}\n      tabList={tabList}\n      activeTabKey={activeContactTab}\n      onTabChange={(key) => setActiveContactTab(key)}\n    >\n      <Row justify=\"space-around\">{connectionItems}</Row>\n    </Card>\n  );\n};\n\nexport default ConnectionsList;\n","import { Col, Space, Typography } from \"antd\";\nimport { format } from \"date-fns\";\nimport React, { useEffect, useState } from \"react\";\nimport { Quote } from \"src/types/Common\";\nimport { QUOTES } from \"src/utils/constants\";\nimport { getRandomItem } from \"src/utils/utils\";\n\nconst DashboardHeader: React.FC = () => {\n  const [dailyQuote] = useState(getRandomItem(QUOTES) as Quote);\n  const [currTime, setCurrTime] = useState(new Date());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  });\n\n  return (\n    <Space\n      direction=\"vertical\"\n      align=\"center\"\n      style={{\n        backgroundImage: `url(${dailyQuote.background})`,\n      }}\n      className=\"w-full h-52 rounded-md bg-cover bg-center text-center flex-1 justify-end\"\n    >\n      <Col className=\"pb-4\">\n        <Typography.Title level={1} style={Styles.headerTime}>\n          {format(currTime, \"HH:mm\")}\n        </Typography.Title>\n        <Typography.Title level={5} style={Styles.headerDate}>\n          {format(currTime, \"eeee, MMMM d\")}\n        </Typography.Title>\n      </Col>\n      <Col>\n        <Typography.Title level={5} style={Styles.quote}>\n          {`${dailyQuote.quote} - ${dailyQuote.author}`}\n        </Typography.Title>\n      </Col>\n    </Space>\n  );\n};\n\nconst Styles = {\n  headerTime: {\n    color: \"white\",\n    marginBottom: 0,\n  },\n  headerDate: {\n    color: \"white\",\n    marginTop: 0,\n  },\n  quote: {\n    color: \"white\",\n  },\n};\n\nexport default DashboardHeader;\n","import { CalendarOutlined, TeamOutlined } from \"@ant-design/icons\";\nimport {\n  Avatar,\n  Button,\n  Col,\n  Divider,\n  Drawer,\n  Row,\n  Space,\n  Typography,\n} from \"antd\";\nimport { differenceInMinutes, format } from \"date-fns\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppDispatch } from \"src/redux\";\nimport { Call } from \"src/types/Call\";\nimport { genFullName } from \"src/utils/utils\";\nimport { openModal } from \"src/redux/modules/modalsSlice\";\n\ninterface Props {\n  selectedCall: Call | null;\n  onClose: () => void;\n}\n\nconst CallDetails: React.FC<Props> = ({ selectedCall, onClose }) => {\n  const dispatch = useAppDispatch();\n\n  const { t } = useTranslation(\"dashboard\");\n  const duration =\n    selectedCall &&\n    differenceInMinutes(\n      new Date(selectedCall.scheduledEnd),\n      new Date(selectedCall.scheduledStart)\n    );\n\n  return selectedCall ? (\n    <Drawer\n      title=\"Call Details\"\n      placement=\"right\"\n      closable={false}\n      onClose={onClose}\n      visible={selectedCall ? true : false}\n      getContainer={false}\n      style={{ position: \"absolute\" }}\n    >\n      <Space direction=\"vertical\" size=\"large\">\n        <Row>\n          <Space>\n            <Col>\n              <CalendarOutlined className=\"text-2xl\" />\n            </Col>\n            <Col className=\"text-sm\">\n              <div>\n                <Typography.Text>\n                  {format(\n                    new Date(selectedCall.scheduledStart),\n                    \"EEEE, MMMM d\"\n                  )}\n                </Typography.Text>\n              </div>\n              <div>\n                <Typography.Text type=\"secondary\">\n                  {format(\n                    new Date(selectedCall.scheduledStart),\n                    \"h:mm aaa OOO\"\n                  )}{\" \"}\n                  • {`${duration}mins`}\n                </Typography.Text>\n              </div>\n            </Col>\n          </Space>\n        </Row>\n        <Row>\n          <Space>\n            <Col>\n              <TeamOutlined className=\"text-2xl\" />\n            </Col>\n            <Col>\n              <Avatar src={selectedCall.userParticipants[0].profileImagePath} />\n            </Col>\n            <Col style={{ fontSize: 14 }}>\n              <Typography.Text type=\"secondary\">\n                {genFullName(selectedCall.userParticipants[0])}\n              </Typography.Text>\n            </Col>\n          </Space>\n        </Row>\n        <Row>\n          <Typography.Text type=\"secondary\">\n            {t(\"call.cancelDescription\")}\n          </Typography.Text>\n        </Row>\n        <Row>\n          <Button\n            className=\"rounded-sm\"\n            onClick={() =>\n              dispatch(\n                openModal({\n                  activeType: \"CANCEL_CALL_MODAL\",\n                  entity: selectedCall,\n                })\n              )\n            }\n          >\n            {t(\"call.cancel\")}\n          </Button>\n        </Row>\n        <Divider />\n        <Row>\n          <Typography.Link>{t(\"call.whatToExpect\")}</Typography.Link>\n        </Row>\n        <Row>\n          <Typography.Link>{t(\"call.privacyNotice\")}</Typography.Link>\n        </Row>\n      </Space>\n    </Drawer>\n  ) : null;\n};\n\nexport default CallDetails;\n","import Dashboard from \"./Dashboard\";\n\nexport default Dashboard;\n","import { Col, Row, Space } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Call } from \"src/types/Call\";\nimport CallsList from \"./CallsList\";\nimport ConnectionsList from \"./ConnectionsList\";\nimport DashboardHeader from \"./DashboardHeader\";\nimport CallDetails from \"./CallDetails\";\nimport PageLayout from \"src/components/Common/PageLayout\";\nimport { FAQResource } from \"src/types/UI\";\nimport { Contact } from \"src/types/User\";\n\ninterface Props {\n  calls: Call[];\n  contacts: Contact[];\n  openInfoModal: (resource: FAQResource) => void;\n}\nconst Dashboard: React.FC<Props> = ({ calls, contacts, openInfoModal }) => {\n  const [selectedCall, setSelectedCall] = useState<null | Call>(null);\n  return (\n    <PageLayout>\n      <Space direction=\"vertical\" size=\"large\" className=\"w-100 p-6 pt-9\">\n        <Row>\n          <Col span={24}>\n            <DashboardHeader />\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={16}>\n            <CallsList\n              calls={calls}\n              selectCall={(call: Call) => setSelectedCall(call)}\n              openInfoModal={openInfoModal}\n            />\n          </Col>\n          <Col span={8}>\n            <ConnectionsList calls={calls} contacts={contacts} />\n          </Col>\n        </Row>\n      </Space>\n      <CallDetails\n        selectedCall={selectedCall}\n        onClose={() => setSelectedCall(null)}\n      />\n    </PageLayout>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { fetchCalls } from \"src/redux/modules/call\";\nimport { selectAllContacts } from \"src/redux/selectors\";\nimport { push } from \"connected-react-router\";\nimport \"src/i18n/config\";\nimport Dashboard from \"src/components/Dashboard\";\nimport { FAQResource } from \"src/types/UI\";\nimport { openModal } from \"src/redux/modules/modalsSlice\";\nimport { useCalls } from \"src/hooks/useCalls\";\n\nconst mapDispatchToProps = { fetchCalls, push };\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst DashboardPage: React.FC<PropsFromRedux> = ({ fetchCalls }) => {\n  const dispatch = useAppDispatch();\n  const contacts = useAppSelector(selectAllContacts);\n  const calls = useCalls();\n\n  useEffect(() => {\n    (async () => await fetchCalls())();\n  }, [fetchCalls]);\n\n  return (\n    <Dashboard\n      calls={calls}\n      contacts={contacts}\n      openInfoModal={(resource: FAQResource) =>\n        dispatch(openModal({ activeType: \"RESOURCE_MODAL\", entity: resource }))\n      }\n    />\n  );\n};\n\nexport default connector(DashboardPage);\n","import { createSlice } from \"@reduxjs/toolkit\";\n\ninterface CommonSliceState {\n  fullScreen: boolean;\n}\n\nconst initialState: CommonSliceState = { fullScreen: false };\n\nexport const commonSlice = createSlice({\n  name: \"common\",\n  initialState,\n  reducers: {\n    enterFullScreen: (state) => {\n      state.fullScreen = true;\n    },\n    exitFullScreen: (state) => {\n      state.fullScreen = false;\n    },\n  },\n});\n\nexport const { enterFullScreen, exitFullScreen } = commonSlice.actions;\n","import { Space, Typography } from \"antd\";\nimport { format } from \"date-fns\";\nimport React from \"react\";\nimport { CallMessage } from \"src/types/Call\";\n\ninterface Props {\n  message: CallMessage;\n}\n\nconst MessageDisplay: React.FC<Props> = ({ message }) => {\n  const { type } = message.from;\n  const getDisplayName = () => {\n    switch (type) {\n      case \"inmate\":\n        return \"You\";\n      case \"doc\":\n        return \"DOC\";\n      case \"user\":\n        return \"Loved One\";\n    }\n  };\n  return (\n    <Space\n      direction=\"vertical\"\n      align={type === \"inmate\" ? \"end\" : \"start\"}\n      style={{ width: \"100%\" }}\n    >\n      <Space>\n        <Typography.Text strong>{getDisplayName()}</Typography.Text>\n        <Typography.Text type=\"secondary\">\n          {format(new Date(message.timestamp), \"HH:mm\")}\n        </Typography.Text>\n      </Space>\n      <Typography.Text>{message.content}</Typography.Text>\n    </Space>\n  );\n};\n\nexport default MessageDisplay;\n","export default __webpack_public_path__ + \"static/media/MessageReceived.d8858c69.mp3\";","import { Divider, Input, Layout, PageHeader, Space, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { Call, CallMessage, CallParticipant } from \"src/types/Call\";\nimport { WRAPPER_PADDING } from \"src/utils/constants\";\nimport MessageDisplay from \"src/components/Call/MessageDisplay\";\nimport { openNotificationWithIcon } from \"src/utils/utils\";\nimport RoomClient from \"src/pages/Call/RoomClient\";\nimport { useTranslation } from \"react-i18next\";\nimport MessageReceivedSound from \"src/assets/Sounds/MessageReceived.mp3\";\nimport useSound from \"use-sound\";\n\ninterface Props {\n  roomClient: RoomClient | undefined;\n  inmateId: number;\n  call: Call;\n}\n\nconst Chat: React.FC<Props> = ({ roomClient, inmateId, call }) => {\n  const { Sider } = Layout;\n  const { t } = useTranslation(\"call\");\n\n  const [chatCollapsed, setChatCollapsed] = useState(false);\n  const [draftMessage, setDraftMessage] = useState(\"\");\n  const [messages, setMessages] = useState<CallMessage[]>([]);\n  const [hasUnreadMessages, setHasUnreadMessages] = useState(false);\n\n  const [playMessageReceived] = useSound(MessageReceivedSound);\n\n  useEffect(() => {\n    if (roomClient) {\n      roomClient.socket.on(\n        \"textMessage\",\n        async ({\n          from,\n          contents,\n        }: {\n          from: CallParticipant;\n          contents: string;\n        }) => {\n          setHasUnreadMessages(true);\n          if (from.type === \"doc\") {\n            openNotificationWithIcon(t(\"doc.warning\"), contents, \"warning\");\n          }\n          setMessages((messages) => [\n            ...messages,\n            {\n              content: contents,\n              from,\n              timestamp: new Date().toLocaleDateString(),\n            },\n          ]);\n        }\n      );\n    }\n  }, [roomClient, t]);\n\n  useEffect(() => {\n    if (chatCollapsed && hasUnreadMessages) playMessageReceived();\n    if (!chatCollapsed) setHasUnreadMessages(false);\n  }, [hasUnreadMessages, chatCollapsed, playMessageReceived]);\n\n  const onSendMessage = async () => {\n    if (!roomClient) return;\n    setDraftMessage(\"\");\n    setMessages([\n      ...messages,\n      {\n        content: draftMessage,\n        from: {\n          type: \"inmate\",\n          id: inmateId,\n        },\n        timestamp: new Date().toLocaleDateString(),\n      },\n    ]);\n    //  TODO: update status of call message depending on whether promise fulfills or not\n    // need to first add status (success, status, pending)\n    // https://github.com/Ameelio/pathways-client/issues/32\n    roomClient\n      .request(\"textMessage\", {\n        callId: call.id,\n        contents: draftMessage,\n      })\n      .then(\n        () => console.log(\"ssucces\"),\n        (rejection: string) => console.log(rejection)\n      );\n  };\n\n  return (\n    <Sider\n      theme=\"light\"\n      style={{ height: \"100vh\", maxHeight: \"100vh\" }}\n      width={300}\n      collapsible\n      collapsed={chatCollapsed}\n      onCollapse={() => setChatCollapsed(true)}\n    >\n      {!chatCollapsed && <PageHeader title={t(\"chat.title\")} />}\n\n      {!chatCollapsed && (\n        <div className=\"flex flex-col h-full\" style={WRAPPER_PADDING}>\n          <Space direction=\"vertical\" style={{ overflowY: \"scroll\" }}>\n            <Typography.Text mark>{t(\"chat.monitorWarning\")}</Typography.Text>\n            {messages.map((message) => (\n              <MessageDisplay message={message} />\n            ))}\n          </Space>\n          <div className=\"mt-auto mb-8 flex-shrink-0\">\n            <Divider />\n            <Input.TextArea\n              value={draftMessage}\n              rows={2}\n              onChange={(e) => setDraftMessage(e.target.value)}\n              onPressEnter={(_e) => onSendMessage()}\n              onSubmit={(_e) => onSendMessage()}\n              placeholder={t(\"chat.placeholder\")}\n              autoFocus\n              bordered={false}\n            />\n          </div>\n        </div>\n      )}\n    </Sider>\n  );\n};\n\nexport default Chat;\n","import IconButton from \"./IconButton\";\n\nexport default IconButton;\n","import { Button, Space, Typography } from \"antd\";\nimport { ButtonShape, ButtonType } from \"antd/lib/button\";\nimport { SizeType } from \"antd/lib/config-provider/SizeContext\";\nimport React from \"react\";\n\ninterface Props {\n  icon: React.ReactNode;\n  label: string;\n  onClick: () => void;\n  type?: ButtonType;\n  danger?: boolean;\n  block?: boolean;\n  size?: SizeType;\n  shape?: ButtonShape;\n  style?: React.CSSProperties;\n}\n\nconst IconButton = ({\n  icon,\n  label,\n  onClick,\n  type,\n  danger,\n  block,\n  size,\n  shape,\n  style,\n}: Props) => {\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Button\n        icon={icon}\n        onClick={onClick}\n        type={type}\n        block={block}\n        danger={danger}\n        size={size || \"large\"}\n        shape={shape || \"round\"}\n        style={style}\n      ></Button>\n      <Typography.Text type=\"secondary\">{label}</Typography.Text>\n    </Space>\n  );\n};\n\nexport default IconButton;\n","import {\n  AudioMutedOutlined,\n  AudioOutlined,\n  ClockCircleOutlined,\n  MessageOutlined,\n  VideoCameraOutlined,\n} from \"@ant-design/icons\";\nimport { Badge, Button, Col, Row, Space, Spin } from \"antd\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport IconButton from \"../Common/Buttons/IconButton\";\n\ninterface Props {\n  loading: boolean;\n  audioOn: boolean;\n  toggleAudio: () => void;\n  videoOn: boolean;\n  toggleVideo: () => void;\n  chatCollapsed: boolean;\n  toggleChat: () => void;\n  timerOn: boolean;\n  toggleTimer: () => void;\n  terminateCall: () => void;\n  hasUnreadMessages: boolean;\n}\n\nconst VideoOverlay: React.FC<Props> = ({\n  loading,\n  audioOn,\n  toggleAudio,\n  videoOn,\n  toggleVideo,\n  chatCollapsed,\n  toggleChat,\n  terminateCall,\n  timerOn,\n  toggleTimer,\n  hasUnreadMessages,\n}) => {\n  const { t } = useTranslation(\"call\");\n  return !loading ? (\n    <Row className=\"absolute bottom-0 bg-white w-full p-4\" align=\"middle\">\n      <Col span={8} offset={8}>\n        <Space size=\"large\">\n          <IconButton\n            icon={\n              audioOn ? (\n                <AudioOutlined style={Style.iconButton} />\n              ) : (\n                <AudioMutedOutlined style={Style.iconButton} />\n              )\n            }\n            danger={!audioOn}\n            type={audioOn ? \"default\" : \"primary\"}\n            onClick={toggleAudio}\n            label={`${t(\"videoOverlay.mic\")}${\" \"}${\n              audioOn ? t(\"videoOverlay.on\") : t(\"videoOverlay.off\")\n            }`}\n          />\n          <IconButton\n            shape=\"round\"\n            danger={!videoOn}\n            icon={\n              videoOn ? (\n                <VideoCameraOutlined style={Style.iconButton} />\n              ) : (\n                <VideoCameraOutlined style={Style.iconButton} />\n              )\n            }\n            size=\"large\"\n            type={videoOn ? \"default\" : \"primary\"}\n            onClick={toggleVideo}\n            label={`${t(\"videoOverlay.video\")} ${\n              videoOn ? t(\"videoOverlay.on\") : t(\"videoOverlay.off\")\n            }`}\n          />\n          <IconButton\n            shape=\"round\"\n            style={chatCollapsed ? Style.inactive : Style.active}\n            icon={\n              chatCollapsed ? (\n                <Badge dot={hasUnreadMessages}>\n                  <MessageOutlined style={Style.iconButton} />\n                </Badge>\n              ) : (\n                <MessageOutlined style={Style.iconButton} />\n              )\n            }\n            size=\"large\"\n            onClick={toggleChat}\n            label={t(\"videoOverlay.chat\")}\n          />\n          <IconButton\n            shape=\"round\"\n            style={!timerOn ? Style.inactive : Style.active}\n            icon={<ClockCircleOutlined style={Style.iconButton} />}\n            size=\"large\"\n            onClick={toggleTimer}\n            label={`${\n              timerOn ? t(\"videoOverlay.showTime\") : t(\"videoOverlay.hideTime\")\n            }`}\n          />\n        </Space>\n      </Col>\n      <Col span={2} offset={6}>\n        <Button\n          danger\n          size=\"large\"\n          onClick={() => terminateCall()}\n          className=\"align-self-end\"\n        >\n          {t(\"videoOverlay.leaveCall\")}\n        </Button>\n      </Col>\n    </Row>\n  ) : (\n    <Row className=\"absolute bottom-0 bg-white w-full p-4 flex\" align=\"middle\">\n      <Col className=\"m-auto\">\n        <Spin />\n      </Col>\n    </Row>\n  );\n};\n\nconst Style = {\n  iconButton: {\n    fontSize: 24,\n  },\n  active: {\n    backgroundColor: \"#f5f5f5\",\n  },\n  inactive: {\n    backgroundColor: \"#fff\",\n  },\n};\nexport default VideoOverlay;\n","import { Avatar } from \"antd\";\nimport React from \"react\";\n\ninterface Props {\n  initials: string;\n}\n\nconst VideoMePlaceholder: React.FC<Props> = ({ initials }) => {\n  return (\n    <div style={Styles.background}>\n      <Avatar size={64} style={Styles.avatar}>\n        {initials}\n      </Avatar>\n    </div>\n  );\n};\nconst Styles = {\n  background: {\n    backgroundColor: \"black\",\n    position: \"absolute\",\n    top: 16,\n    left: 16,\n    width: \"300px\",\n    height: \"200px\",\n    zIndex: 9999,\n    display: \"flex\",\n  } as React.CSSProperties,\n  avatar: {\n    color: \"#f56a00\",\n    backgroundColor: \"#fde3cf\",\n    margin: \"auto\",\n  },\n};\n\nexport default VideoMePlaceholder;\n","import { Button, Card, Space, Spin, Typography } from \"antd\";\nimport { differenceInMinutes, format } from \"date-fns\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Call } from \"src/types/Call\";\nimport { Icebreaker } from \"src/types/Common\";\nimport { Language } from \"src/types/Session\";\nimport { FAQResource } from \"src/types/UI\";\nimport { QUESTIONS } from \"src/utils/constants\";\nimport { getRandomItem } from \"src/utils/utils\";\n\ninterface Props {\n  title: string;\n  call: Call;\n  navigateBack: () => void;\n  openInfoModal: (resource: FAQResource) => void;\n  openTestConnectionModal: () => void;\n}\n\nconst getTranslatedDailyQuestion = (\n  language: Language,\n  question: Icebreaker\n): string => {\n  switch (language) {\n    case \"en\":\n      return question.en;\n    case \"es\":\n      return question.es;\n    default:\n      return question.en;\n  }\n};\n\nexport const WaitingRoomCard = ({\n  title,\n  call,\n  navigateBack,\n  openInfoModal,\n  openTestConnectionModal,\n}: Props) => {\n  const { t, i18n } = useTranslation(\"call\");\n  const [icebreaker] = useState(getRandomItem(QUESTIONS) as Icebreaker);\n\n  return (\n    <Card className=\"bg-black\tbg-opacity-80 text-white w-6/12\t h-6/12 m-auto\">\n      <Space direction=\"vertical\" className=\"text-white\" size=\"large\">\n        <Space>\n          <Typography.Text strong className=\"text-white text-xl\t\">\n            {title}\n          </Typography.Text>\n          <Spin />\n        </Space>\n\n        <Typography.Text className=\"text-white\">\n          {format(new Date(call.scheduledStart), \"HH:mm\")} •{\" \"}\n          {differenceInMinutes(\n            new Date(call.scheduledEnd),\n            new Date(call.scheduledStart)\n          )}\n          mins\n        </Typography.Text>\n        <Typography.Text className=\"text-white\">\n          {t(\"waitingRoom.questionOfDay\")}:{\" \"}\n          {getTranslatedDailyQuestion(i18n.language as Language, icebreaker)}\n        </Typography.Text>\n        <Typography.Link\n          onClick={() =>\n            openInfoModal({\n              title: t(\"waitingRoom.whenWillCallConnect\"),\n              body: \"Soon.\",\n            })\n          }\n        >\n          {t(\"waitingRoom.whenWillCallConnect\")}\n        </Typography.Link>\n        <Space>\n          <Button type=\"primary\" onClick={openTestConnectionModal}>\n            {t(\"waitingRoom.checkConnection\")}\n          </Button>\n          <Button onClick={navigateBack}>\n            {t(\"waitingRoom.leaveWaitingRoom\")}\n          </Button>\n        </Space>\n      </Space>\n    </Card>\n  );\n};\n","import { Typography } from \"antd\";\nimport React from \"react\";\nimport Countdown from \"react-countdown\";\nimport { mapCountdownTimeToStyle } from \"src/utils\";\n\ninterface Props {\n  endTime: Date;\n  style?: React.CSSProperties;\n  className?: string;\n}\n// Renderer callback with condition\nconst renderer = ({\n  formatted,\n  minutes,\n  seconds,\n  completed,\n}: {\n  formatted: { minutes: string; seconds: string };\n  minutes: number;\n  seconds: number;\n  completed: boolean;\n}) => {\n  const style = mapCountdownTimeToStyle(minutes, seconds);\n\n  return completed ? (\n    <div />\n  ) : (\n    <Typography.Text className={`${style} px-4 py-2 rounded-md`}>\n      {formatted.minutes}:{formatted.seconds}\n    </Typography.Text>\n  );\n};\n\nexport const Timer = ({ endTime, style, className }: Props) => {\n  return (\n    <div style={style} className={className}>\n      <Countdown date={endTime} renderer={renderer} zeroPadTime={2} />{\" \"}\n    </div>\n  );\n};\n","import { VideoHTMLAttributes, useEffect, useRef } from \"react\";\n\ntype PropsType = VideoHTMLAttributes<HTMLVideoElement> & {\n  srcObject: MediaStream;\n};\n\nexport default function Video({ srcObject, ...props }: PropsType) {\n  const refVideo = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    if (!refVideo.current) return;\n    refVideo.current.srcObject = srcObject;\n  }, [srcObject]);\n\n  return <video ref={refVideo} {...props} />;\n}\n","import { AudioHTMLAttributes, useEffect, useRef } from \"react\";\n\ntype PropsType = AudioHTMLAttributes<HTMLAudioElement> & {\n  srcObject: MediaStream;\n};\n\nexport default function Video({ srcObject, ...props }: PropsType) {\n  const refAudio = useRef<HTMLAudioElement>(null);\n\n  useEffect(() => {\n    if (!refAudio.current) return;\n    refAudio.current.srcObject = srcObject;\n  }, [srcObject]);\n\n  return <audio ref={refAudio} {...props} />;\n}\n","export default __webpack_public_path__ + \"static/media/LeaveCall.3b29d342.wav\";","import Call from \"./Call\";\n\nexport default Call;\n","import React, { useEffect, useState } from \"react\";\nimport RoomClient from \"src/pages/Call/RoomClient\";\nimport { Typography, Layout, Avatar } from \"antd\";\nimport { Call, CallParticipant, ControlledStream } from \"src/types/Call\";\nimport { AudioMutedOutlined } from \"@ant-design/icons\";\nimport {\n  genFullName,\n  getInitials,\n  openNotificationWithIcon,\n  showToast,\n} from \"src/utils/utils\";\nimport { useTranslation } from \"react-i18next\";\nimport \"src/i18n/config\";\nimport Chat from \"src/components/Call/Chat\";\nimport VideoOverlay from \"src/components/Call/VideoOverlay\";\nimport VideoMePlaceholder from \"src/components/Call/VideoMePlaceholder\";\nimport { WaitingRoomCard } from \"./WaitingRoomCard\";\nimport { FAQResource } from \"src/types/UI\";\nimport { Timer } from \"./Timer\";\nimport Video from \"./Video\";\nimport Audio from \"./Audio\";\nimport { User } from \"src/types/User\";\nimport LeaveCallSound from \"src/assets/Sounds/LeaveCall.wav\";\nimport JoinedCallSound from \"src/assets/Sounds/EnterCall.wav\";\nimport useSound from \"use-sound\";\n\ndeclare global {\n  interface Window {\n    Debug: any;\n  }\n}\n\ninterface Props {\n  call: Call | undefined;\n  user: User;\n  remoteAudios: Record<number, MediaStream>;\n  remoteVideos: Record<number, MediaStream>;\n  roomClient: RoomClient;\n  localVideo?: ControlledStream;\n  localAudio?: ControlledStream;\n  push: (path: string) => void;\n  openInfoModal: (resource: FAQResource) => void;\n  openTestConnectionModal: () => void;\n}\n\nconst CallBase: React.FC<Props> = React.memo(\n  ({\n    call,\n    user,\n    roomClient,\n    localVideo,\n    localAudio,\n    remoteAudios,\n    remoteVideos,\n    push,\n    openInfoModal,\n    openTestConnectionModal,\n  }) => {\n    const { t } = useTranslation(\"call\");\n\n    const [showOverlay, setShowOverlay] = useState(true);\n    const [participantHasJoined, setParticipantsHasJoined] = useState(false);\n    const [chatCollapsed, setChatCollapsed] = useState(true);\n    const [hasUnreadMessages, setHasUnreadMessages] = useState(false);\n    const [peerAudioOn, setPeerAudioOn] = useState(true);\n    const [peerVideoOn, setPeerVideoOn] = useState(true);\n    const [timerOn, setTimerOn] = useState(false);\n\n    const [playJoinCall] = useSound(JoinedCallSound);\n    const [playLeaveCall] = useSound(LeaveCallSound);\n\n    useEffect(() => {\n      Object.keys(remoteVideos).length > 0 ||\n      Object.keys(remoteAudios).length > 0\n        ? setParticipantsHasJoined(true)\n        : setParticipantsHasJoined(false);\n    }, [remoteVideos, remoteAudios]);\n\n    // TODO fix this\n    useEffect(() => {\n      if (roomClient) {\n        roomClient.socket.on(\n          \"producerUpdate\",\n          async ({\n            from,\n            contents,\n          }: {\n            from: CallParticipant;\n            contents: {\n              producerId: string;\n              active: boolean;\n              type: \"audio\" | \"video\";\n            };\n          }) => {\n            if (from.type !== \"user\") return;\n            contents.type === \"audio\"\n              ? setPeerAudioOn(contents.active)\n              : setPeerVideoOn(contents.active);\n          }\n        );\n      }\n    }, [roomClient, t]);\n\n    useEffect(() => {\n      if (!chatCollapsed) setHasUnreadMessages(false);\n    }, [hasUnreadMessages, chatCollapsed]);\n\n    useEffect(() => {\n      if (call && participantHasJoined)\n        showToast(\n          \"peerVideo\",\n          `${call.userParticipants[0].firstName} ${\n            peerVideoOn ? t(\"peer.videoOn\") : t(\"peer.videoOff\")\n          }`,\n          \"info\"\n        );\n    }, [peerVideoOn, call, participantHasJoined, t]);\n\n    useEffect(() => {\n      if (call && participantHasJoined)\n        showToast(\n          \"peerAudio\",\n          `${call.userParticipants[0].firstName} ${\n            peerAudioOn ? t(\"peer.unmuted\") : t(\"peer.muted\")\n          }`,\n          \"info\"\n        );\n    }, [peerAudioOn, call, participantHasJoined, t]);\n\n    useEffect(() => {\n      if (participantHasJoined && call) {\n        playJoinCall();\n        openNotificationWithIcon(\n          `${call.userParticipants[0].firstName} ${t(\"peer.joinedCallTitle\")}.`,\n          t(\"peer.joinedCallBody\"),\n          \"info\"\n        );\n      }\n    }, [participantHasJoined, call, playJoinCall, t]);\n\n    if (!call) return <div />;\n\n    const getMessage = (): string => {\n      if (!roomClient) {\n        return t(\"waitingRoom.initialization\");\n      } else if (!participantHasJoined) {\n        return `${t(\"waitingRoom.waitingForPrefix\")} ${\n          call.userParticipants[0].firstName\n        } ${t(\"waitingRoom.waitingForSuffix\")}...`;\n      }\n      return t(\"waitingRoom.loading\");\n    };\n\n    let timeout: any;\n    const onMouseMove = () => {\n      setShowOverlay(true);\n      (() => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => setShowOverlay(false), 5000);\n      })();\n    };\n\n    // TODO once we support calls with multiple people at once, we can expand on this implementation\n    const keys = Object.keys(remoteVideos).map((key) => parseInt(key));\n\n    return (\n      <Layout>\n        <div\n          className=\"ant-layout-content w-screen h-screen flex bg-gray-800\"\n          onMouseMove={() => onMouseMove()}\n          onMouseOver={() => onMouseMove()}\n        >\n          {keys.map((key: number) => (\n            <div className=\"w-full h-full\">\n              <Video\n                srcObject={remoteVideos[key]}\n                className=\"w-full h-full\"\n                autoPlay={true}\n              />\n              <Audio srcObject={remoteAudios[key]} autoPlay={true} />\n            </div>\n          ))}\n          {timerOn && (\n            <Timer\n              endTime={call.scheduledEnd}\n              className=\"absolute right-4 top-4 bg-opacity-80\"\n            />\n          )}\n          {!peerVideoOn && (\n            <Avatar size={128} className=\"bg-blue-500\tm-auto text-white\t\">\n              {getInitials(genFullName(call.userParticipants[0])).toUpperCase()}\n            </Avatar>\n          )}\n          {!peerAudioOn && (\n            <div className=\"absolute bottom-20 left-4 bg-black bg-opacity-50 py-1 px-2\">\n              <AudioMutedOutlined className=\"text-red-600 text-xs\" />\n              <Typography.Text className=\"text-white text-base\">\n                {\" \"}\n                {genFullName(call.userParticipants[0])}\n              </Typography.Text>\n            </div>\n          )}\n          {localVideo && localVideo.stream && !localVideo.paused ? (\n            <Video\n              srcObject={localVideo.stream}\n              className=\"w-2/12 absolute top-4 left-4 flex\"\n              autoPlay={true}\n            />\n          ) : (\n            <VideoMePlaceholder initials={getInitials(genFullName(user))} />\n          )}\n          {!participantHasJoined && (\n            <WaitingRoomCard\n              call={call}\n              title={getMessage()}\n              navigateBack={() => push(\"/\")}\n              openInfoModal={openInfoModal}\n              openTestConnectionModal={openTestConnectionModal}\n            />\n          )}\n          {showOverlay && (\n            <VideoOverlay\n              loading={!(localAudio && localVideo)}\n              audioOn={!!!localAudio?.paused}\n              toggleAudio={() => {\n                if (!roomClient || !localAudio) return;\n                showToast(\n                  \"microphone\",\n                  `You ${\n                    localAudio.paused ? \"unmuted\" : \"muted\"\n                  } your microphone`,\n                  \"info\"\n                );\n                localAudio.paused\n                  ? roomClient.resumeAudio()\n                  : roomClient.pauseAudio();\n              }}\n              videoOn={!!!localVideo?.paused}\n              toggleVideo={() => {\n                if (!roomClient || !localVideo) return;\n                showToast(\n                  \"webcam\",\n                  `You ${\n                    localVideo.paused ? \"turned on\" : \"turned off\"\n                  } your webcam`,\n                  \"info\"\n                );\n                localVideo.paused\n                  ? roomClient.resumeVideo()\n                  : roomClient.pauseVideo();\n              }}\n              chatCollapsed={chatCollapsed}\n              toggleChat={() => {\n                if (chatCollapsed) setHasUnreadMessages(false);\n                setChatCollapsed((collapsed) => !collapsed);\n              }}\n              timerOn={timerOn}\n              toggleTimer={() => setTimerOn((timerOn) => !timerOn)}\n              terminateCall={() => {\n                playLeaveCall();\n                push(`/feedback/${call?.id}`);\n              }}\n              hasUnreadMessages={hasUnreadMessages}\n            />\n          )}\n        </div>\n        {!chatCollapsed && (\n          <Chat roomClient={roomClient} inmateId={user.id} call={call} />\n        )}\n      </Layout>\n    );\n  }\n);\nexport default CallBase;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"src/redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { push } from \"connected-react-router\";\nimport \"src/i18n/config\";\nimport {\n  enterFullScreen,\n  exitFullScreen,\n} from \"src/components/Common/commonSlice\";\nimport Call from \"src/components/Call\";\nimport { openModal } from \"src/redux/modules/modalsSlice\";\nimport { FAQResource } from \"src/types/UI\";\nimport {\n  initializeProducers,\n  initializeRemotes,\n  initializeVisit,\n} from \"src/redux/modules/call\";\nimport RoomClient from \"./RoomClient\";\nimport { ControlledStream } from \"src/types/Call\";\nimport { useCallById } from \"src/hooks/useCalls\";\n\ntype TParams = { id: string };\n\nconst CallBase: React.FC<RouteComponentProps<TParams>> = ({ match }) => {\n  const dispatch = useAppDispatch();\n  const stableDispatch = useCallback(dispatch, []);\n\n  const call = useCallById(parseInt(match.params.id));\n  const { authInfo, user } = useAppSelector((state) => state.session);\n\n  const [rc, setRc] = useState<RoomClient>();\n  const [localAudio, setLocalAudio] = useState<ControlledStream>();\n  const [localVideo, setLocalVideo] = useState<ControlledStream>();\n  const [remoteAudios, setRemoteAudios] = useState<Record<number, MediaStream>>(\n    {}\n  );\n  const [remoteVideos, setRemoteVideos] = useState<Record<number, MediaStream>>(\n    {}\n  );\n\n  const [hasInit, setHasInit] = useState(false);\n\n  useEffect(() => {\n    stableDispatch(enterFullScreen());\n    return () => {\n      stableDispatch(exitFullScreen());\n    };\n  }, [stableDispatch]);\n\n  useEffect(() => {\n    if (!call || hasInit || !call.videoHandler) return;\n    dispatch(\n      initializeVisit({\n        callId: call.id,\n        setRc,\n        authInfo,\n        videoHandler: call.videoHandler,\n      })\n    );\n  }, [call, hasInit, authInfo]);\n\n  useEffect(() => {\n    if (!rc || hasInit) return;\n    stableDispatch(initializeRemotes({ rc, setRemoteAudios, setRemoteVideos }));\n    stableDispatch(\n      initializeProducers({ rc, setLocalAudio, setLocalVideo, setRc })\n    );\n    setHasInit(true);\n  }, [hasInit, stableDispatch, rc]);\n\n  if (!call) return <div />;\n\n  if (!rc || !hasInit) return <div />;\n\n  return (\n    <Call\n      call={call}\n      user={user}\n      push={(path: string) => dispatch(push(path))}\n      openInfoModal={(resource: FAQResource) =>\n        dispatch(openModal({ activeType: \"RESOURCE_MODAL\", entity: resource }))\n      }\n      openTestConnectionModal={() =>\n        dispatch(\n          openModal({ activeType: \"TEST_CONNECTION_MODAL\", entity: null })\n        )\n      }\n      roomClient={rc}\n      localAudio={localAudio}\n      localVideo={localVideo}\n      remoteAudios={remoteAudios}\n      remoteVideos={remoteVideos}\n    />\n  );\n};\n\nexport default CallBase;\n","import React, { ReactElement, useEffect } from \"react\";\nimport { Layout, Rate, Button, Space, Typography, Card } from \"antd\";\nimport {\n  HeartOutlined,\n  // FrownOutlined,\n  // SmileOutlined,\n  // MehOutlined,\n} from \"@ant-design/icons\";\nimport {\n  enterFullScreen,\n  exitFullScreen,\n} from \"src/components/Common/commonSlice\";\nimport { useAppDispatch } from \"src/redux\";\n\nconst desc = [\"terrible\", \"bad\", \"normal\", \"good\", \"wonderful\"];\n// const customIcons = {\n//   1: <FrownOutlined style={{ fontSize: 36 }} />,\n//   2: <FrownOutlined style={{ fontSize: 36 }} />,\n//   3: <MehOutlined style={{ fontSize: 36 }} />,\n//   4: <SmileOutlined style={{ fontSize: 36 }} />,\n//   5: <SmileOutlined style={{ fontSize: 36 }} />,\n// };\n\nfunction CallFeedbackBase(): ReactElement {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(enterFullScreen());\n\n    return () => {\n      dispatch(exitFullScreen());\n    };\n  }, [dispatch]);\n\n  return (\n    <Layout.Content\n      style={{\n        backgroundColor: \"white\",\n        height: \"100vh\",\n        width: \"100vw\",\n        display: \"flex\",\n      }}\n    >\n      <Space\n        direction=\"vertical\"\n        align=\"center\"\n        style={{ margin: \"auto\" }}\n        size=\"large\"\n      >\n        <Typography.Title level={2}>You left the meeting.</Typography.Title>\n        <Space>\n          <Button size=\"large\">Rejoin</Button>\n          <Button type=\"primary\" size=\"large\">\n            Return home\n          </Button>\n        </Space>\n        <Card title=\"How was the audio and video?\">\n          <Rate\n            character={<HeartOutlined style={{ fontSize: 36 }} />}\n            tooltips={desc}\n          />\n        </Card>\n      </Space>\n    </Layout.Content>\n  );\n}\n\nexport default CallFeedbackBase;\n","import { Icebreaker, Quote, Route } from \"src/types/Common\";\nimport ProfilePage from \"src/pages/Profile\";\nimport CallsPage from \"src/pages/Calls\";\nimport SettingsPage from \"src/pages/Settings\";\nimport DashboardPage from \"src/pages/Dashboard\";\nimport CallPage from \"src/pages/Call\";\nimport CallFeedbackPage from \"src/pages/CallFeedback\";\nimport { Language } from \"src/types/Session\";\n\nexport const UNAUTHENTICATED_USER_ID = -1;\n\nexport const AVATAR_LARGE = 135;\n\nexport const ROUTES: Route[] = [\n  { path: \"/calls\", component: CallsPage, label: \"Calls\" },\n  { path: \"/settings\", component: SettingsPage, label: \"Settings\" },\n  { path: \"/profile/:id\", component: ProfilePage, label: \"Profile\" },\n  { path: \"/call/:id\", component: CallPage, label: \"Call\" },\n  { path: \"/feedback/:id\", component: CallFeedbackPage, label: \"Feedback\" },\n  { path: \"/\", component: DashboardPage, label: \"Dash\" },\n];\n\nexport const TOKEN_KEY = \"apiToken\";\n\nexport const WRAPPER_PADDING = { padding: 24, paddingTop: 0 };\n\nexport const QUOTES: Quote[] = [\n  {\n    author: \"Mary Ann Evans\",\n    quote: \"It is never too late to be what you might have been.\",\n    description: \"\",\n    background:\n      \"https://images.unsplash.com/photo-1536257104079-aa99c6460a5a?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\",\n  },\n  {\n    author: \"Walt Disney\",\n    quote:\n      \"All our dreams can come true, if we have the courage to pursue them.\",\n    description: \"\",\n    background:\n      \"https://images.unsplash.com/photo-1508556497405-ed7dcd94acfc?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\",\n  },\n  {\n    author: \"Mark Twain\",\n    quote: \"The secret of getting ahead is getting started\",\n    description: \"\",\n    background:\n      \"https://images.unsplash.com/photo-1532971077387-7c6568101df5?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\",\n  },\n  {\n    author: \"Babe Ruth\",\n    quote: \"It’s hard to beat a person who never gives up.\",\n    description: \"\",\n    background:\n      \"https://images.unsplash.com/photo-1564521456797-9f176245daa9?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1951&q=80\",\n  },\n];\n\nexport const LANGUAGES: Record<Language, string> = {\n  en: \"English\",\n  es: \"Español\",\n};\n\nexport const QUESTIONS: Icebreaker[] = [\n  {\n    en: \"If you had your own intro theme song, which song would it be and why?\",\n    es: \"If you had your own intro theme song, which song would it be and why?\",\n  },\n];\n\nexport const WAITING_ROOM_BUFFER_MIN = 5;\n","import { UNAUTHENTICATED_USER_ID } from \"src/utils/constants\";\nimport { User } from \"src/types/User\";\nimport { Language } from \"src/types/Session\";\n\ninterface AuthInfo {\n  id: number;\n  type: \"inmate\";\n  token: string;\n}\n\ninterface SessionState {\n  isLoggedIn: boolean;\n  authInfo: AuthInfo;\n  user: User;\n  language: Language;\n}\n\n// Constants & Shapes\nconst SET_SESSION = \"user/SET_SESSION\";\nconst LOGOUT = \"user/LOGOUT\";\n\ninterface SetSessionAction {\n  type: typeof SET_SESSION;\n  payload: SessionState;\n}\ninterface LogoutAction {\n  type: typeof LOGOUT;\n}\n\ntype UserActionTypes = LogoutAction | SetSessionAction;\n\nexport const logout = (): UserActionTypes => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const setSession = (userState: SessionState): UserActionTypes => {\n  return {\n    type: SET_SESSION,\n    payload: userState,\n  };\n};\n\n// Reducer\nconst initialState: SessionState = {\n  authInfo: { id: UNAUTHENTICATED_USER_ID, type: \"inmate\", token: \"\" },\n  user: {\n    id: UNAUTHENTICATED_USER_ID,\n    firstName: \"\",\n    lastName: \"\",\n    location: \"\",\n    dateOfBirth: \"\",\n    inmateIdentification: \"\",\n    quota: 0,\n    race: \"\",\n  },\n  isLoggedIn: false,\n  language: \"en\",\n};\n\nexport function sessionReducer(\n  state = initialState,\n  action: UserActionTypes\n): SessionState {\n  switch (action.type) {\n    case SET_SESSION:\n      return action.payload;\n    case LOGOUT:\n      //   sessionStorage.clear();\n      return {\n        ...state,\n        authInfo: { id: UNAUTHENTICATED_USER_ID, type: \"inmate\", token: \"\" },\n        user: {\n          id: UNAUTHENTICATED_USER_ID,\n          firstName: \"\",\n          lastName: \"\",\n          location: \"\",\n          dateOfBirth: \"\",\n          inmateIdentification: \"\",\n          quota: 0,\n          race: \"\",\n        },\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { Connection } from \"src/types/Connection\";\nimport { fetchAuthenticated } from \"src/api/Common\";\n\nexport const fetchConnections = createAsyncThunk(\n  \"connections/fetchAll\",\n  async () => {\n    const body = await fetchAuthenticated(`connections`);\n    const connections = ((body.data as Record<string, unknown>)\n      .connections as Connection[]).map((inmate) => camelcaseKeys(inmate));\n\n    return connections;\n  }\n);\n\nexport const connectionAdapter = createEntityAdapter<Connection>();\n\nexport const connectionSlice = createSlice({\n  name: \"connection\",\n  initialState: connectionAdapter.getInitialState(),\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchConnections.fulfilled, (state, action) => {\n      connectionAdapter.setAll(state, action.payload);\n    });\n  },\n});\n\nexport const connectionActions = connectionSlice.actions;\n","import { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport { combineReducers } from \"redux\";\nimport { History, createBrowserHistory } from \"history\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { sessionReducer } from \"./modules/session\";\nimport { callSlice } from \"./modules/call\";\nimport { connectionSlice } from \"./modules/connection\";\nimport { modalsSlice } from \"src/redux/modules/modalsSlice\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { commonSlice } from \"src/components/Common/commonSlice\";\nimport { contactsSlice } from \"./modules/contactsSlice\";\n\nexport const history = createBrowserHistory();\n\nexport const createRootReducer = (history: History) =>\n  combineReducers({\n    common: commonSlice.reducer,\n    session: sessionReducer,\n    calls: callSlice.reducer,\n    contacts: contactsSlice.reducer,\n    modals: modalsSlice.reducer,\n    connections: connectionSlice.reducer,\n    router: connectRouter(history),\n  });\nexport const rootReducer = createRootReducer(history);\n\nexport const Store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(routerMiddleware(history)),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppDispatch = typeof Store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>(); // Export a hook that can be reused to resolve types\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router\";\n\nexport interface ProtectedRouteProps extends RouteProps {\n  isAuthenticated: boolean;\n  authenticationPath: string;\n}\n\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = (props) => {\n  let redirectPath = \"\";\n  if (!props.isAuthenticated) {\n    redirectPath = props.authenticationPath;\n  }\n\n  if (redirectPath) {\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />;\n    return <Route {...props} component={renderComponent} render={undefined} />;\n  } else {\n    return <Route {...props} />;\n  }\n};\n\nexport default ProtectedRoute;\n","import { API_URL, fetchTimeout } from \"./Common\";\nimport { setSession } from \"src/redux/modules/session\";\nimport { Store } from \"src/redux\";\nimport { User } from \"src/types/User\";\nimport { Language } from \"src/types/Session\";\n\nasync function initializeSession(token: string, data: any, language: Language) {\n  const user: User = {\n    id: data.id,\n    firstName: data.firstName,\n    lastName: data.lastName,\n    dateOfBirth: data.dateOfBirth,\n    profileImagePath: data.profileImagePath,\n    inmateIdentification: data.inmateIdentification,\n    quota: data.quota,\n    location: data.location,\n    race: data.race,\n  };\n  Store.dispatch(\n    setSession({\n      user,\n      authInfo: { id: data.id, type: \"inmate\", token },\n      isLoggedIn: true,\n      language,\n    })\n  );\n}\n\nexport async function loginWithCredentials(cred: {\n  inmateNumber: string;\n  pin: string;\n  facilityId: number;\n  language: Language;\n}): Promise<void> {\n  const response = await fetchTimeout(`${API_URL}auth/member/login/`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify({\n      facilityId: cred.facilityId,\n      inmateIdentification: cred.inmateNumber,\n      pin: cred.pin,\n    }),\n  });\n  const body = await response.json();\n  console.log(response);\n  console.log(response.headers);\n  const cookies = response.headers.get(\"cookie\") || \"\";\n  console.log(cookies);\n  const re = /(?<=connect.sid=)([^\\s;]+)/gm;\n  const found = cookies.match(re);\n  console.log(found);\n\n  if (!found || found.length !== 1) throw new Error(\"Cannot find header token\");\n  await initializeSession(found[0], body.data, cred.language);\n}\n","var _defs, _path, _polygon, _polygon2, _path2, _polygon3, _polygon4, _path3, _path4, _path5, _path6, _path7, _path8, _path9;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Golden_Grid\",\n    \"data-name\": \"Golden Grid\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 666.85 257.93\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1,.cls-2{fill:#0073eb;stroke:#fff;stroke-miterlimit:10;stroke-width:3px;}.cls-2{opacity:0.7;}.cls-3{fill:#1a1a1a;}\"))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M111.83,48.88h0l-8.38,20.22L98.27,81.58l0,0v.08L91.48,98h0L90,101.55h0l-2.9,7-.6-2.23-.64-2.43-4-15.27L71,47.66l-1.6-6.1L63.79,20.1Z\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"cls-2\",\n    points: \"87.09 108.56 85.99 107.12 84.4 105.05 77.65 96.2 71.96 88.74 50.31 60.32 41.21 48.39 71.04 47.66 81.83 88.63 85.85 103.9 86.49 106.33 87.09 108.56\"\n  })), _polygon2 || (_polygon2 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"cls-1\",\n    points: \"67.95 154.72 59.71 174.61 29.58 171.5 58.55 149.76 64.48 145.32 75.17 137.31 67.96 154.69 67.95 154.72\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M134.41,137.69h0L81.75,151.16l-2.83.73-11,2.8,7.21-17.38h0l2.27-5.48h0l9.54-23,.1-.23h0l2.9-7h0L91.47,98h0l6.75-16.29h0l0-.09,5.17-12.47,8.38-20.22h0l4,15.53,4.51,17.78,4.95,19.43,3,11.89h0Z\"\n  })), _polygon3 || (_polygon3 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"cls-1\",\n    points: \"161.52 72.3 156.34 84.79 151.4 96.73 147.81 105.36 146.74 107.93 146.74 107.94 134.41 137.69 128.27 113.52 128.26 113.52 125.24 101.63 120.29 82.2 120.3 82.19 121.87 81.82 141.5 77.1 160.2 72.62 161.52 72.3\"\n  })), _polygon4 || (_polygon4 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"cls-2\",\n    points: \"187.8 89.91 179.44 91.47 170.42 93.17 170.41 93.16 151.4 96.73 156.34 84.79 161.52 72.3 162.14 72.71 187.8 89.91\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M234.77,211.91h-17.2L209.18,190H163l-8.4,21.88H137.37l38.93-98.23h19.54Zm-66-36.73H203.4l-17.33-45.27Z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M259.67,211.91H245V161.28h-5.64V148.07h11.83l6.19,6.2c5.5-4.54,12.24-7.43,18.57-7.43a20.61,20.61,0,0,1,17.34,8.66,31.53,31.53,0,0,1,21-8.66c11.7,0,22.43,8,22.43,26.55v38.52H322V173.39c0-8.39-4.54-12.93-11.28-12.93-7.57,0-12.52,4.54-12.52,10.59v40.86H283.61V173.39c0-8.39-4.68-12.93-11.29-12.93-7.42,0-12.65,4.4-12.65,10.18Z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M393.53,190.72l12.1,6.61c-4.95,8.39-14.17,16.09-26.82,16.09-18.3,0-31.37-15.41-31.37-33.29s13.07-33.57,31.23-33.57,29.44,15.27,30,31.92l-5.5,5.36H362.3c.82,9.5,8.11,15.82,16.51,15.82C384.58,199.66,390.36,196,393.53,190.72ZM363,172.15h30.95c-1-7.15-7.43-12.52-15.27-12.52A15.72,15.72,0,0,0,363,172.15Z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M461.76,190.72l12.11,6.61c-4.95,8.39-14.17,16.09-26.83,16.09-18.3,0-31.37-15.41-31.37-33.29s13.07-33.57,31.23-33.57,29.44,15.27,30,31.92l-5.5,5.36H430.53c.83,9.5,8.12,15.82,16.51,15.82C452.82,199.66,458.6,196,461.76,190.72Zm-30.54-18.57h30.95c-1-7.15-7.42-12.52-15.27-12.52A15.72,15.72,0,0,0,431.22,172.15Z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M489.41,113.68l4.82-5h10.18V197.6h5.64v14.31H495.6l-6.19-6.33Z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M540.73,211.91H526V161.28h-5.5V148.07h15l5.23,5.23ZM532,112a10.49,10.49,0,0,1,10.39,10.39A10.37,10.37,0,0,1,532,132.67a10.25,10.25,0,0,1-10.25-10.26A10.37,10.37,0,0,1,532,112Z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M620,180a33.36,33.36,0,1,1-33.29-33.29A33.35,33.35,0,0,1,620,180Zm-15,0c0-10.32-7.71-19.12-18.3-19.12s-18.44,8.8-18.44,19.12,7.85,19.26,18.44,19.26S605,190.31,605,180Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.31994bf9.svg\";\nexport { ForwardRef as ReactComponent };","export const BORDER_RADIUS = { borderRadius: 8 };\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport {\n  Input,\n  Layout,\n  Button,\n  Form,\n  Typography,\n  Space,\n  Row,\n  Radio,\n  Col,\n  Select,\n} from \"antd\";\nimport { Redirect } from \"react-router\";\nimport { loginWithCredentials } from \"src/api/User\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { getRandomItem, showToast } from \"src/utils/utils\";\nimport { ReactComponent as Logo } from \"src/assets/logo.svg\";\nimport \"./index.css\";\nimport \"src/i18n/config\";\nimport { useTranslation } from \"react-i18next\";\nimport { LANGUAGES, QUOTES } from \"src/utils/constants\";\nimport { BORDER_RADIUS } from \"src/styles/Layout\";\nimport { Quote } from \"src/types/Common\";\nimport { fetchFacilities } from \"src/api/Common\";\nimport { FacilityRO } from \"src/api/interfaces/apiResponses\";\n\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  session: state.session,\n});\n\nconst mapDispatchToProps = {};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst FORM_LAYOUT = {\n  labelCol: { flex: \"95px\" },\n  wrapperCol: { flex: 1 },\n};\n\nconst FORM_TAIL_LAYOUT = {\n  wrapperCol: { span: 24 },\n};\n\nfunction LoginContainer({ session }: PropsFromRedux): ReactElement {\n  const { t, i18n } = useTranslation(\"login\");\n  const { Option } = Select;\n\n  const [dailyQuote] = useState(getRandomItem(QUOTES) as Quote);\n  const [facilities, setFacilities] = useState<FacilityRO[]>([]);\n\n  useEffect(() => {\n    const getFacilityOptions = async () => {\n      const response = await fetchFacilities();\n      setFacilities(response.data.results);\n    };\n    getFacilityOptions();\n  }, []);\n\n  if (session.isLoggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const onFinish = async (values: any) => {\n    try {\n      await loginWithCredentials({\n        inmateNumber: values.inmateNumber,\n        pin: values.pin,\n        facilityId: values.facilityId,\n        language: values.language,\n      });\n    } catch (err) {\n      console.log(err);\n      showToast(\"login_error\", \"Invalid ID or Pin Code\", \"error\");\n    }\n  };\n\n  const onFinishFailed = (_errorInfo: any) => {\n    showToast(\"login_error\", \"Invalid ID or Pin Code\", \"error\");\n  };\n\n  const facilityOptions = facilities.map((facility: FacilityRO) => (\n    <Option key={`option-${facility.id}`} value={facility.id}>\n      {facility.name}\n    </Option>\n  ));\n\n  return (\n    <Content\n      className=\"d-flex flex-column banner-background\"\n      style={{\n        backgroundImage: `url(${dailyQuote.background})`,\n      }}\n    >\n      <div className=\"login-form-container m-auto\" style={BORDER_RADIUS}>\n        <Space direction=\"vertical\" size=\"large\">\n          <Row>\n            <Logo className=\"login-logo\" />\n          </Row>\n          <Row justify=\"center\">\n            <Col>\n              <Typography.Text>\n                {t(\"caption\")}{\" \"}\n                <Typography.Link href=\"/tos.pdf\" target=\"_blank\">\n                  {t(\"tos\")}{\" \"}\n                </Typography.Link>\n                {t(\"and\")}{\" \"}\n                <Typography.Link href=\"/privacy_policy.pdf\" target=\"_blank\">\n                  {t(\"pp\")}.\n                </Typography.Link>{\" \"}\n              </Typography.Text>\n            </Col>\n          </Row>\n\n          <Form\n            {...FORM_LAYOUT}\n            name=\"login\"\n            className=\"w-full rounded-lg\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            initialValues={{\n              language: Object.keys(LANGUAGES)[0],\n            }}\n          >\n            <Form.Item\n              label=\"Language\"\n              name=\"language\"\n              rules={[{ required: true, message: \"Language is required.\" }]}\n            >\n              <Radio.Group\n                className=\"w-100\"\n                onChange={(e) => i18n.changeLanguage(e.target.value)}\n              >\n                {Object.entries(LANGUAGES).map(([key, value]) => (\n                  <Radio.Button key={key} value={key}>\n                    {value}\n                  </Radio.Button>\n                ))}\n              </Radio.Group>\n            </Form.Item>\n\n            <Form.Item\n              name=\"inmateNumber\"\n              label=\"ID Number\"\n              rules={[{ required: true, message: \"Inmate ID is required.\" }]}\n            >\n              <Input\n                prefix={<UserOutlined />}\n                placeholder={t(\"placeholder.inmateNumber\")}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"PIN Code\"\n              name=\"pin\"\n              rules={[{ required: true, message: \"Password is required.\" }]}\n            >\n              <Input.Password\n                prefix={<LockOutlined />}\n                placeholder={t(\"placeholder.pinCode\")}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"facilityId\"\n              label=\"Facility\"\n              rules={[\n                { required: true, message: \"Facility must be selected.\" },\n              ]}\n            >\n              <Select>{facilityOptions}</Select>\n            </Form.Item>\n\n            <Form.Item {...FORM_TAIL_LAYOUT} style={{ borderRadius: 4 }}>\n              <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                {t(\"buttonText\")}\n              </Button>\n            </Form.Item>\n          </Form>\n        </Space>\n      </div>\n    </Content>\n  );\n}\n\nexport default connector(LoginContainer);\n","import React, { ReactElement } from \"react\";\nimport { Menu, Layout, Space, Row, Avatar, Typography, Divider } from \"antd\";\nimport {\n  EllipsisOutlined,\n  HomeOutlined,\n  ScheduleOutlined,\n} from \"@ant-design/icons\";\nimport { User } from \"src/types/User\";\nimport { ReactComponent as Logo } from \"src/assets/logo.svg\";\nimport { genFullName } from \"src/utils/utils\";\n\nconst { Sider } = Layout;\ninterface Props {\n  user: User;\n  navigate: (path: string) => void;\n}\n\nexport default function Sidebar({ user, navigate }: Props): ReactElement {\n  return (\n    <Sider theme=\"light\" className=\"shadow-lg\">\n      <Space direction=\"vertical\" className=\"w-full\">\n        <Row className=\"p-2 cursor-pointer\" onClick={() => navigate(\"/\")}>\n          <Logo className=\"login-logo\" />\n        </Row>\n        <Row\n          align=\"middle\"\n          className=\"pl-4 cursor-pointer\"\n          onClick={() => navigate(`/profile/${user.id}`)}\n        >\n          <Space>\n            <Avatar src={user.profileImagePath} size=\"large\" />\n            <Typography.Text>{genFullName(user)}</Typography.Text>\n          </Space>\n        </Row>\n        <Menu mode=\"inline\" defaultSelectedKeys={[\"home\"]} className=\"w-full\">\n          <Menu.Item\n            key=\"home\"\n            icon={<HomeOutlined />}\n            onClick={() => navigate(\"/\")}\n          >\n            Home\n          </Menu.Item>\n          <Menu.Item\n            key=\"calls\"\n            icon={<ScheduleOutlined />}\n            onClick={() => navigate(\"/calls\")}\n          >\n            Calls\n          </Menu.Item>\n          <Divider />\n          <Menu.Item\n            key=\"settings\"\n            icon={<EllipsisOutlined />}\n            onClick={() => navigate(\"/settings\")}\n          >\n            Settings\n          </Menu.Item>\n        </Menu>\n      </Space>\n    </Sider>\n  );\n}\n","import CancelCallModal from \"./CancelCallModal\";\n\nexport default CancelCallModal;\n","import { Space, Row, Col, Typography, Select } from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { differenceInMinutes, format } from \"date-fns\";\nimport React from \"react\";\nimport { genFullName } from \"src/utils/utils\";\nimport { useTranslation } from \"react-i18next\";\nimport { CancelCallModalData } from \"src/types/UI\";\n\ninterface Props {\n  data: CancelCallModalData;\n  closeModal: () => void;\n}\n\nconst CancelCallModal: React.FC<Props> = ({ data, closeModal }) => {\n  const { t } = useTranslation(\"modals\");\n  const call = data.entity;\n  const fullName = genFullName(call.userParticipants[0]);\n  const startDate = format(new Date(call.scheduledStart), \"EEEE, MMMM d\");\n  const startTime = format(new Date(call.scheduledStart), \"h:mm aaa OOO\");\n  const duration =\n    call &&\n    differenceInMinutes(\n      new Date(call.scheduledEnd),\n      new Date(call.scheduledEnd)\n    );\n  const firstName = call.userParticipants[0].firstName;\n\n  return (\n    <Modal\n      title={t(\"cancelCallModal.title\")}\n      visible={true}\n      okText={t(\"cancelCallModal.okText\")}\n      onOk={closeModal}\n      onCancel={closeModal}\n      className=\"rounded-sm\"\n    >\n      <Space direction=\"vertical\" size=\"large\">\n        <Row>\n          <Typography.Text>\n            {t(\"cancelCallModal.messageOne\", { connectionName: fullName })}\n          </Typography.Text>\n        </Row>\n        <Row>\n          <Col>\n            <div>\n              <Typography.Text>{startDate}</Typography.Text>\n            </div>\n            <div>\n              <Typography.Text>\n                {startTime} • {`${duration}mins`}\n              </Typography.Text>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Typography.Text>\n            {t(\"cancelCallModal.messageTwo\", {\n              connectionFirstName: firstName,\n            })}\n          </Typography.Text>\n        </Row>\n        <Row />\n      </Space>\n      <Select\n        className=\"w-full\"\n        placeholder={t(\"cancelCallModal.dropdownPlaceholder\")}\n      ></Select>\n    </Modal>\n  );\n};\n\nexport default CancelCallModal;\n","import InformationalModal from \"./InformationalModal\";\n\nexport default InformationalModal;\n","import React from \"react\";\nimport { Typography, Modal } from \"antd\";\nimport { ResourceModalData } from \"src/types/UI\";\n\ninterface Props {\n  data: ResourceModalData;\n  closeModal: () => void;\n}\n\nconst InformationalModal: React.FC<Props> = ({ data, closeModal }) => {\n  const resource = data.entity;\n  return (\n    <Modal\n      title={resource.title}\n      visible={true}\n      okText={resource.okBtnText || \"OK\"}\n      cancelButtonProps={{\n        style: { display: data.entity.hideCancel ? \"none\" : \"inline\" },\n      }}\n      onOk={closeModal}\n      onCancel={closeModal}\n      className=\"rounded-sm w-full\"\n    >\n      <Typography.Text>{resource.body}</Typography.Text>\n    </Modal>\n  );\n};\n\nexport default InformationalModal;\n","import TestConnectionModal from \"./TestConnectionModal\";\n\nexport default TestConnectionModal;\n","import React, { useEffect, useState } from \"react\";\nimport { Typography, Modal } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { TestConnectionModalData } from \"src/types/UI\";\nimport Video from \"src/components/Call/Video\";\nimport Audio from \"src/components/Call/Audio\";\nimport { getMedia } from \"src/utils\";\n// import { VolumeContainer } from \"src/components/Call/VolumeContainer\";\n\ninterface Props {\n  data: TestConnectionModalData;\n  closeModal: () => void;\n}\n\nconst TestConnectionModal = ({ data, closeModal }: Props) => {\n  const { t } = useTranslation(\"call\");\n\n  const [audio, setAudio] = useState<MediaStream>();\n  const [video, setVideo] = useState<MediaStream>();\n\n  useEffect(() => {\n    (async () => {\n      setAudio(await getMedia(\"audio\"));\n      setVideo(await getMedia(\"video\"));\n    })();\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      if (audio) {\n        const tracks = audio.getTracks();\n        tracks.forEach((track) => {\n          track.stop();\n        });\n      }\n      if (video) {\n        const tracks = video.getTracks();\n        tracks.forEach((track) => {\n          track.stop();\n        });\n      }\n    };\n  }, [audio, video]);\n\n  if (data.activeType !== \"TEST_CONNECTION_MODAL\") return <div />;\n\n  return (\n    <Modal\n      title={t(\"testConnection.title\")}\n      visible={true}\n      cancelButtonProps={{\n        style: { display: \"none\" },\n      }}\n      onOk={closeModal}\n      className=\"rounded-sm w-full\"\n    >\n      {video ? (\n        <Video srcObject={video} className=\"w-full\" autoPlay={true} />\n      ) : (\n        <div />\n      )}\n      {audio ? <Audio srcObject={audio} /> : <div />}\n      <Typography.Text>{\"\"}</Typography.Text>\n      {/* TODO figure out what's the best way to implement this */}\n      {/* <VolumeContainer audioVolume={audioVolume} className=\"absolute left-2 top-4\"/> */}\n    </Modal>\n  );\n};\n\nexport default TestConnectionModal;\n","import React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"src/redux\";\nimport { closeModal } from \"src/redux/modules/modalsSlice\";\nimport CancelCallModal from \"./CancelCallModal\";\nimport InformationalModal from \"./InformationalModal\";\nimport TestConnectionModal from \"./TestConnectionModal\";\n\nconst Modals: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const data = useAppSelector((state) => state.modals.data);\n\n  switch (data.activeType) {\n    case \"CANCEL_CALL_MODAL\":\n      return (\n        <CancelCallModal\n          closeModal={() => dispatch(closeModal())}\n          data={data}\n        />\n      );\n    case \"RESOURCE_MODAL\":\n      return (\n        <InformationalModal\n          closeModal={() => dispatch(closeModal())}\n          data={data}\n        />\n      );\n    case \"TEST_CONNECTION_MODAL\":\n      return (\n        <TestConnectionModal\n          closeModal={() => dispatch(closeModal())}\n          data={data}\n        />\n      );\n    default:\n      return null;\n  }\n};\n\nexport default Modals;\n","import React from \"react\";\nimport \"./App.scss\";\nimport { useAppSelector } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ConnectedRouter, push } from \"connected-react-router\";\nimport { Layout } from \"antd\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { History } from \"history\";\nimport ProtectedRoute, {\n  ProtectedRouteProps,\n} from \"./components/Hocs/ProtectedRoute\";\nimport LoginPage from \"src/pages/Login\";\nimport { ROUTES } from \"./utils/constants\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"./redux/modules/contactsSlice\";\nimport Sidebar from \"./components/Menu/Sidebar\";\nimport { useTranslation } from \"react-i18next\";\nimport Modals from \"./components/Modals/Modals\";\n\nconst mapDispatchToProps = { fetchContacts, push };\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction App({\n  history,\n  fetchContacts,\n  push,\n}: PropsFromRedux & { history: History }) {\n  const { i18n } = useTranslation();\n  const hasSideBar = useAppSelector((state) => state.common.fullScreen);\n  const session = useAppSelector((state) => state.session);\n\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\n    isAuthenticated: session.isLoggedIn, // TODO: improve this later\n    authenticationPath: \"/login\",\n  };\n\n  const showSideBar = session.isLoggedIn && !hasSideBar;\n\n  useEffect(() => {\n    if (session.isLoggedIn) fetchContacts();\n  }, [session.isLoggedIn, fetchContacts]);\n\n  useEffect(() => {\n    i18n.changeLanguage(session.language);\n  }, [session.language, i18n]);\n\n  return (\n    <ConnectedRouter history={history}>\n      <Modals />\n      <Layout style={{ minHeight: \"100vh\" }}>\n        {showSideBar && <Sidebar user={session.user} navigate={push} />}\n        <Layout>\n          <Switch>\n            <Route exact path=\"/login\" component={LoginPage}></Route>\n            {ROUTES.map((route) => (\n              <ProtectedRoute\n                exact\n                {...defaultProtectedRouteProps}\n                path={route.path}\n                component={route.component}\n                key={route.label}\n              ></ProtectedRoute>\n            ))}\n            <Redirect to=\"/login\" />\n          </Switch>\n          {/* <Footer style={{ textAlign: \"center\" }}>\n            Connect ©2021 Created by Ameelio Inc.\n          </Footer> */}\n        </Layout>\n      </Layout>\n    </ConnectedRouter>\n  );\n}\n\nexport default connector(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { history, Store } from \"./redux\";\nimport \"./styles/tailwind.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App history={history} />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}